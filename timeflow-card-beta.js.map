{"version":3,"file":"timeflow-card-beta.js","sources":["node_modules/tslib/tslib.es6.js","node_modules/@lit/reactive-element/css-tag.js","node_modules/@lit/reactive-element/reactive-element.js","node_modules/lit-html/lit-html.js","node_modules/lit-element/lit-element.js","node_modules/@lit/reactive-element/decorators/property.js","node_modules/@lit/reactive-element/decorators/state.js","src/services/Timer.ts","src/utils/DateParser.ts","src/utils/ConfigValidator.ts","src/services/TemplateService.ts","src/services/CountdownService.ts","src/utils/StyleManager.ts","src/components/ErrorDisplay.ts","src/components/TimeFlowCard.ts","src/components/ProgressCircle.ts","src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e;const r=h.fromAttribute(s,t.type);this[e]=r??this._$Ej?.get(e)??r,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.1\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.1\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.1\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","import { HomeAssistant } from '../types/index';\n\nexport interface TimerData {\n  isActive: boolean;\n  isPaused: boolean;\n  duration: number; // in seconds\n  remaining: number; // in seconds\n  finishesAt: Date | null;\n  progress: number; // 0-100\n  // NEW: Alexa-specific properties\n  isAlexaTimer?: boolean;\n  alexaDevice?: string;\n  timerLabel?: string;\n}\n\n/**\n * TimerEntityService - Enhanced with Amazon Alexa Timer support\n * Handles Home Assistant timer entity integration including Alexa Media Player timers\n */\nexport class TimerEntityService {\n  \n  /**\n   * Checks if an entity ID is a timer entity (including Alexa timers)\n   * @param entityId - Entity ID to check\n   * @returns boolean - Whether the entity is a timer\n   */\n  static isTimerEntity(entityId: string): boolean {\n    if (!entityId) return false;\n    \n    // Standard HA timers\n    if (entityId.startsWith('timer.')) return true;\n    \n    // Alexa Media Player timer sensors\n    if (entityId.includes('_next_timer') || \n        entityId.includes('alexa_timer') || \n        (entityId.startsWith('sensor.') && entityId.includes('timer'))) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  /**\n   * Checks if entity is an Alexa timer specifically\n   * @param entityId - Entity ID to check\n   * @returns boolean - Whether this is an Alexa timer\n   */\n  static isAlexaTimer(entityId: string): boolean {\n    return entityId.includes('_next_timer') || \n           entityId.includes('alexa_timer') || \n           (entityId.startsWith('sensor.') && entityId.includes('alexa') && entityId.includes('timer'));\n  }\n\n  /**\n   * Gets timer data from a Home Assistant timer entity (including Alexa timers)\n   * @param entityId - Timer entity ID\n   * @param hass - Home Assistant object\n   * @returns TimerData object with timer information\n   */\n  static getTimerData(entityId: string, hass: HomeAssistant): TimerData | null {\n    if (!hass || !entityId || !this.isTimerEntity(entityId)) {\n      return null;\n    }\n\n    const entity = hass.states[entityId];\n    if (!entity) {\n      console.warn(`Timer entity ${entityId} not found`);\n      return null;\n    }\n\n    // Handle Alexa timers differently\n    if (this.isAlexaTimer(entityId)) {\n      return this.getAlexaTimerData(entityId, entity, hass);\n    }\n\n    // Handle standard HA timers (existing logic)\n    return this.getStandardTimerData(entityId, entity);\n  }\n/**\n * Handles Alexa timer data extraction\n * @param entityId - Alexa timer entity ID\n * @param entity - Entity state object\n * @param hass - Home Assistant object\n * @returns TimerData for Alexa timer\n */\nprivate static getAlexaTimerData(entityId: string, entity: any, hass: HomeAssistant): TimerData | null {\n  const state = entity.state;\n  const attributes = entity.attributes;\n\n  // Alexa timers might be stored as timestamps or duration strings\n  let remaining = 0;\n  let duration = 0;\n  let finishesAt: Date | null = null;\n  let isActive = false;\n  \n  // Handle different Alexa timer formats\n  if (state && state !== 'unavailable' && state !== 'unknown') {\n    // Case 1: State is a timestamp (end time)\n    if (this.isISOTimestamp(state)) {\n      finishesAt = new Date(state);\n      if (!isNaN(finishesAt.getTime())) {\n        const now = Date.now();\n        remaining = Math.max(0, Math.floor((finishesAt.getTime() - now) / 1000));\n        isActive = remaining > 0;\n      }\n    }\n    // Case 2: State is duration in seconds\n    else if (!isNaN(parseFloat(state))) {\n      remaining = Math.max(0, parseFloat(state));\n      isActive = remaining > 0;\n    }\n    // Case 3: State is duration string (HH:MM:SS)\n    else if (typeof state === 'string' && state.includes(':')) {\n      remaining = this.parseDuration(state);\n      isActive = remaining > 0;\n    }\n  }\n\n  // Try to get duration from attributes\n  let hasOriginalDuration = false;\n  if (attributes.original_duration) {\n    duration = this.parseDuration(attributes.original_duration);\n    hasOriginalDuration = true;\n  } else if (attributes.duration) {\n    duration = this.parseDuration(attributes.duration);\n    hasOriginalDuration = true;\n  } else {\n    // If no original duration, we can't calculate meaningful progress\n    // For display purposes, we'll use remaining as duration, but handle progress specially\n    duration = remaining > 0 ? remaining : 0;\n    hasOriginalDuration = false;\n  }\n\n  // Calculate progress - FIXED LOGIC\n  let progress = 0;\n  if (hasOriginalDuration && duration > 0) {\n    // We have a real original duration, calculate normal progress\n    if (isActive) {\n      const elapsed = duration - remaining;\n      progress = Math.min(100, Math.max(0, (elapsed / duration) * 100));\n    } else if (remaining === 0) {\n      progress = 100; // Timer finished\n    }\n  } else {\n    // No original duration available - use time-based progress estimation\n    if (isActive && remaining > 0) {\n      // For active timers without original duration, show progress based on a reasonable assumption\n      // We'll show progress as if this is a \"medium\" timer to give visual feedback\n      // This is imperfect but better than showing 0% progress\n      const assumedTotalTime = Math.max(remaining * 2, 300); // Assume at least 5 minutes or double remaining\n      const elapsed = assumedTotalTime - remaining;\n      progress = Math.min(100, Math.max(0, (elapsed / assumedTotalTime) * 100));\n    } else if (!isActive && remaining === 0) {\n      progress = 100; // Timer finished\n    } else {\n      progress = 0; // Timer not active\n    }\n  }\n\n  // Extract Alexa-specific info\n  const alexaDevice = this.extractAlexaDevice(entityId, attributes);\n  const timerLabel = attributes.friendly_name || attributes.timer_label || this.formatAlexaTimerName(entityId);\n\n  return {\n    isActive,\n    isPaused: false, // Alexa timers don't typically pause\n    duration,\n    remaining,\n    finishesAt,\n    progress,\n    isAlexaTimer: true,\n    alexaDevice,\n    timerLabel\n  };\n}\n\n  /**\n   * Handles standard HA timer data extraction (existing logic)\n   * @param entityId - Timer entity ID\n   * @param entity - Entity state object\n   * @returns TimerData for standard timer\n   */\n  private static getStandardTimerData(entityId: string, entity: any): TimerData | null {\n    const state = entity.state;\n    const attributes = entity.attributes;\n\n    // Timer states: idle, active, paused\n    const isActive = state === 'active';\n    const isPaused = state === 'paused';\n    const isIdle = state === 'idle';\n\n    // Get duration from attributes (in seconds or HH:MM:SS format)\n    let duration = 0;\n    if (attributes.duration) {\n      duration = this.parseDuration(attributes.duration);\n    }\n\n    // Calculate remaining time\n    let remaining = 0;\n    let finishesAt: Date | null = null;\n\n    if (isActive || isPaused) {\n      if (attributes.finishes_at) {\n        // Parse finishes_at timestamp\n        finishesAt = new Date(attributes.finishes_at);\n        if (!isNaN(finishesAt.getTime())) {\n          remaining = Math.max(0, Math.floor((finishesAt.getTime() - Date.now()) / 1000));\n        }\n      } else if (attributes.remaining) {\n        // Fallback to remaining attribute if available\n        remaining = this.parseDuration(attributes.remaining);\n      }\n    }\n\n    // Calculate progress (0-100)\n    let progress = 0;\n    if (duration > 0) {\n      if (isIdle) {\n        progress = 0;\n      } else {\n        const elapsed = duration - remaining;\n        progress = Math.min(100, Math.max(0, (elapsed / duration) * 100));\n      }\n    }\n\n    return {\n      isActive,\n      isPaused,\n      duration,\n      remaining,\n      finishesAt,\n      progress,\n      isAlexaTimer: false\n    };\n  }\n\n  /**\n   * Checks if a string is an ISO timestamp\n   * @param str - String to check\n   * @returns boolean - Whether string is ISO timestamp\n   */\n  private static isISOTimestamp(str: string): boolean {\n    // Check for ISO 8601 format\n    const isoRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?([+-]\\d{2}:\\d{2}|Z)?$/;\n    return isoRegex.test(str);\n  }\n\n  /**\n   * Extracts Alexa device name from entity ID or attributes\n   * @param entityId - Entity ID\n   * @param attributes - Entity attributes\n   * @returns string - Device name\n   */\n  private static extractAlexaDevice(entityId: string, attributes: any): string {\n    // Try to extract from entity ID\n    if (entityId.includes('echo')) {\n      const match = entityId.match(/echo[^_]*(?:_\\w+)*/);\n      if (match) return match[0].replace(/_/g, ' ');\n    }\n    \n    // Try from attributes\n    if (attributes.device_name) return attributes.device_name;\n    if (attributes.device) return attributes.device;\n    \n    // Fallback\n    return 'Alexa Device';\n  }\n\n  /**\n   * Formats Alexa timer name from entity ID\n   * @param entityId - Entity ID\n   * @returns string - Formatted name\n   */\n  private static formatAlexaTimerName(entityId: string): string {\n    return entityId\n      .replace(/^sensor\\./, '')\n      .replace(/_next_timer$/, '')\n      .replace(/_timer$/, '')\n      .replace(/_/g, ' ')\n      .replace(/\\b\\w/g, l => l.toUpperCase());\n  }\n\n  /**\n   * Parses duration from various formats (seconds, HH:MM:SS, etc.)\n   * @param duration - Duration value to parse\n   * @returns number - Duration in seconds\n   */\n  private static parseDuration(duration: any): number {\n    if (typeof duration === 'number') {\n      return duration;\n    }\n\n    if (typeof duration !== 'string') {\n      return 0;\n    }\n\n    // Handle HH:MM:SS format\n    if (duration.includes(':')) {\n      const parts = duration.split(':').map(Number);\n      if (parts.length === 3) {\n        // HH:MM:SS\n        return parts[0] * 3600 + parts[1] * 60 + parts[2];\n      } else if (parts.length === 2) {\n        // MM:SS\n        return parts[0] * 60 + parts[1];\n      }\n    }\n\n    // Try to parse as number (seconds)\n    const seconds = parseFloat(duration);\n    return isNaN(seconds) ? 0 : seconds;\n  }\n\n  /**\n   * Formats remaining time as human-readable string\n   * @param remaining - Remaining time in seconds\n   * @param showSeconds - Whether to include seconds in output\n   * @returns string - Formatted time string\n   */\n  static formatRemainingTime(remaining: number, showSeconds: boolean = true): string {\n    if (remaining <= 0) {\n      return '0:00';\n    }\n\n    const hours = Math.floor(remaining / 3600);\n    const minutes = Math.floor((remaining % 3600) / 60);\n    const seconds = Math.floor(remaining % 60);\n\n    if (hours > 0) {\n      if (showSeconds) {\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n      } else {\n        return `${hours}:${minutes.toString().padStart(2, '0')}`;\n      }\n    } else {\n      if (showSeconds) {\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n      } else {\n        return `${minutes}m`;\n      }\n    }\n  }\n\n  /**\n   * Gets appropriate title text for timer entity (enhanced for Alexa)\n   * @param entityId - Timer entity ID\n   * @param hass - Home Assistant object\n   * @param customTitle - Custom title override\n   * @returns string - Title text\n   */\n  static getTimerTitle(entityId: string, hass: HomeAssistant, customTitle?: string): string {\n    if (customTitle) {\n      return customTitle;\n    }\n\n    if (!hass || !entityId) {\n      return 'Timer';\n    }\n\n    const entity = hass.states[entityId];\n    if (!entity) {\n      return 'Timer';\n    }\n\n    // Handle Alexa timers\n    if (this.isAlexaTimer(entityId)) {\n      const timerData = this.getAlexaTimerData(entityId, entity, hass);\n      if (timerData?.timerLabel) {\n        return timerData.timerLabel;\n      }\n      return this.formatAlexaTimerName(entityId);\n    }\n\n    // Use friendly name or fall back to entity ID\n    return entity.attributes.friendly_name || entityId.replace('timer.', '').replace(/_/g, ' ');\n  }\n\n  /**\n   * Gets appropriate subtitle text for timer entity (enhanced for Alexa)\n   * @param timerData - Timer data object\n   * @param showSeconds - Whether to show seconds in remaining time\n   * @returns string - Subtitle text\n   */\n  static getTimerSubtitle(timerData: TimerData, showSeconds: boolean = true): string {\n    if (!timerData) {\n      return 'Timer not found';\n    }\n\n    // Handle Alexa timers\n    if (timerData.isAlexaTimer) {\n      if (timerData.isActive && timerData.remaining > 0) {\n        const remainingText = this.formatRemainingTime(timerData.remaining, showSeconds);\n        return `${remainingText} remaining${timerData.alexaDevice ? ` on ${timerData.alexaDevice}` : ''}`;\n      } else if (timerData.remaining === 0 && timerData.progress >= 100) {\n        return `Timer finished${timerData.alexaDevice ? ` on ${timerData.alexaDevice}` : ''}`;\n      } else {\n        return `Timer ready${timerData.alexaDevice ? ` on ${timerData.alexaDevice}` : ''}`;\n      }\n    }\n\n    // Handle standard HA timers\n    if (timerData.isActive) {\n      const remainingText = this.formatRemainingTime(timerData.remaining, showSeconds);\n      return `${remainingText} remaining`;\n    } else if (timerData.isPaused) {\n      const remainingText = this.formatRemainingTime(timerData.remaining, showSeconds);\n      return `Paused - ${remainingText} left`;\n    } else {\n      // Idle state\n      if (timerData.duration > 0) {\n        const durationText = this.formatRemainingTime(timerData.duration, showSeconds);\n        return `Ready - ${durationText}`;\n      } else {\n        return 'Timer ready';\n      }\n    }\n  }\n\n  /**\n   * Checks if timer is expired/finished (enhanced for Alexa)\n   * @param timerData - Timer data object\n   * @returns boolean - Whether timer is expired\n   */\n  static isTimerExpired(timerData: TimerData): boolean {\n    if (!timerData) return false;\n    \n    // For Alexa timers, check if remaining time is 0 and progress is 100%\n    if (timerData.isAlexaTimer) {\n      return timerData.remaining === 0 && timerData.progress >= 100;\n    }\n    \n    // For standard timers\n    return !timerData.isActive && !timerData.isPaused && timerData.progress >= 100;\n  }\n\n  /**\n   * Gets timer state color based on current state (enhanced for Alexa)\n   * @param timerData - Timer data object\n   * @param defaultColor - Default color to use\n   * @returns string - Color value\n   */\n  static getTimerStateColor(timerData: TimerData, defaultColor: string = '#4caf50'): string {\n    if (!timerData) {\n      return defaultColor;\n    }\n\n    // Alexa-specific coloring\n    if (timerData.isAlexaTimer) {\n      if (timerData.isActive && timerData.remaining > 0) {\n        return '#00d4ff'; // Alexa blue for active\n      } else if (this.isTimerExpired(timerData)) {\n        return '#ff4444'; // Red for expired\n      } else {\n        return '#888888'; // Gray for inactive\n      }\n    }\n\n    // Standard timer coloring\n    if (timerData.isActive) {\n      return '#4caf50'; // Green for active\n    } else if (timerData.isPaused) {\n      return '#ff9800'; // Orange for paused\n    } else if (this.isTimerExpired(timerData)) {\n      return '#f44336'; // Red for expired\n    } else {\n      return '#9e9e9e'; // Gray for idle\n    }\n  }\n\n  /**\n   * AUTO-DISCOVERY: Attempts to find Alexa timer entities in Home Assistant\n   * @param hass - Home Assistant object\n   * @returns string[] - Array of potential Alexa timer entity IDs\n   */\n  static discoverAlexaTimers(hass: HomeAssistant): string[] {\n    if (!hass || !hass.states) return [];\n    \n    const alexaTimers: string[] = [];\n    \n    for (const entityId in hass.states) {\n      if (this.isAlexaTimer(entityId)) {\n        const entity = hass.states[entityId];\n        // Only include if the entity has a meaningful state\n        if (entity.state && \n            entity.state !== 'unavailable' && \n            entity.state !== 'unknown' && \n            entity.state !== 'none') {\n          alexaTimers.push(entityId);\n        }\n      }\n    }\n    \n    return alexaTimers;\n  }\n}","/**\n * DateParser - Enhanced date parsing utility with a more streamlined fallback system\n * Handles cross-browser compatibility and edge cases for date string parsing\n */\nexport class DateParser {\n  /**\n   * Main entry point for date parsing with a hybrid approach\n   * @param {string} dateString - ISO date string to parse\n   * @returns {number} - Unix timestamp in milliseconds\n   */\n  static parseISODate(dateString: string): number {\n    // First, try a robust manual parsing for common ISO formats.\n    // This is more consistent across browsers than new Date().\n    try {\n      const manualResult = this.parseISODateManual(dateString);\n      if (!isNaN(manualResult)) {\n        return manualResult;\n      }\n    } catch (e) {\n      // Fall through to other methods if manual parsing fails\n    }\n\n    // Second, try the native Date constructor, which can handle more formats.\n    const nativeResult = new Date(dateString);\n    if (!isNaN(nativeResult.getTime()) && this.isValidDateResult(nativeResult, dateString)) {\n      return nativeResult.getTime();\n    }\n    \n    // If all else fails, use the final fallback.\n    return this.parseISODateFallback(dateString);\n  }\n\n  /**\n   * Validates that a parsed date result is reasonable\n   * @param {Date} dateObj - Parsed date object\n   * @param {string} originalString - Original date string\n   * @returns {boolean} - Whether the date is valid\n   */\n  static isValidDateResult(dateObj: Date, originalString: string): boolean {\n    const timestamp = dateObj.getTime();\n    \n    // Check for reasonable date range (1970-2100)\n    const minTimestamp = new Date('1970-01-01').getTime();\n    const maxTimestamp = new Date('2100-12-31').getTime();\n    \n    if (timestamp < minTimestamp || timestamp > maxTimestamp) {\n      return false;\n    }\n    \n    // Check for February 29th in non-leap years\n    if (typeof originalString === 'string' && originalString.includes('02-29')) {\n      const year = dateObj.getFullYear();\n      if (!this.isLeapYear(year)) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n  /**\n   * Check if a year is a leap year\n   * @param {number} year - Year to check\n   * @returns {boolean} - Whether the year is a leap year\n   */\n  static isLeapYear(year: number): boolean {\n    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n  }\n\n  /**\n   * Enhanced manual parsing with better error handling\n   * @param {string} dateString - Date string to parse\n   * @returns {number} - Unix timestamp\n   */\n  static parseISODateManual(dateString: string): number {\n    if (typeof dateString === 'string' && dateString.includes('T')) {\n      // Check if the string contains timezone information (Z, +XX:XX, -XX:XX)\n      const hasTimezone = /[+-]\\d{2}:\\d{2}$|Z$/.test(dateString);\n      \n      if (hasTimezone) {\n        // For ISO strings with timezone info, use native Date parsing to preserve timezone\n        return new Date(dateString).getTime();\n      } else {\n        // For timezone-less ISO strings, use manual parsing for cross-platform consistency\n        const [datePart, timePart] = dateString.split('T');\n        const [year, month, day] = datePart.split('-').map(Number);\n        \n        // Validate date components\n        if (!this.isValidDateComponents(year, month, day)) {\n          throw new Error('Invalid date components');\n        }\n        \n        if (timePart && timePart.includes(':')) {\n          const [hour, minute, second] = timePart.split(':').map(parseFloat);\n          \n          // Validate time components\n          if (!this.isValidTimeComponents(hour, minute, second)) {\n            throw new Error('Invalid time components');\n          }\n          \n          return new Date(year, month - 1, day, hour, minute, second || 0).getTime();\n        } else {\n          return new Date(year, month - 1, day).getTime();\n        }\n      }\n    } else {\n      // Fallback to regular parsing for other formats\n      return new Date(dateString).getTime();\n    }\n  }\n\n  /**\n   * Validates date components\n   * @param {number} year - Year component\n   * @param {number} month - Month component (1-12)\n   * @param {number} day - Day component\n   * @returns {boolean} - Whether components are valid\n   */\n  static isValidDateComponents(year: number, month: number, day: number): boolean {\n    if (isNaN(year) || isNaN(month) || isNaN(day)) return false;\n    if (year < 1970 || year > 2100) return false;\n    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n    \n    // Check days in month\n    const daysInMonth = [31, this.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (day > daysInMonth[month - 1]) return false;\n    \n    return true;\n  }\n\n  /**\n   * Validates time components\n   * @param {number} hour - Hour component\n   * @param {number} minute - Minute component\n   * @param {number} second - Second component\n   * @returns {boolean} - Whether components are valid\n   */\n  static isValidTimeComponents(hour: any, minute: any, second: any): boolean {\n    const h = parseInt(hour);\n    const m = parseInt(minute);\n    const s = parseInt(second);\n    \n    if (isNaN(h) || isNaN(m) || isNaN(s)) return false;\n    if (h < 0 || h > 23) return false;\n    if (m < 0 || m > 59) return false;\n    if (s < 0 || s > 59) return false;\n    \n    return true;\n  }\n\n  /**\n   * Final fallback parsing method\n   * @param {string} dateString - Date string to parse\n   * @returns {number} - Unix timestamp\n   */\n  static parseISODateFallback(dateString: string): number {\n    try {\n      const timestamp = Date.parse(dateString);\n      if (!isNaN(timestamp)) {\n        return timestamp;\n      }\n      \n      // Last resort: return current time with warning\n      console.warn('TimeFlow Card: Could not parse date, using current time as fallback:', dateString);\n      return Date.now();\n    } catch (error) {\n      console.error('TimeFlow Card: All date parsing methods failed:', error);\n      return Date.now();\n    }\n  }\n}","/**\n * ConfigValidator - Comprehensive input validation for TimeFlow Card configuration\n * Ensures security, type safety, and data integrity with graceful error handling\n */\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  severity: 'critical' | 'warning' | 'info';\n  suggestion?: string;\n  value?: any;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: ValidationError[];\n  hasCriticalErrors: boolean;\n  hasWarnings: boolean;\n  safeConfig?: any;\n}\n\nexport class ConfigValidator {\n  /**\n   * Comprehensive input validation for configuration with severity levels\n   * @param {Object} config - Configuration object to validate\n   * @returns {ValidationResult} - Detailed validation result\n   */\n  static validateConfig(config: any): ValidationResult {\n    const errors: ValidationError[] = [];\n    \n    // Check if config is null or undefined\n    if (!config) {\n      errors.push({\n        field: 'config',\n        message: 'Configuration object is missing or empty',\n        severity: 'critical',\n        suggestion: 'Provide a valid configuration object with at least a target_date field.',\n        value: config\n      });\n      return {\n        isValid: false,\n        errors,\n        hasCriticalErrors: true,\n        hasWarnings: false\n      };\n    }\n    \n    // Validate target_date (required field, unless using timer_entity or auto_discover_alexa)\n    if (config.target_date) {\n      if (!this.isValidDateInput(config.target_date)) {\n        errors.push({\n          field: 'target_date',\n          message: 'Invalid target_date format',\n          severity: 'critical',\n          suggestion: 'Use ISO date string (2025-12-31T23:59:59), entity ID (sensor.my_date), or template ({{ states(\"sensor.date\") }}).',\n          value: config.target_date\n        });\n      }\n    } else if (!config.timer_entity && !config.auto_discover_alexa) {\n      // target_date is only required if timer_entity and auto_discover_alexa are not provided\n      errors.push({\n        field: 'target_date',\n        message: 'Either \"target_date\", \"timer_entity\", or \"auto_discover_alexa\" must be provided',\n        severity: 'critical',\n        suggestion: 'Add target_date field with a valid date value like \"2025-12-31T23:59:59\" OR specify a timer_entity like \"timer.my_timer\" OR enable auto_discover_alexa.',\n        value: undefined\n      });\n    }\n    \n    // Validate timer_entity if provided\n    if (config.timer_entity && !this.isValidEntityId(config.timer_entity)) {\n      errors.push({\n        field: 'timer_entity',\n        message: 'Invalid timer_entity format',\n        severity: 'warning',\n        suggestion: 'Use a valid entity ID like \"timer.my_timer\" or \"sensor.alexa_timer\".',\n        value: config.timer_entity\n      });\n    }\n    \n    // Validate creation_date if provided (optional field)\n    if (config.creation_date && !this.isValidDateInput(config.creation_date)) {\n      errors.push({\n        field: 'creation_date',\n        message: 'Invalid creation_date format',\n        severity: 'warning',\n        suggestion: 'Use ISO date string, entity ID, or template. This field is optional.',\n        value: config.creation_date\n      });\n    }\n    \n    // Validate colors\n    const colorFields = ['color', 'background_color', 'progress_color'];\n    colorFields.forEach(field => {\n      if (config[field] && !this.isValidColorInput(config[field])) {\n        errors.push({\n          field,\n          message: `Invalid ${field} format`,\n          severity: 'warning',\n          suggestion: 'Use hex (#ff0000), rgb/rgba, hsl/hsla, CSS color name, entity ID, or template.',\n          value: config[field]\n        });\n      }\n    });\n    \n    // Validate dimensions\n    const dimensionFields = ['width', 'height', 'icon_size'];\n    dimensionFields.forEach(field => {\n      if (config[field] && !this.isValidDimensionInput(config[field])) {\n        errors.push({\n          field,\n          message: `Invalid ${field} format`,\n          severity: 'warning',\n          suggestion: 'Use pixel values (100px), percentages (50%), or CSS units (2rem).',\n          value: config[field]\n        });\n      }\n    });\n    \n    // Validate aspect_ratio\n    if (config.aspect_ratio && !this.isValidAspectRatioInput(config.aspect_ratio)) {\n      errors.push({\n        field: 'aspect_ratio',\n        message: 'Invalid aspect_ratio format',\n        severity: 'warning',\n        suggestion: 'Use format like \"16/9\", \"4/3\", or \"1/1\".',\n        value: config.aspect_ratio\n      });\n    }\n    \n    // Validate stroke_width\n    if (config.stroke_width !== undefined && !this.isValidNumberInput(config.stroke_width, 1, 50)) {\n      errors.push({\n        field: 'stroke_width',\n        message: 'Invalid stroke_width value',\n        severity: 'warning',\n        suggestion: 'Must be a number between 1 and 50.',\n        value: config.stroke_width\n      });\n    }\n    \n    // Validate boolean fields\n    const booleanFields = ['show_months', 'show_days', 'show_hours', 'show_minutes', 'show_seconds', 'expired_animation', 'show_progress_text'];\n    booleanFields.forEach(field => {\n      if (config[field] !== undefined && !this.isValidBooleanInput(config[field])) {\n        errors.push({\n          field,\n          message: `Invalid ${field} value`,\n          severity: 'warning',\n          suggestion: 'Must be true or false (boolean value).',\n          value: config[field]\n        });\n      }\n    });\n    \n    // Validate text fields for XSS prevention\n    const textFields = ['title', 'subtitle', 'expired_text'];\n    textFields.forEach(field => {\n      if (config[field] && !this.isValidTextInput(config[field])) {\n        errors.push({\n          field,\n          message: `Invalid ${field} - contains potentially unsafe content`,\n          severity: 'critical',\n          suggestion: 'Remove script tags, javascript: URLs, and event handlers for security.',\n          value: config[field]\n        });\n      }\n    });\n    \n    // Validate styles object\n    if (config.styles && !this.isValidStylesInput(config.styles)) {\n      errors.push({\n        field: 'styles',\n        message: 'Invalid styles object structure',\n        severity: 'warning',\n        suggestion: 'Must contain valid style arrays for card, title, subtitle, or progress_circle.',\n        value: config.styles\n      });\n    }\n\n    // Additional helpful validations\n    this._addHelpfulValidations(config, errors);\n\n    // Generate safe config for graceful degradation\n    const safeConfig = this._generateSafeConfig(config, errors);\n\n    const criticalErrors = errors.filter(e => e.severity === 'critical');\n    const warnings = errors.filter(e => e.severity === 'warning');\n\n    return {\n      isValid: criticalErrors.length === 0 && warnings.length === 0,\n      errors,\n      hasCriticalErrors: criticalErrors.length > 0,\n      hasWarnings: warnings.length > 0,\n      safeConfig\n    };\n  }\n\n  /**\n   * Add additional helpful validations and suggestions\n   */\n  private static _addHelpfulValidations(config: any, errors: ValidationError[]): void {\n    // No additional validations needed - only validate fields that exist in config\n    // Remove unknown field warnings as requested\n  }\n\n  /**\n   * Generate a safe configuration with fallback values\n   */\n  private static _generateSafeConfig(config: any, errors: ValidationError[]): any {\n    const safeConfig = { ...config };\n    \n    // Apply safe defaults for fields with errors\n    errors.forEach(error => {\n      if (error.severity === 'critical' || error.severity === 'warning') {\n        switch (error.field) {\n          case 'target_date':\n            if (!safeConfig.target_date && !safeConfig.timer_entity) {\n              // Only set a default target_date if no timer_entity is provided\n              const tomorrow = new Date();\n              tomorrow.setDate(tomorrow.getDate() + 1);\n              safeConfig.target_date = tomorrow.toISOString();\n            }\n            break;\n          case 'background_color':\n            if (!this.isValidColorInput(safeConfig.background_color)) {\n              safeConfig.background_color = '#1a1a1a';\n            }\n            break;\n          case 'progress_color':\n            if (!this.isValidColorInput(safeConfig.progress_color)) {\n              safeConfig.progress_color = '#4caf50';\n            }\n            break;\n          case 'stroke_width':\n            if (!this.isValidNumberInput(safeConfig.stroke_width, 1, 50)) {\n              safeConfig.stroke_width = 15;\n            }\n            break;\n          case 'icon_size':\n            if (!this.isValidDimensionInput(safeConfig.icon_size)) {\n              safeConfig.icon_size = 100;\n            }\n            break;\n        }\n      }\n    });\n\n    return safeConfig;\n  }\n\n  /**\n   * Legacy method for backward compatibility - now throws ValidationError\n   * @deprecated Use validateConfig() instead which returns ValidationResult\n   */\n  static validateConfigLegacy(config: any): void {\n    const result = this.validateConfig(config);\n    if (result.hasCriticalErrors) {\n      const criticalErrors = result.errors.filter(e => e.severity === 'critical');\n      throw new Error(`Configuration validation failed:\\n• ${criticalErrors.map(e => e.message).join('\\n• ')}`);\n    }\n  }\n  \n  /**\n   * Validates date input (string, entity, or template)\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidDateInput(value: any): boolean {\n    if (!value) return false;\n    \n    // Allow templates\n    if (this.isTemplate(value)) return true;\n    \n    // Allow entity IDs\n    if (typeof value === 'string' && value.includes('.')) return true;\n    \n    // Validate date string format\n    if (typeof value === 'string') {\n      try {\n        const date = new Date(value);\n        return !isNaN(date.getTime());\n      } catch (e) {\n        return false;\n      }\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Validates color input (color value, entity, or template)\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidColorInput(value: any): boolean {\n    if (!value) return false;\n    \n    // Allow templates and entities\n    if (this.isTemplate(value) || (typeof value === 'string' && value.includes('.'))) return true;\n    \n    if (typeof value !== 'string') return false;\n    \n    // Check hex colors\n    if (/^#([0-9A-F]{3}){1,2}$/i.test(value)) return true;\n    \n    // Check rgb/rgba\n    if (/^rgba?\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*(,\\s*[\\d.]+\\s*)?\\)$/i.test(value)) return true;\n    \n    // Check hsl/hsla\n    if (/^hsla?\\(\\s*\\d+\\s*,\\s*\\d+%\\s*,\\s*\\d+%\\s*(,\\s*[\\d.]+\\s*)?\\)$/i.test(value)) return true;\n    \n    // Check CSS color names (expanded list)\n    const cssColors = [\n      'red', 'blue', 'green', 'yellow', 'orange', 'purple', 'pink', 'brown', 'black', 'white', 'gray', 'grey',\n      'cyan', 'magenta', 'lime', 'maroon', 'navy', 'olive', 'teal', 'silver', 'gold', 'indigo', 'violet',\n      'transparent', 'currentColor', 'inherit', 'initial', 'unset'\n    ];\n    \n    return cssColors.includes(value.toLowerCase());\n  }\n  \n  /**\n   * Validates dimension input (dimension value, entity, or template)\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidDimensionInput(value: any): boolean {\n    if (!value) return false;\n    \n    // Allow templates and entities\n    if (this.isTemplate(value) || (typeof value === 'string' && value.includes('.'))) return true;\n    \n    // Allow numbers\n    if (typeof value === 'number') return true;\n    \n    if (typeof value !== 'string') return false;\n    \n    // Check pixel values (0-10000px)\n    const pxMatch = value.match(/^(\\d+(?:\\.\\d+)?)px$/i);\n    if (pxMatch) {\n      const px = parseFloat(pxMatch[1]);\n      return px >= 0 && px <= 10000;\n    }\n    \n    // Check percentage values (0-1000%)\n    const percentMatch = value.match(/^(\\d+(?:\\.\\d+)?)%$/i);\n    if (percentMatch) {\n      const percent = parseFloat(percentMatch[1]);\n      return percent >= 0 && percent <= 1000;\n    }\n    \n    // Check other valid CSS units\n    const validUnits = ['em', 'rem', 'vh', 'vw', 'vmin', 'vmax', 'ch', 'ex'];\n    for (const unit of validUnits) {\n      const regex = new RegExp(`^(\\\\d+(?:\\\\.\\\\d+)?)${unit}$`, 'i');\n      const match = value.match(regex);\n      if (match) {\n        const unitValue = parseFloat(match[1]);\n        return unitValue >= 0 && unitValue <= 1000; // Reasonable bounds\n      }\n    }\n    \n    // Check for 'auto', 'fit-content', etc.\n    const validKeywords = ['auto', 'fit-content', 'min-content', 'max-content'];\n    return validKeywords.includes(value.toLowerCase());\n  }\n  \n  /**\n   * Validates aspect ratio input\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidAspectRatioInput(value: any): boolean {\n    if (!value) return false;\n    \n    // Allow templates and entities\n    if (this.isTemplate(value) || (typeof value === 'string' && value.includes('.'))) return true;\n    \n    if (typeof value !== 'string') return false;\n    \n    // Check aspect ratio format: number/number\n    const aspectMatch = value.match(/^(\\d+(?:\\.\\d+)?)\\/(\\d+(?:\\.\\d+)?)$/);\n    if (aspectMatch) {\n      const width = parseFloat(aspectMatch[1]);\n      const height = parseFloat(aspectMatch[2]);\n      return width > 0 && height > 0 && width <= 20 && height <= 20; // Reasonable bounds\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Validates number input with optional bounds\n   * @param {*} value - Value to validate\n   * @param {number} min - Minimum allowed value\n   * @param {number} max - Maximum allowed value\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidNumberInput(value: any, min: number = -Infinity, max: number = Infinity): boolean {\n    if (value === undefined || value === null) return false;\n    \n    // Allow templates and entities\n    if (typeof value === 'string') {\n      if (this.isTemplate(value) || value.includes('.')) return true;\n      // Try to parse string numbers\n      const parsed = parseFloat(value);\n      return !isNaN(parsed) && parsed >= min && parsed <= max;\n    }\n    \n    return typeof value === 'number' && !isNaN(value) && value >= min && value <= max;\n  }\n  \n  /**\n   * Validates boolean input\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidBooleanInput(value: any): boolean {\n    return typeof value === 'boolean';\n  }\n  \n  /**\n   * Validates text input for XSS prevention\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is valid\n   */\n  static isValidTextInput(value: any): boolean {\n    if (!value) return true;\n    \n    // Allow templates and entities\n    if (this.isTemplate(value) || (typeof value === 'string' && value.includes('.'))) return true;\n    \n    if (typeof value !== 'string') return false;\n    \n    // Check for potentially dangerous content\n    const dangerousPatterns = [\n      /<script/i,\n      /javascript:/i,\n      /vbscript:/i,\n      /on\\w+\\s*=/i, // Event handlers like onclick=\n      /<iframe/i,\n      /<object/i,\n      /<embed/i,\n      /<form/i\n    ];\n    \n    return !dangerousPatterns.some(pattern => pattern.test(value));\n  }\n  \n  /**\n   * Validates styles object structure\n   * @param {*} styles - Styles object to validate\n   * @returns {boolean} - Whether the styles are valid\n   */\n  static isValidStylesInput(styles: any): boolean {\n    if (!styles || typeof styles !== 'object') return false;\n    \n    const validStyleKeys = ['card', 'title', 'subtitle', 'progress_circle'];\n    \n    // Check that all keys are valid\n    const styleKeys = Object.keys(styles);\n    if (!styleKeys.every(key => validStyleKeys.includes(key))) return false;\n    \n    // Check that all values are arrays\n    return styleKeys.every(key => Array.isArray(styles[key]));\n  }\n\n  /**\n   * Detects if a value contains Home Assistant templates\n   * @param {*} value - Value to check\n   * @returns {boolean} - Whether the value is a template\n   */\n  static isTemplate(value: any): boolean {\n    return typeof value === 'string' && \n           value.includes('{{') && \n           value.includes('}}');\n  }\n\n  /**\n   * Validates entity ID format\n   * @param {*} value - Value to validate\n   * @returns {boolean} - Whether the value is a valid entity ID\n   */\n  static isValidEntityId(value: any): boolean {\n    if (!value || typeof value !== 'string') return false;\n    \n    // Allow templates\n    if (this.isTemplate(value)) return true;\n    \n    // Basic entity ID format: domain.entity_name\n    const entityPattern = /^[a-z_]+\\.[a-z0-9_]+$/;\n    return entityPattern.test(value);\n  }\n}\n","import { HomeAssistant, TimeFlowCard } from '../types/index';\n\ninterface CacheEntry {\n  result: any;\n  timestamp: number;\n}\n\n/**\n * TemplateService - Handles Home Assistant template evaluation and caching\n * Provides efficient template processing with intelligent caching\n */\nexport class TemplateService {\n  private templateResults: Map<string, CacheEntry>;\n  private templateCacheLimit: number;\n  public card?: TimeFlowCard;\n\n  constructor() {\n    this.templateResults = new Map();\n    this.templateCacheLimit = 100;\n  }\n\n  /**\n   * Evaluates a Home Assistant template using the correct API\n   * @param {string} template - Template string to evaluate\n   * @param {Object} hass - Home Assistant object\n   * @returns {Promise<*>} - Evaluated template result\n   */\n  async evaluateTemplate(template: string, hass: HomeAssistant | null): Promise<any> {\n    if (!hass || !template) {\n      return template;\n    }\n\n    // Check cache first\n    const cacheKey = template;\n    if (this.templateResults.has(cacheKey)) {\n      const cached = this.templateResults.get(cacheKey);\n      // Check if cache is still valid (within 5 seconds)\n      if (cached && Date.now() - cached.timestamp < 5000) {\n        return cached.result;\n      }\n    }\n\n    try {\n      // Validate template format before making API call\n      if (!this.isValidTemplate(template)) {\n        throw new Error('Invalid template format');\n      }\n\n      // Use callApi method like card-tools and button-card for HA templates\n      const result = await hass.callApi('POST', 'template', { \n        template: template \n      });\n      \n      // Check if the template evaluation succeeded but returned 'unknown'\n      if (result === 'unknown' || result === 'unavailable' || result === '' || result === null) {\n        // Try to extract fallback from the template itself\n        const fallback = this.extractFallbackFromTemplate(template);\n        if (fallback && fallback !== template) {\n          // Cache the fallback result\n          this.templateResults.set(cacheKey, {\n            result: fallback,\n            timestamp: Date.now()\n          });\n          \n          // Enforce cache size limits\n          this.enforceTemplateCacheLimit();\n          \n          return fallback;\n        }\n      }\n      \n      // Cache the result\n      this.templateResults.set(cacheKey, {\n        result: result,\n        timestamp: Date.now()\n      });\n      \n      // Enforce cache size limits\n      this.enforceTemplateCacheLimit();\n      \n      return result;\n    } catch (error: any) {\n      console.warn('TimeFlow Card: Template evaluation failed, using fallback:', error?.message || error);\n      \n      // Immediately return fallback instead of trying callWS\n      const fallback = this.extractFallbackFromTemplate(template);\n      \n      // Cache the fallback to prevent repeated failed calls\n      this.templateResults.set(cacheKey, {\n        result: fallback,\n        timestamp: Date.now()\n      });\n      \n      this.enforceTemplateCacheLimit();\n      return fallback;\n    }\n  }\n\n  /**\n   * Extracts fallback value from template expressions with 'or' operator\n   * @param {string} template - Template string\n   * @returns {string} - Extracted fallback value\n   */\n  extractFallbackFromTemplate(template: string): string {\n    if (!template || typeof template !== 'string') {\n      return template;\n    }\n\n    try {\n      // Remove the outer {{ }} to work with the inner expression\n      const innerTemplate = template.replace(/^\\{\\{\\s*/, '').replace(/\\s*\\}\\}$/, '').trim();\n      \n      // Look for patterns like \"states('entity') or 'fallback'\"\n      const simpleOrPattern = /^(.+?)\\s+or\\s+['\"`]([^'\"`]+)['\"`]$/;\n      const simpleOrMatch = innerTemplate.match(simpleOrPattern);\n      \n      if (simpleOrMatch && simpleOrMatch[2]) {\n        return simpleOrMatch[2];\n      }\n\n      // Look for chained or patterns like \"states('entity1') or states('entity2') or 'fallback'\"\n      const chainedOrPattern = /^(.+?)\\s+or\\s+(.+?)\\s+or\\s+['\"`]([^'\"`]+)['\"`]$/;\n      const chainedMatch = innerTemplate.match(chainedOrPattern);\n      \n      if (chainedMatch && chainedMatch[3]) {\n        return chainedMatch[3];\n      }\n\n      // Look for conditional patterns like \"'value' if condition else 'fallback'\"\n      const conditionalPattern = /^['\"`]([^'\"`]+)['\"`]\\s+if\\s+(.+?)\\s+else\\s+['\"`]([^'\"`]+)['\"`]$/;\n      const conditionalMatch = innerTemplate.match(conditionalPattern);\n      \n      if (conditionalMatch && conditionalMatch[3]) {\n        return conditionalMatch[3];\n      }\n\n      // Look for reverse conditional patterns like \"condition if test else 'fallback'\"\n      const reverseConditionalPattern = /^(.+?)\\s+if\\s+(.+?)\\s+else\\s+['\"`]([^'\"`]+)['\"`]$/;\n      const reverseMatch = innerTemplate.match(reverseConditionalPattern);\n      \n      if (reverseMatch && reverseMatch[3]) {\n        return reverseMatch[3];\n      }\n\n      // If no fallback pattern found, return a helpful message\n      return 'Unavailable';\n    } catch (error) {\n      console.warn('TimeFlow Card: Error extracting fallback from template:', error);\n      return 'Template Error';\n    }\n  }\n\n  /**\n   * Detects if a value contains Home Assistant templates\n   * @param {*} value - Value to check\n   * @returns {boolean} - Whether the value is a template\n   */\n  isTemplate(value: any): boolean {\n    return typeof value === 'string' && \n           value.includes('{{') && \n           value.includes('}}');\n  }\n\n  /**\n   * Validates template format to prevent bad API calls\n   * @param {string} template - Template string to validate\n   * @returns {boolean} - Whether template is valid\n   */\n  isValidTemplate(template: string): boolean {\n    if (!template || typeof template !== 'string') return false;\n    \n    // Check for basic template format\n    if (!template.includes('{{') || !template.includes('}}')) return false;\n    \n    // Check for balanced braces\n    const openBraces = (template.match(/\\{\\{/g) || []).length;\n    const closeBraces = (template.match(/\\}\\}/g) || []).length;\n    if (openBraces !== closeBraces) return false;\n    \n    // Check for empty template\n    const content = template.replace(/\\{\\{\\s*/, '').replace(/\\s*\\}\\}/, '').trim();\n    if (!content) return false;\n    \n    return true;\n  }\n\n  /**\n   * Enhanced value resolver that handles entities, templates, and plain strings\n   * @param {*} value - Value to resolve\n   * @returns {Promise<*>} - Resolved value\n   */\n  async resolveValue(value: string): Promise<string | undefined> {\n    if (!value) return undefined;\n\n    if (this.isTemplate(value)) {\n      const hass = this.card?.hass || null;\n      const result = await this.evaluateTemplate(value, hass);\n      return result || undefined;\n    }\n\n    // Handle entity state\n    const hass = this.card?.hass;\n    if (typeof value === 'string' && value.includes('.') && hass && hass.states[value]) {\n      const entity = hass.states[value];\n      if (!entity) {\n        console.warn(`Entity ${value} not found`);\n        return undefined;\n      }\n      return entity.state;\n    }\n\n    return value;\n  }\n\n  /**\n   * Clears template cache when entities change\n   */\n  clearTemplateCache() {\n    this.templateResults.clear();\n  }\n\n  /**\n   * Enforces template cache size limits to prevent memory growth\n   */\n  enforceTemplateCacheLimit() {\n    if (this.templateResults.size <= this.templateCacheLimit) {\n      return;\n    }\n\n    // Convert to array and sort by timestamp (oldest first)\n    const cacheEntries = Array.from(this.templateResults.entries())\n      .sort((a, b) => a[1].timestamp - b[1].timestamp);\n\n    // Remove oldest entries until we're under the limit\n    const entriesToRemove = cacheEntries.length - this.templateCacheLimit;\n    for (let i = 0; i < entriesToRemove; i++) {\n      this.templateResults.delete(cacheEntries[i][0]);\n    }\n  }\n\n  /**\n   * Checks if the current config contains any templates\n   * @param {Object} config - Configuration object\n   * @returns {boolean} - Whether config contains templates\n   */\n  hasTemplatesInConfig(config: any): boolean {\n    if (!config) return false;\n    \n    // Check common template-enabled properties\n    const templateProperties = [\n      'target_date', 'creation_date', 'title', 'subtitle',\n      'color', 'background_color', 'progress_color', 'primary_color', 'secondary_color'\n    ];\n    \n    return templateProperties.some(prop => \n      config[prop] && this.isTemplate(config[prop])\n    );\n  }\n\n  /**\n   * Escapes HTML special characters to prevent XSS and ensure proper display\n   * @param {*} text - Text to escape\n   * @returns {string} - Escaped text\n   */\n  escapeHtml(text: string): string {\n    if (text == null || text === undefined) return '';\n    return String(text)\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;');\n  }\n}","import { TemplateService } from './TemplateService';\nimport { HomeAssistant, CountdownState, CardConfig } from '../types/index';\nimport { TimerEntityService } from './Timer';\n\n/**\n * CountdownService - Enhanced with Alexa Timer support\n * Handles countdown calculations and time unit management\n * Provides clean separation of countdown logic from presentation\n */\nexport class CountdownService {\n  private templateService: any;\n  private dateParser: any;\n  private timeRemaining: CountdownState;\n  private expired: boolean;\n\n  constructor(templateService: any, dateParser: any) {\n    this.templateService = templateService;\n    this.dateParser = dateParser;\n    this.timeRemaining = { months: 0, days: 0, hours: 0, minutes: 0, seconds: 0, total: 0 };\n    this.expired = false;\n  }\n\n  /**\n   * Updates the countdown based on current configuration (enhanced for Alexa)\n   * @param {Object} config - Card configuration\n   * @param {Object} hass - Home Assistant object\n   * @returns {Promise<Object>} - Time remaining object\n   */\n  async updateCountdown(config: CardConfig, hass: HomeAssistant | null): Promise<CountdownState> {\n    try {\n      // TIMER ENTITY SUPPORT (including Alexa timers)\n      if (config.timer_entity && hass) {\n        const timerData = TimerEntityService.getTimerData(config.timer_entity, hass);\n        if (timerData) {\n          // Convert TimerData to CountdownState\n          this.timeRemaining = this._timerDataToCountdownState(timerData);\n          this.expired = TimerEntityService.isTimerExpired(timerData);\n          return this.timeRemaining;\n        }\n      }\n      \n      // AUTO-DISCOVERY: If no timer_entity specified, try to find Alexa timers\n      if (!config.timer_entity && config.auto_discover_alexa && hass) {\n        const alexaTimers = TimerEntityService.discoverAlexaTimers(hass);\n        if (alexaTimers.length > 0) {\n          // Use the first active Alexa timer found\n          const firstActiveTimer = alexaTimers.find(entityId => {\n            const timerData = TimerEntityService.getTimerData(entityId, hass);\n            return timerData && timerData.isActive;\n          });\n          \n          if (firstActiveTimer) {\n            const timerData = TimerEntityService.getTimerData(firstActiveTimer, hass);\n            if (timerData) {\n              this.timeRemaining = this._timerDataToCountdownState(timerData);\n              this.expired = TimerEntityService.isTimerExpired(timerData);\n              return this.timeRemaining;\n            }\n          }\n        }\n      }\n      \n      if (!config.target_date) return this.timeRemaining;\n      \n      const now = new Date().getTime();\n      const targetDateValue = await this.templateService.resolveValue(config.target_date);\n      \n      if (!targetDateValue) {\n        console.warn('TimeFlow Card: Target date could not be resolved. Check your entity or date format.');\n        return this.timeRemaining;\n      }\n      \n      // Use the helper method for consistent date parsing\n      const targetDate = this.dateParser.parseISODate(targetDateValue);\n      \n      if (isNaN(targetDate)) {\n        console.warn('TimeFlow Card: Invalid target date format:', targetDateValue);\n        return this.timeRemaining;\n      }\n      \n      const difference = targetDate - now;\n\n      if (difference > 0) {\n        // Calculate time units based on what's enabled - cascade disabled units into enabled ones\n        const { show_months, show_days, show_hours, show_minutes, show_seconds } = config;\n        \n        let totalMilliseconds = difference;\n        let months = 0, days = 0, hours = 0, minutes = 0, seconds = 0;\n        \n        // Find the largest enabled unit and calculate everything from there\n        if (show_months) {\n          months = Math.floor(totalMilliseconds / (1000 * 60 * 60 * 24 * 30.44)); // Average month length\n          totalMilliseconds %= (1000 * 60 * 60 * 24 * 30.44);\n        }\n        \n        if (show_days) {\n          days = Math.floor(totalMilliseconds / (1000 * 60 * 60 * 24));\n          totalMilliseconds %= (1000 * 60 * 60 * 24);\n        } else if (show_months && !show_days) {\n          // If days are disabled but months are enabled, add days to months\n          const extraDays = Math.floor(totalMilliseconds / (1000 * 60 * 60 * 24));\n          months += Math.floor(extraDays / 30.44);\n          totalMilliseconds %= (1000 * 60 * 60 * 24);\n        }\n        \n        if (show_hours) {\n          hours = Math.floor(totalMilliseconds / (1000 * 60 * 60));\n          totalMilliseconds %= (1000 * 60 * 60);\n        } else if ((show_months || show_days) && !show_hours) {\n          // If hours are disabled but larger units are enabled, add hours to the largest enabled unit\n          const extraHours = Math.floor(totalMilliseconds / (1000 * 60 * 60));\n          if (show_days) {\n            days += Math.floor(extraHours / 24);\n          } else if (show_months) {\n            months += Math.floor(extraHours / (24 * 30.44));\n          }\n          totalMilliseconds %= (1000 * 60 * 60);\n        }\n        \n        if (show_minutes) {\n          minutes = Math.floor(totalMilliseconds / (1000 * 60));\n          totalMilliseconds %= (1000 * 60);\n        } else if ((show_months || show_days || show_hours) && !show_minutes) {\n          // If minutes are disabled but larger units are enabled, add minutes to the largest enabled unit\n          const extraMinutes = Math.floor(totalMilliseconds / (1000 * 60));\n          if (show_hours) {\n            hours += Math.floor(extraMinutes / 60);\n          } else if (show_days) {\n            days += Math.floor(extraMinutes / (60 * 24));\n          } else if (show_months) {\n            months += Math.floor(extraMinutes / (60 * 24 * 30.44));\n          }\n          totalMilliseconds %= (1000 * 60);\n        }\n        \n        if (show_seconds) {\n          seconds = Math.floor(totalMilliseconds / 1000);\n        } else if ((show_months || show_days || show_hours || show_minutes) && !show_seconds) {\n          // If seconds are disabled but larger units are enabled, add seconds to the largest enabled unit\n          const extraSeconds = Math.floor(totalMilliseconds / 1000);\n          if (show_minutes) {\n            minutes += Math.floor(extraSeconds / 60);\n          } else if (show_hours) {\n            hours += Math.floor(extraSeconds / (60 * 60));\n          } else if (show_days) {\n            days += Math.floor(extraSeconds / (60 * 60 * 24));\n          } else if (show_months) {\n            months += Math.floor(extraSeconds / (60 * 60 * 24 * 30.44));\n          }\n        }\n\n        this.timeRemaining = { months, days, hours, minutes, seconds, total: difference };\n        this.expired = false;\n      } else {\n        this.timeRemaining = { months: 0, days: 0, hours: 0, minutes: 0, seconds: 0, total: 0 };\n        this.expired = true;\n      }\n      \n      return this.timeRemaining;\n    } catch (error) {\n      console.error('TimeFlow Card: Error in updateCountdown:', error);\n      return this.timeRemaining;\n    }\n  }\n\n  /**\n   * Calculates progress percentage (enhanced for Alexa)\n   * @param {Object} config - Card configuration\n   * @param {Object} hass - Home Assistant object\n   * @returns {Promise<number>} - Progress percentage (0-100)\n   */\n  async calculateProgress(config: CardConfig, hass: HomeAssistant | null): Promise<number> {\n    // TIMER ENTITY SUPPORT (including Alexa timers)\n    if (config.timer_entity && hass) {\n      const timerData = TimerEntityService.getTimerData(config.timer_entity, hass);\n      if (!timerData) return 0;\n      return timerData.progress;\n    }\n    \n    // AUTO-DISCOVERY: Try Alexa timers if enabled\n    if (!config.timer_entity && config.auto_discover_alexa && hass) {\n      const alexaTimers = TimerEntityService.discoverAlexaTimers(hass);\n      if (alexaTimers.length > 0) {\n        const firstActiveTimer = alexaTimers.find(entityId => {\n          const timerData = TimerEntityService.getTimerData(entityId, hass);\n          return timerData && timerData.isActive;\n        });\n        \n        if (firstActiveTimer) {\n          const timerData = TimerEntityService.getTimerData(firstActiveTimer, hass);\n          if (timerData) return timerData.progress;\n        }\n      }\n    }\n    \n    const targetDateValue = await this.templateService.resolveValue(config.target_date);\n    if (!targetDateValue) return 0;\n    \n    // Use the helper method for consistent date parsing\n    const targetDate = this.dateParser.parseISODate(targetDateValue);\n    const now = Date.now();\n    \n    let creationDate;\n    if (config.creation_date) {\n      const creationDateValue = await this.templateService.resolveValue(config.creation_date);\n      \n      if (creationDateValue) {\n        // Use the helper method for consistent date parsing\n        creationDate = this.dateParser.parseISODate(creationDateValue);\n      } else {\n        creationDate = now;\n      }\n    } else {\n      creationDate = now; // Fallback to now if somehow no creation date\n    }\n    \n    const totalDuration = targetDate - creationDate;\n    if (totalDuration <= 0) return 100;\n    \n    const elapsed = now - creationDate;\n    const progress = Math.min(100, Math.max(0, (elapsed / totalDuration) * 100));\n    \n    return this.expired ? 100 : progress;\n  }\n\n  /**\n   * Gets the main display value and label (enhanced for Alexa)\n   * @param {Object} config - Card configuration\n   * @param {Object} hass - Home Assistant object (NEW parameter)\n   * @returns {Object} - Object with value and label properties\n   */\n  getMainDisplay(config: CardConfig, hass?: HomeAssistant | null): { value: string; label: string } {\n    // TIMER ENTITY SUPPORT (including Alexa timers)\n    if (config.timer_entity && hass) {\n      const timerData = TimerEntityService.getTimerData(config.timer_entity, hass);\n      if (timerData) {\n        const { hours, minutes, seconds } = this.timeRemaining;\n        \n        // Special handling for Alexa timers\n        if (timerData.isAlexaTimer) {\n          if (TimerEntityService.isTimerExpired(timerData)) {\n            return { value: '🔔', label: 'Timer finished!' };\n          }\n          if (hours > 0) return { value: hours.toString(), label: hours === 1 ? 'hour left' : 'hours left' };\n          if (minutes > 0) return { value: minutes.toString(), label: minutes === 1 ? 'minute left' : 'minutes left' };\n          return { value: seconds.toString(), label: seconds === 1 ? 'second left' : 'seconds left' };\n        }\n        \n        // Standard timer handling\n        if (hours > 0) return { value: hours.toString(), label: hours === 1 ? 'hour' : 'hours' };\n        if (minutes > 0) return { value: minutes.toString(), label: minutes === 1 ? 'minute' : 'minutes' };\n        return { value: seconds.toString(), label: seconds === 1 ? 'second' : 'seconds' };\n      }\n    }\n    \n    // AUTO-DISCOVERY: Try Alexa timers if enabled\n    if (!config.timer_entity && config.auto_discover_alexa && hass) {\n      const alexaTimers = TimerEntityService.discoverAlexaTimers(hass);\n      if (alexaTimers.length > 0) {\n        const firstActiveTimer = alexaTimers.find(entityId => {\n          const timerData = TimerEntityService.getTimerData(entityId, hass);\n          return timerData && timerData.isActive;\n        });\n        \n        if (firstActiveTimer) {\n          const timerData = TimerEntityService.getTimerData(firstActiveTimer, hass);\n          if (timerData) {\n            const { hours, minutes, seconds } = this.timeRemaining;\n            if (TimerEntityService.isTimerExpired(timerData)) {\n              return { value: '🔔', label: 'Alexa timer finished!' };\n            }\n            if (hours > 0) return { value: hours.toString(), label: hours === 1 ? 'hour left' : 'hours left' };\n            if (minutes > 0) return { value: minutes.toString(), label: minutes === 1 ? 'minute left' : 'minutes left' };\n            return { value: seconds.toString(), label: seconds === 1 ? 'second left' : 'seconds left' };\n          }\n        }\n      }\n    }\n    \n    const { show_months, show_days, show_hours, show_minutes, show_seconds } = config;\n    const { months, days, hours, minutes, seconds } = this.timeRemaining;\n    \n    if (this.expired) {\n      return { value: '🎉', label: 'Completed!' };\n    }\n    \n    // Show the largest time unit that is enabled and has a value > 0\n    if (show_months && months > 0) {\n      return { value: months.toString(), label: months === 1 ? 'month left' : 'months left' };\n    } else if (show_days && days > 0) {\n      return { value: days.toString(), label: days === 1 ? 'day left' : 'days left' };\n    } else if (show_hours && hours > 0) {\n      return { value: hours.toString(), label: hours === 1 ? 'hour left' : 'hours left' };\n    } else if (show_minutes && minutes > 0) {\n      return { value: minutes.toString(), label: minutes === 1 ? 'minute left' : 'minutes left' };\n    } else if (show_seconds && seconds >= 0) {\n      return { value: seconds.toString(), label: seconds === 1 ? 'second left' : 'seconds left' };\n    }\n    \n    return { value: '0', label: 'seconds left' };\n  }\n\n  /**\n   * Gets the subtitle text showing time breakdown (enhanced for Alexa)\n   * @param {Object} config - Card configuration\n   * @param {Object} hass - Home Assistant object\n   * @returns {string} - Formatted subtitle text\n   */\n  getSubtitle(config: CardConfig, hass: HomeAssistant | null): string {\n    // TIMER ENTITY SUPPORT (including Alexa timers)\n    if (config.timer_entity && hass) {\n      const timerData = TimerEntityService.getTimerData(config.timer_entity, hass);\n      if (timerData) {\n        return TimerEntityService.getTimerSubtitle(timerData, config.show_seconds !== false);\n      }\n      return 'Timer not found';\n    }\n    \n    // AUTO-DISCOVERY: Try Alexa timers if enabled\n    if (!config.timer_entity && config.auto_discover_alexa && hass) {\n      const alexaTimers = TimerEntityService.discoverAlexaTimers(hass);\n      if (alexaTimers.length > 0) {\n        const firstActiveTimer = alexaTimers.find(entityId => {\n          const timerData = TimerEntityService.getTimerData(entityId, hass);\n          return timerData && timerData.isActive;\n        });\n        \n        if (firstActiveTimer) {\n          const timerData = TimerEntityService.getTimerData(firstActiveTimer, hass);\n          if (timerData) {\n            return TimerEntityService.getTimerSubtitle(timerData, config.show_seconds !== false);\n          }\n        } else if (alexaTimers.length > 0) {\n          // Show info about available but inactive timers\n          return `${alexaTimers.length} Alexa timer${alexaTimers.length === 1 ? '' : 's'} available`;\n        }\n      }\n    }\n    \n    if (this.expired) {\n      const { expired_text = 'Completed! 🎉' } = config;\n      return expired_text;\n    }\n    \n    const { months, days, hours, minutes, seconds } = this.timeRemaining || { months: 0, days: 0, hours: 0, minutes: 0, seconds: 0 };\n    const { show_months, show_days, show_hours, show_minutes, show_seconds } = config;\n    \n    const parts = [];\n    \n    // Add each time unit based on configuration and if value > 0\n    if (show_months && months > 0) {\n      parts.push({ value: months, unit: months === 1 ? 'month' : 'months' });\n    }\n    \n    if (show_days && days > 0) {\n      parts.push({ value: days, unit: days === 1 ? 'day' : 'days' });\n    }\n    \n    if (show_hours && hours > 0) {\n      parts.push({ value: hours, unit: hours === 1 ? 'hour' : 'hours' });\n    }\n    \n    if (show_minutes && minutes > 0) {\n      parts.push({ value: minutes, unit: minutes === 1 ? 'minute' : 'minutes' });\n    }\n    \n    if (show_seconds && seconds > 0) {\n      parts.push({ value: seconds, unit: seconds === 1 ? 'second' : 'seconds' });\n    }\n    \n    // If no parts are shown or all values are 0, show the largest enabled unit\n    if (parts.length === 0) {\n      if (show_months) {\n        parts.push({ value: months, unit: months === 1 ? 'month' : 'months' });\n      } else if (show_days) {\n        parts.push({ value: days, unit: days === 1 ? 'day' : 'days' });\n      } else if (show_hours) {\n        parts.push({ value: hours, unit: hours === 1 ? 'hour' : 'hours' });\n      } else if (show_minutes) {\n        parts.push({ value: minutes, unit: minutes === 1 ? 'minute' : 'minutes' });\n      } else if (show_seconds) {\n        parts.push({ value: seconds, unit: seconds === 1 ? 'second' : 'seconds' });\n      }\n    }\n    \n    // Count enabled units for formatting decision\n    const enabledUnits = [show_months, show_days, show_hours, show_minutes, show_seconds].filter(Boolean).length;\n    \n    // Format based on number of enabled units\n    if (enabledUnits <= 2 && parts.length > 0) {\n      // Natural format for 1-2 enabled units: \"1 month and 10 days\"\n      if (parts.length === 1) {\n        return `${parts[0].value} ${parts[0].unit}`;\n      } else if (parts.length === 2) {\n        return `${parts[0].value} ${parts[0].unit} and ${parts[1].value} ${parts[1].unit}`;\n      }\n    }\n    \n    // Compact format for 3+ enabled units: \"1mo 10d 5h\"\n    return parts.map(part => {\n      const shortUnit = part.unit.charAt(0); // m, d, h, m, s\n      return `${part.value}${shortUnit}`;\n    }).join(' ') || '0s';\n  }\n\n  /**\n   * Converts TimerData to CountdownState for unified interface\n   */\n  private _timerDataToCountdownState(timerData: any): CountdownState {\n    return {\n      months: 0,\n      days: 0,\n      hours: Math.floor(timerData.remaining / 3600),\n      minutes: Math.floor((timerData.remaining % 3600) / 60),\n      seconds: Math.floor(timerData.remaining % 60),\n      total: timerData.remaining * 1000 // ms for consistency\n    };\n  }\n\n  /**\n   * Gets current time remaining\n   * @returns {Object} - Time remaining object\n   */\n  getTimeRemaining(): CountdownState {\n    return this.timeRemaining;\n  }\n\n  /**\n   * Gets expired status\n   * @returns {boolean} - Whether countdown has expired\n   */\n  isExpired(): boolean {\n    return this.expired;\n  }\n\n  /**\n   * Gets available Alexa timers for debugging/info\n   * @param {Object} hass - Home Assistant object\n   * @returns {string[]} - Array of Alexa timer entity IDs\n   */\n  getAvailableAlexaTimers(hass: HomeAssistant | null): string[] {\n    if (!hass) return [];\n    return TimerEntityService.discoverAlexaTimers(hass);\n  }\n}","/**\n * StyleManager - Handles styling calculations and CSS processing\n * Provides dynamic sizing, proportional scaling, and style management\n */\nexport class StyleManager {\n  // Constants for icon and stroke size limits\n  static MIN_ICON_SIZE = 40;\n  static MAX_ICON_SIZE = 300;  // Increased from 120 to 300\n  static MIN_STROKE = 4;\n  static MAX_STROKE = 50;      // Increased from 20 to 50\n\n  private cache: {\n    dynamicIconSize: number | null;\n    dynamicStrokeWidth: number | null;\n    customStyles: any | null;\n    lastConfigHash: string | null;\n    lastIconConfigHash?: string | null;\n    lastStrokeConfigHash?: string | null;\n  };\n\n  constructor() {\n    this.cache = {\n      dynamicIconSize: null,\n      dynamicStrokeWidth: null,\n      customStyles: null,\n      lastConfigHash: null\n    };\n  }\n\n  /**\n   * Processes styles array into CSS string\n   * @param {Array} styles - Array of style objects or strings\n   * @returns {string} - CSS string\n   */\n  processStyles(styles: any[]): string {\n    if (!styles || !Array.isArray(styles)) return '';\n    \n    return styles.map(style => {\n      try {\n        if (typeof style === 'string') {\n          return style;\n        } else if (typeof style === 'object' && style !== null) {\n          return Object.entries(style)\n            .map(([prop, value]) => `${prop}: ${value}`)\n            .join('; ');\n        }\n        return '';\n      } catch (e) {\n        console.warn('TimeFlow Card: Error processing style:', style, e);\n        return '';\n      }\n    }).join('; ');\n  }\n\n  /**\n   * Builds styles object from configuration\n   * @param {Object} config - Card configuration\n   * @returns {Object} - Processed styles object\n   */\n  buildStylesObject(config: any): any {\n    // Use cached value if available and config hasn't changed\n    const configHash = JSON.stringify(config.styles || {});\n    if (this.cache.customStyles !== null && this.cache.lastConfigHash === configHash) {\n      return this.cache.customStyles;\n    }\n\n    const { styles = {} } = config;\n    \n    try {\n      const processedStyles = {\n        card: this.processStyles(styles.card),\n        title: this.processStyles(styles.title),\n        subtitle: this.processStyles(styles.subtitle),\n        progress_circle: this.processStyles(styles.progress_circle)\n      };\n\n      this.cache.customStyles = processedStyles;\n      this.cache.lastConfigHash = configHash;\n      return processedStyles;\n    } catch (e) {\n      console.warn('TimeFlow Card: Error building styles object:', e);\n      this.cache.customStyles = {\n        card: '',\n        title: '',\n        subtitle: '',\n        progress_circle: ''\n      };\n      return this.cache.customStyles;\n    }\n  }\n\n  /**\n   * Internal helper to get card dimensions based on width, height, and aspect ratio\n   */\n  _getCardDimensions(width: any, height: any, aspect_ratio: any): any {\n    const defaultWidth = 300;\n    const defaultHeight = 150;\n    let cardWidth = defaultWidth;\n    let cardHeight = defaultHeight;\n    if (width && height) {\n      const parsedW = this.parseDimension(width);\n      const parsedH = this.parseDimension(height);\n      cardWidth = parsedW || defaultWidth;\n      cardHeight = parsedH || defaultHeight;\n    } else if (width && aspect_ratio) {\n      const parsedW = this.parseDimension(width);\n      cardWidth = parsedW || defaultWidth;\n      const [ratioW, ratioH] = aspect_ratio.split('/').map(parseFloat);\n      if (!isNaN(ratioW) && !isNaN(ratioH) && ratioW > 0) {\n        cardHeight = cardWidth * (ratioH / ratioW);\n      }\n    } else if (height && aspect_ratio) {\n      const parsedH = this.parseDimension(height);\n      cardHeight = parsedH || defaultHeight;\n      const [ratioW, ratioH] = aspect_ratio.split('/').map(parseFloat);\n      if (!isNaN(ratioW) && !isNaN(ratioH) && ratioH > 0) {\n        cardWidth = cardHeight * (ratioW / ratioH);\n      }\n    } else if (aspect_ratio) {\n      const [ratioW, ratioH] = aspect_ratio.split('/').map(parseFloat);\n      if (!isNaN(ratioW) && !isNaN(ratioH) && ratioW > 0) {\n        cardHeight = defaultWidth * (ratioH / ratioW);\n      }\n      cardWidth = defaultWidth;\n    }\n    if (!cardWidth || isNaN(cardWidth) || cardWidth <= 0) cardWidth = defaultWidth;\n    if (!cardHeight || isNaN(cardHeight) || cardHeight <= 0) cardHeight = defaultHeight;\n    return { cardWidth, cardHeight };\n  }\n\n  /**\n   * Calculate dynamic icon size based on card dimensions - now truly proportional\n   * @param {*} width - Card width\n   * @param {*} height - Card height\n   * @param {string} aspect_ratio - Aspect ratio string\n   * @param {*} icon_size - Explicit icon size\n   * @returns {number} - Calculated icon size in pixels\n   */\n  calculateDynamicIconSize(width: any, height: any, aspect_ratio: any, icon_size: any): number {\n    // Use cached value if available and config hasn't changed\n    const configKey = JSON.stringify({ width, height, aspect_ratio, icon_size });\n    if (this.cache.dynamicIconSize !== null && this.cache.lastIconConfigHash === configKey) {\n      return this.cache.dynamicIconSize;\n    }\n\n    try {\n      const { cardWidth, cardHeight } = this._getCardDimensions(width, height, aspect_ratio);\n      const minDimension = Math.min(cardWidth, cardHeight);\n      const proportionalSize = minDimension * 0.4;\n      let size = proportionalSize;\n\n      // Respect explicit icon_size if provided, otherwise use proportional\n      if (icon_size && icon_size !== '100px') {\n        const baseSize = typeof icon_size === 'string' ?\n          parseInt(icon_size.replace('px', '')) :\n          (typeof icon_size === 'number' ? icon_size : proportionalSize);\n        // If explicit size is provided, use it directly (within max limit)\n        size = (!isNaN(baseSize)) ? baseSize : proportionalSize;\n      }\n\n      this.cache.dynamicIconSize = Math.max(StyleManager.MIN_ICON_SIZE, Math.min(size, StyleManager.MAX_ICON_SIZE));\n      this.cache.lastIconConfigHash = configKey;\n      return this.cache.dynamicIconSize;\n    } catch (error) {\n      console.warn('TimeFlow Card: Error calculating dynamic icon size:', error);\n      this.cache.dynamicIconSize = StyleManager.MIN_ICON_SIZE; // Safe fallback\n      return this.cache.dynamicIconSize;\n    }\n  }\n\n  /**\n   * Calculate dynamic stroke width based on icon size\n   * @param {number} iconSize - Icon size in pixels\n   * @param {*} stroke_width - Explicit stroke width\n   * @returns {number} - Calculated stroke width\n   */\n  calculateDynamicStrokeWidth(iconSize: any, stroke_width: any): number {\n    // Use cached value if available and config hasn't changed\n    const configKey = JSON.stringify({ iconSize, stroke_width });\n    if (this.cache.dynamicStrokeWidth !== null && this.cache.lastStrokeConfigHash === configKey) {\n      return this.cache.dynamicStrokeWidth;\n    }\n\n    try {\n      // If explicit stroke_width is provided, use it directly\n      if (stroke_width && typeof stroke_width === 'number') {\n        this.cache.dynamicStrokeWidth = Math.max(StyleManager.MIN_STROKE, Math.min(stroke_width, StyleManager.MAX_STROKE));\n      } else {\n        // Otherwise calculate proportional stroke based on icon size\n        const ratio = 0.15;\n        const calculated = Math.round(iconSize * ratio);\n        this.cache.dynamicStrokeWidth = Math.max(StyleManager.MIN_STROKE, Math.min(calculated, StyleManager.MAX_STROKE));\n      }\n      \n      this.cache.lastStrokeConfigHash = configKey;\n      return this.cache.dynamicStrokeWidth;\n    } catch (error) {\n      console.warn('TimeFlow Card: Error calculating dynamic stroke width:', error);\n      this.cache.dynamicStrokeWidth = StyleManager.MIN_STROKE; // Safe fallback\n      return this.cache.dynamicStrokeWidth;\n    }\n  }\n\n  /**\n   * Calculate proportional font sizes based on card dimensions\n   * @param {*} width - Card width\n   * @param {*} height - Card height\n   * @param {string} aspect_ratio - Aspect ratio string\n   * @returns {Object} - Object with font sizes and dimensions\n   */\n  calculateProportionalSizes(width: any, height: any, aspect_ratio: any): any {\n    try {\n      const { cardWidth, cardHeight } = this._getCardDimensions(width, height, aspect_ratio);\n      const defaultArea = 300 * 150;\n      const scaleFactor = Math.sqrt((cardWidth * cardHeight) / defaultArea);\n\n      return {\n        titleSize: Math.max(1.2, Math.min(2.2, 1.6 * scaleFactor)),\n        subtitleSize: Math.max(0.9, Math.min(1.4, 1.1 * scaleFactor)),\n        cardWidth,\n        cardHeight\n      };\n    } catch (error) {\n      console.warn('TimeFlow Card: Error calculating proportional sizes:', error);\n      return { titleSize: 1.6, subtitleSize: 1.1, cardWidth: 300, cardHeight: 150 };\n    }\n  }\n\n  /**\n   * Helper to parse dimension strings (e.g., \"200px\", \"100%\") to numbers\n   * @param {*} dimension - Dimension value to parse\n   * @returns {number|null} - Parsed dimension in pixels\n   */\n  parseDimension(dimension: any): number | null {\n    try {\n      if (typeof dimension === 'number') return dimension;\n      if (typeof dimension !== 'string') return null;\n      // Normalize string for case-insensitive matching\n      const dimStr = dimension.toLowerCase();\n      // Handle percentage values - assume 300px base for calculations\n      if (dimStr.includes('%')) {\n        const percent = parseFloat(dimStr.replace('%', ''));\n        return isNaN(percent) ? null : (percent / 100) * 300; // 300px as base\n      }\n      // Handle pixel values\n      if (dimStr.includes('px')) {\n        const pixels = parseFloat(dimStr.replace('px', ''));\n        return isNaN(pixels) ? null : pixels;\n      }\n      // Try to parse as number\n      const parsed = parseFloat(dimStr);\n      return isNaN(parsed) ? null : parsed;\n    } catch (error) {\n      console.warn('TimeFlow Card: Error parsing dimension:', dimension, error);\n      return null;\n    }\n  }\n\n  /**\n   * Generates card dimensions CSS based on configuration\n   * @param {*} width - Card width\n   * @param {*} height - Card height\n   * @param {string} aspect_ratio - Aspect ratio string\n   * @returns {Array} - Array of CSS style strings\n   */\n  generateCardDimensionStyles(width: any, height: any, aspect_ratio: any): string[] {\n    const cardStyles = [];\n    \n    // Apply width if specified\n    if (width) {\n      const formattedWidth = this._formatDimensionValue(width);\n      if (formattedWidth) {\n        cardStyles.push(`width: ${formattedWidth}`);\n      }\n    }\n    \n    // Apply height if specified\n    if (height) {\n      const formattedHeight = this._formatDimensionValue(height);\n      if (formattedHeight) {\n        cardStyles.push(`height: ${formattedHeight}`);\n      }\n    } else if (aspect_ratio && !height) {\n      // Use aspect-ratio if height not specified\n      cardStyles.push(`aspect-ratio: ${aspect_ratio}`);\n    }\n    \n    // Add a minimum height if no height or aspect ratio is specified\n    if (!height && !aspect_ratio) {\n      cardStyles.push('min-height: 120px');\n    }\n\n    return cardStyles;\n  }\n\n  /**\n   * Helper method to format dimension values with proper units\n   * @param {*} value - The dimension value (string or number)\n   * @returns {string|null} - Formatted CSS value or null if invalid\n   */\n  private _formatDimensionValue(value: any): string | null {\n    if (!value) return null;\n    \n    const strValue = String(value).trim();\n    \n    // If it already has units (px, %, em, rem, vh, vw, etc.), use as-is\n    if (/^[\\d.]+\\s*(px|%|em|rem|vh|vw|vmin|vmax|ch|ex)$/i.test(strValue)) {\n      return strValue;\n    }\n    \n    // If it's a pure number, add 'px' unit\n    const numValue = parseFloat(strValue);\n    if (!isNaN(numValue)) {\n      return `${numValue}px`;\n    }\n    \n    // Invalid value\n    return null;\n  }\n\n  /**\n   * Clears style cache\n   */\n  clearCache() {\n    this.cache = {\n      dynamicIconSize: null,\n      dynamicStrokeWidth: null,\n      customStyles: null,\n      lastConfigHash: null\n    };\n  }\n\n  /**\n   * Public method to get card dimensions based on configuration\n   * @param {*} width - Card width\n   * @param {*} height - Card height\n   * @param {string} aspect_ratio - Aspect ratio string\n   * @returns {Object} - Object with cardWidth and cardHeight\n   */\n  getCardDimensions(width: any, height: any, aspect_ratio: any): { cardWidth: number; cardHeight: number } {\n    return this._getCardDimensions(width, height, aspect_ratio);\n  }\n}\n","import { LitElement, html, css, TemplateResult, CSSResult } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  severity: 'critical' | 'warning' | 'info';\n  suggestion?: string;\n  value?: any;\n}\n\nexport class ErrorDisplay extends LitElement {\n  @property({ type: Array }) errors: ValidationError[] = [];\n  @property({ type: String }) title: string = 'Configuration Issues';\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        font-family: var(--font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif);\n      }\n\n      .error-container {\n        background: #332022;\n        border: 1px solid #582533ff;\n        border-radius: 1px;\n        padding: 16px;\n        margin: 8px;\n        color: #ffffff;\n      }\n\n      .error-list {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n      }\n\n      .error-item {\n        margin-bottom: 8px;\n        line-height: 1.4;\n      }\n\n      .error-field {\n        font-weight: 600;\n        color: #D74133;\n      }\n    `;\n  }\n\n  render(): TemplateResult {\n    if (!this.errors || this.errors.length === 0) {\n      return html``;\n    }\n\n    // Filter out info messages, only show critical and warning\n    const relevantErrors = this.errors.filter(e => e.severity === 'critical' || e.severity === 'warning');\n    \n    if (relevantErrors.length === 0) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"error-container\">\n        <ul class=\"error-list\">\n          ${relevantErrors.map(error => html`\n            <li class=\"error-item\">\n              <span class=\"error-field\">${error.field}:</span> ${error.message}\n            </li>\n          `)}\n        </ul>\n      </div>\n    `;\n  }\n}\n\n// Register the custom element\ncustomElements.define('error-display', ErrorDisplay);\n","//TimeFlowCardBeta.ts\nimport { LitElement, html, css, TemplateResult, CSSResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { TimerEntityService } from '../services/Timer';\nimport { DateParser } from '../utils/DateParser';\nimport { ConfigValidator, ValidationResult, ValidationError } from '../utils/ConfigValidator';\nimport { TemplateService } from '../services/TemplateService';\nimport { CountdownService } from '../services/CountdownService';\nimport { StyleManager } from '../utils/StyleManager';\nimport { HomeAssistant, CountdownState, CardConfig } from '../types/index';\nimport './ErrorDisplay';\n\nexport class TimeFlowCardBeta extends LitElement {\n  // Reactive properties to trigger updates\n  @property({ type: Object }) hass: HomeAssistant | null = null;\n  @property({ type: Object }) config: CardConfig = this.getStubConfig();\n\n  // Internal reactive state for resolved config props and countdown state\n  @state() private _resolvedConfig: CardConfig = this.getStubConfig();\n  @state() private _progress: number = 0;\n  @state() private _countdown: CountdownState = {\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    total: 0\n  };\n  @state() private _expired: boolean = false;\n  @state() private _validationResult: ValidationResult | null = null;\n  @state() private _initialized: boolean = false; // Track initialization\n\n  // Timer ID\n  private _timerId: ReturnType<typeof setInterval> | null = null;\n\n  // Services instances (could be injected if needed)\n  private templateService = new TemplateService();\n  private countdownService = new CountdownService(this.templateService, DateParser);\n  private styleManager = new StyleManager();\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        color: var(--primary-text-color, #222);\n        --progress-color: var(--progress-color, #4caf50);\n      }\n      \n      /* FIXED: Set initial background immediately to prevent white flash */\n      ha-card {\n        display: flex;\n        flex-direction: column;\n        padding: 0;\n        border-radius: 22px;\n        position: relative;\n        overflow: hidden;\n        /* IMPORTANT: Set default background immediately */\n        background: var(--card-background, var(--primary-background-color, #1a1a1a));\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n        border: none;\n        /* REMOVED: transition that causes flash - only animate specific properties if needed */\n        /* transition: background-color 0.3s ease; */\n        min-height: 120px; /* Prevent layout shift */\n      }\n      \n      /* Error message styling */\n      .error {\n        color: #721c24;\n        padding: 12px;\n        border-radius: 16px;\n        white-space: pre-wrap;\n        word-break: break-word;\n      }\n      \n      /* FIXED: Only show card after initialization to prevent white flash */\n      ha-card:not(.initialized) {\n        opacity: 0;\n      }\n      \n      ha-card.initialized {\n        opacity: 1;\n        transition: opacity 0.2s ease-in;\n      }\n      \n      ha-card.expired {\n        animation: celebration 0.8s ease-in-out;\n      }\n      \n      .card-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding: 20px;\n        height: 100%;\n        /* FIXED: Ensure content has proper background inheritance */\n        background: inherit;\n      }\n      \n      .header {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        margin-bottom: 0;\n      }\n      \n      .title-section {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 2px;\n      }\n      \n      .title {\n        font-size: var(--timeflow-title-size, 1.5rem);\n        font-weight: 500;\n        margin: 0;\n        opacity: 0.9;\n        line-height: 1.3;\n        letter-spacing: -0.01em;\n        color: var(--timeflow-card-text-color, inherit);\n      }\n      \n      .subtitle {\n        font-size: var(--timeflow-subtitle-size, 1rem);\n        opacity: 0.65;\n        margin: 0;\n        font-weight: 400;\n        line-height: 1.2;\n        color: var(--timeflow-card-text-color, inherit);\n      }\n      \n      .progress-section {\n        flex-shrink: 0;\n        margin-left: auto;\n      }\n      \n      .content {\n        display: flex;\n        align-items: flex-end;\n        justify-content: flex-end;\n        margin-top: auto;\n        padding-top: 12px;\n      }\n      \n      .progress-circle {\n        opacity: 0.9;\n      }\n      \n      @keyframes celebration {\n        0% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n        100% { transform: scale(1); }\n      }\n      \n      /* Dark mode support */\n      @media (prefers-color-scheme: dark) {\n        ha-card {\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n        }\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n    // Initialize with proper stub config\n    const stubConfig = this.getStubConfig();\n    this.config = stubConfig;\n    this._resolvedConfig = stubConfig;\n  }\n\n  // Provide default configuration stub (like original)\n  static getStubConfig(): CardConfig {\n    return {\n      type: 'custom:timeflow-card-beta',\n      target_date: '2025-12-31T23:59:59',\n      creation_date: '2024-12-31T23:59:59',\n      timer_entity: '',\n      title: 'New Year Countdown',\n      show_days: true,\n      show_hours: true,\n      show_minutes: true,\n      show_seconds: true,\n      progress_color: '#C0F950',\n      background_color: \"#1a1a1a\",\n      stroke_width: 15,\n      icon_size: 100,\n      expired_animation: true,\n      expired_text: 'Completed! 🎉',\n      show_progress_text: false, // FIXED: Added to stub config\n    };\n  }\n\n  // Instance method for internal use\n  getStubConfig(): CardConfig {\n    return TimeFlowCardBeta.getStubConfig();\n  }\n\n  setConfig(config: CardConfig): void {\n    try {\n      // Validate the config with new enhanced validation\n      const validationResult = ConfigValidator.validateConfig(config);\n      this._validationResult = validationResult;\n      \n      // Determine if we should proceed with the configuration\n      if (validationResult.hasCriticalErrors) {\n        // Use safe config if available, otherwise use stub config\n        this.config = validationResult.safeConfig || this.getStubConfig();\n        this._resolvedConfig = { ...this.config };\n      } else if (validationResult.hasWarnings) {\n        // Configuration has warnings - don't proceed with normal flow\n        this.config = { ...config };\n        this._resolvedConfig = { ...config };\n        this._initialized = true; // Set as initialized to show the warning\n        this.requestUpdate();\n        return; // Don't proceed with countdown updates\n      } else {\n        // Configuration is valid\n        this.config = { ...config };\n        this._resolvedConfig = { ...config };\n      }\n      \n      this._initialized = false; // Reset initialization flag\n      this.templateService.clearTemplateCache();\n      this.styleManager.clearCache();\n      \n      // Trigger immediate update after config change\n      this._updateCountdownAndRender().then(() => {\n        this._initialized = true;\n        this.requestUpdate();\n      });\n    } catch (err) {\n      // Handle unexpected validation errors\n      console.error('TimeFlow Card: Unexpected configuration error:', err);\n      \n      // Create a validation result for unexpected errors\n      this._validationResult = {\n        isValid: false,\n        errors: [{\n          field: 'config',\n          message: (err as Error).message || 'Unexpected configuration error',\n          severity: 'critical',\n          suggestion: 'Check console for details and verify your configuration syntax.',\n          value: config\n        }],\n        hasCriticalErrors: true,\n        hasWarnings: false,\n        safeConfig: this.getStubConfig()\n      };\n      \n      this.config = this.getStubConfig();\n      this._resolvedConfig = { ...this.config };\n      this._initialized = true; // Make sure we're initialized to render the error\n      \n      // Force update to show error message\n      this.requestUpdate();\n    }\n  }\n\n  // Lit lifecycle: Called when component is first updated after initial render\n  firstUpdated(): void {\n    // Set up template service with card reference\n    this.templateService.card = this;\n    \n    // FIXED: Initialize immediately on first update\n    this._updateCountdownAndRender().then(() => {\n      this._initialized = true;\n      this.requestUpdate();\n      this._startCountdownUpdates();\n    });\n  }\n\n  // Cleanup on disconnect\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._stopCountdownUpdates();\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.has('hass') || changedProperties.has('config')) {\n      // Clear template caches on hass or config changes\n      this.templateService.clearTemplateCache();\n      this._updateCountdownAndRender();\n    }\n  }\n\n  /**\n   * Starts ticking the countdown every second\n   */\n  _startCountdownUpdates(): void {\n    this._stopCountdownUpdates(); // clear previous interval\n    this._timerId = setInterval(() => {\n      this._updateCountdownAndRender().catch(console.error);\n    }, 1000);\n  }\n\n  /**\n   * Clears the countdown update timer\n   */\n  _stopCountdownUpdates(): void {\n    if (this._timerId) {\n      clearInterval(this._timerId);\n      this._timerId = null;\n    }\n  }\n\n  /**\n   * Resolves templates and updates countdown data, then requests re-render\n   */\n  async _updateCountdownAndRender() {\n    // If we have critical configuration errors, skip updates\n    if (this._validationResult?.hasCriticalErrors) return;\n\n    // Clone config for resolution\n    const resolvedConfig = { ...this.config };\n\n    // List of config keys that can be templates\n    const templateKeys = [\n      'target_date',\n      'creation_date',\n      'timer_entity',\n      'title',\n      'subtitle',\n      'color',\n      'background_color',\n      'progress_color',\n      'primary_color',\n      'secondary_color',\n      'expired_text'\n    ] as const;\n\n    // Resolve templates where applicable\n    for (const key of templateKeys) {\n      if (typeof resolvedConfig[key] === 'string' && this.templateService.isTemplate(resolvedConfig[key] as string)) {\n        const resolvedValue = await this.templateService.resolveValue(resolvedConfig[key] as string);\n        resolvedConfig[key] = resolvedValue || undefined;\n      }\n    }\n\n    // Store resolved config in reactive state\n    this._resolvedConfig = resolvedConfig;\n\n    // Calculate countdown data\n    await this.countdownService.updateCountdown(resolvedConfig, this.hass);\n\n    // Update countdown state\n    this._countdown = { ...this.countdownService.getTimeRemaining() };\n    this._expired = this.countdownService.isExpired();\n\n    // Calculate progress (0-100)\n    this._progress = await this.countdownService.calculateProgress(resolvedConfig, this.hass);\n\n    this.requestUpdate();\n  }\n\n  render(): TemplateResult {\n    // Handle validation errors and configuration issues\n    if (this._validationResult && !this._validationResult.isValid) {\n      // Show error display for any validation issues (critical errors or warnings)\n      return html`\n        <error-display\n          .errors=\"${this._validationResult.errors}\"\n          .title=\"${this._validationResult.hasCriticalErrors ? 'Configuration Error' : 'Configuration Issues'}\"\n        ></error-display>\n      `;\n    }\n\n    // Render normal card only if validation passed completely\n    return this._renderCard();\n  }\n\n  private _renderCard(): TemplateResult {\n\n    const {\n      title ,\n      subtitle,\n      color,\n      background_color,\n      progress_color,\n      stroke_width ,\n      icon_size ,\n      expired_animation = true,\n      expired_text = 'Completed! 🎉',\n      width,\n      height,\n      aspect_ratio,\n      show_progress_text = false // FIXED: Extract the boolean properly\n    } = this._resolvedConfig;\n\n    // FIXED: Ensure background color has a sensible default\n    const cardBackground = background_color || 'var(--card-background, var(--primary-background-color, #1a1a1a))';\n    const textColor = color || 'var(--primary-text-color, #fff)';\n    const mainProgressColor = progress_color || color || 'var(--progress-color, #4caf50)';\n\n    // Calculate dynamic circle size based on card dimensions to prevent overflow\n    const dynamicCircleSize = this.styleManager.calculateDynamicIconSize(width, height, aspect_ratio, icon_size);\n    const dynamicStroke = this.styleManager.calculateDynamicStrokeWidth(dynamicCircleSize, stroke_width);\n\n    // Calculate proportional text sizes\n    const proportionalSizes = this.styleManager.calculateProportionalSizes(width, height, aspect_ratio);\n\n    // Generate dimension styles for the card\n    const dimensionStyles = this.styleManager.generateCardDimensionStyles(width, height, aspect_ratio);\n    \n    // FIXED: Compose CSS styles with proper background handling\n    const cardStyles = [\n      `background: ${cardBackground}`, \n      `color: ${textColor}`,\n      `--timeflow-card-background-color: ${cardBackground}`,\n      `--timeflow-card-text-color: ${textColor}`,\n      `--timeflow-card-progress-color: ${mainProgressColor}`,\n      `--timeflow-card-icon-size: ${dynamicCircleSize}px`,\n      `--timeflow-card-stroke-width: ${dynamicStroke}`,\n      `--timeflow-title-size: ${proportionalSizes.titleSize}rem`,\n      `--timeflow-subtitle-size: ${proportionalSizes.subtitleSize}rem`,\n      `--progress-text-color: ${textColor}`,\n      ...dimensionStyles\n    ].join('; ');\n\n    // Compose subtitle text\n    const subtitleText = this._expired\n      ? expired_text\n      : (subtitle || (this._resolvedConfig.timer_entity && this.hass\n          ? TimerEntityService.getTimerSubtitle(\n              TimerEntityService.getTimerData(this._resolvedConfig.timer_entity, this.hass)!,\n              this._resolvedConfig.show_seconds !== false\n            )\n          : this.countdownService.getSubtitle(this._resolvedConfig, this.hass)));\n\n    // Compose title text with fallback\n    let titleText = title;\n    if (titleText === undefined || titleText === null || (typeof titleText === 'string' && titleText.trim() === '')) {\n      if (this._resolvedConfig.timer_entity && this.hass) {\n        titleText = TimerEntityService.getTimerTitle(\n          this._resolvedConfig.timer_entity,\n          this.hass\n        );\n      } else {\n        titleText = this._expired ? expired_text : 'Countdown Timer';\n      }\n    }\n\n    // FIXED: Determine card classes including initialization state\n    const cardClasses = [\n      this._initialized ? 'initialized' : '',\n      (this._expired && expired_animation) ? 'expired' : ''\n    ].filter(Boolean).join(' ');\n\n    // FIXED: Debug logging to see what's happening\n    console.log('TimeFlowCard render - show_progress_text:', show_progress_text, typeof show_progress_text);\n\n    return html`\n      <ha-card class=\"${cardClasses}\" style=\"${cardStyles}\">\n        <div class=\"card-content\">\n          <header class=\"header\">\n            <div class=\"title-section\">\n              <h2 class=\"title\" aria-live=\"polite\">${titleText}</h2>\n              <p class=\"subtitle\" aria-live=\"polite\">${subtitleText}</p>\n            </div>\n          </header>\n          \n          <div class=\"content\" role=\"group\" aria-label=\"Countdown Progress\">\n            <div class=\"progress-section\">\n              <progress-circle-beta\n                class=\"progress-circle\"\n                .progress=\"${this._progress}\"\n                .color=\"${mainProgressColor}\"\n                .size=\"${dynamicCircleSize}\"\n                .strokeWidth=\"${dynamicStroke}\"\n                .showProgressText=\"${show_progress_text === true}\"\n                aria-label=\"Countdown progress: ${Math.round(this._progress)}%\"\n              ></progress-circle-beta>\n            </div>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  /**\n   * Helper: Returns card size (in Home Assistant's grid rows approx)\n   */\n  getCardSize(): number {\n    const { aspect_ratio = '2/1', height } = this.config;\n    if (height) {\n      const heightValue = parseInt(typeof height === 'string' ? height : height.toString());\n      if (heightValue <= 100) return 1;\n      if (heightValue <= 150) return 2;\n      if (heightValue <= 200) return 3;\n      return 4;\n    }\n    if (aspect_ratio) {\n      const [width, height] = aspect_ratio.split('/').map(Number);\n      if (!width || !height) return 3;\n      const ratio = height / width;\n      if (ratio >= 1.5) return 4;\n      if (ratio >= 1) return 3;\n      if (ratio >= 0.75) return 2;\n      return 2;\n    }\n    return 3;\n  }\n\n  // Static version info\n  static get version() {\n    return '1.2.0-lit';\n  }\n}","// ProgressCircleBeta.ts\nimport { LitElement, html, css, CSSResult, TemplateResult, PropertyValues } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nexport class ProgressCircleBeta extends LitElement {\n  @property({ type: Number }) progress: number = 0;\n  @property({ type: String }) color: string = '#4CAF50';\n  @property({ type: Number }) size: number = 100;\n  @property({ type: Number }) strokeWidth: number = 15;\n  @property({ type: Boolean }) showProgressText: boolean = false;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-block;\n        vertical-align: middle;\n      }\n      .progress-wrapper {\n        position: relative;\n      }\n      svg {\n        display: block;\n        margin: 0 auto;\n      }\n      .progress-text {\n        font-size: 16px;  \n        font-weight: bold;\n        fill: var(--progress-text-color, #f4f5f4ff);\n        dominant-baseline: middle;\n        text-anchor: middle;\n        pointer-events: none;\n        user-select: none;\n      }\n      .updating {\n        transition: stroke-dashoffset 0.3s ease;\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n    this.progress = 0;\n    this.color = '#4CAF50';\n    this.size = 100;\n    this.strokeWidth = 15;\n    this.showProgressText = false;\n  }\n\n  // FIXED: Add debugging to see when properties change\n  updated(changed: PropertyValues): void {\n    // Debug logging\n    if (changed.has('showProgressText')) {\n      console.log('ProgressCircle - showProgressText changed to:', this.showProgressText, typeof this.showProgressText);\n    }\n\n    // Animate stroke-dashoffset if progress changes\n    if (changed.has('progress')) {\n      const circle = this.renderRoot?.querySelector('.progress-bar') as HTMLElement;\n      if (circle) {\n        circle.classList.add('updating');\n        setTimeout(() => {\n          if (circle) circle.classList.remove('updating');\n        }, 400);\n      }\n    }\n  }\n\n  // FIXED: Add property change handler for better debugging\n  willUpdate(changed: PropertyValues): void {\n    if (changed.has('showProgressText')) {\n      console.log('ProgressCircle willUpdate - showProgressText:', this.showProgressText);\n    }\n  }\n\n  // Expose imperative API for external modules, as before\n  updateProgress(progress: number, animate: boolean = true): void {\n    if (animate) {\n      this.progress = progress;\n    } else {\n      // Instantly set progress, skips animation\n      const bar = this.renderRoot?.querySelector('.progress-bar') as HTMLElement;\n      this.progress = progress;\n      if (bar) bar.style.transition = 'none';\n      setTimeout(() => { if (bar) bar.style.transition = ''; }, 20);\n    }\n  }\n\n  getProgress(): number {\n    return this.progress;\n  }\n\n  render(): TemplateResult {\n    const safeProgress = Math.max(0, Math.min(100, Number(this.progress) || 0));\n    const size = Number(this.size) || 100;\n    const stroke = Number(this.strokeWidth) || 15;\n    const radius = (size - stroke) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference - (safeProgress / 100) * circumference;\n\n    // Calculate responsive font size based on circle size\n    const fontSize = Math.max(10, Math.min(24, size * 0.16));\n\n    // FIXED: Debug log in render to see current state\n    console.log('ProgressCircle render - showProgressText:', this.showProgressText, 'progress:', safeProgress);\n\n    return html`\n      <div class=\"progress-wrapper\" style=\"width:${size}px; height:${size}px;\">\n        <svg\n          class=\"progress-circle-beta\"\n          height=\"${size}\" width=\"${size}\"\n          style=\"overflow:visible;\"\n        >\n          <circle\n            class=\"progress-bg\"\n            cx=\"${size / 2}\" cy=\"${size / 2}\"\n            r=\"${radius}\"\n            fill=\"none\"\n            stroke=\"#FFFFFF1A\"\n            stroke-width=\"${stroke}\"\n          ></circle>\n          <circle\n            class=\"progress-bar\"\n            cx=\"${size / 2}\" cy=\"${size / 2}\"\n            r=\"${radius}\"\n            fill=\"none\"\n            stroke=\"${this.color}\"\n            stroke-width=\"${stroke}\"\n            stroke-linecap=\"round\"\n            style=\"\n              stroke-dasharray: ${circumference};\n              stroke-dashoffset: ${offset};\n              transition: stroke-dashoffset 0.3s ease;\n              transform: rotate(-90deg);\n              transform-origin: ${size / 2}px ${size / 2}px;\n            \"\n          ></circle>\n\n          ${this.showProgressText\n            ? html`\n                <text\n                  x=\"50%\" y=\"50%\"\n                  class=\"progress-text\"\n                  dy=\"2\"\n                  style=\"font-size: ${fontSize}px;\"\n                >\n                  ${Math.round(safeProgress)}%\n                </text>\n              `\n            : html`<!-- showProgressText is false -->`}\n        </svg>\n      </div>\n    `;\n  }\n}","/**\n * TimeFlow Card - Entry point for modular architecture with Lit components\n * Registers Lit-based custom elements and exposes the card to Home Assistant\n */\n\n// Type declarations for Home Assistant globals\ndeclare global {\n  interface Window {\n    customCards?: Array<{\n      type: string;\n      name: string;\n      description: string;\n      preview?: boolean;\n      documentationURL?: string;\n    }>;\n  }\n}\n\nimport { TimeFlowCardBeta } from './components/TimeFlowCard';\nimport { ProgressCircleBeta } from './components/ProgressCircle';\nimport { ErrorDisplay } from './components/ErrorDisplay';\n\n// Register Lit custom elements with duplicate protection\nif (!customElements.get('error-display')) {\n  customElements.define('error-display', ErrorDisplay);\n  console.debug('TimeFlow Card: Registered error-display component');\n} else {\n  console.debug('TimeFlow Card: error-display component already registered');\n}\n\nif (!customElements.get('progress-circle-beta')) {\n  customElements.define('progress-circle-beta', ProgressCircleBeta);\n  console.debug('TimeFlow Card: Registered progress-circle-beta component');\n} else {\n  console.debug('TimeFlow Card: progress-circle-beta component already registered');\n}\n\nif (!customElements.get('timeflow-card-beta')) {\n  customElements.define('timeflow-card-beta', TimeFlowCardBeta);\n  console.debug('TimeFlow Card: Registered timeflow-card-beta component');\n} else {\n  console.debug('TimeFlow Card: timeflow-card-beta component already registered');\n}\n\n// Register the card with Home Assistant\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: 'timeflow-card-beta',\n  name: 'TimeFlow Card (Lit Version)',\n  description: 'A beautiful countdown timer card with progress circle for Home Assistant, using Lit',\n  preview: true,\n  documentationURL: 'https://github.com/Rishi8078/TimeFlow-Card' // Update if needed\n});\n\nconsole.info(\n  `%c TIMEFLOW-CARD (Lit) \\n%c Version 1.2.0 `,\n  'color: orange; font-weight: bold; background: black',\n  'color: white; font-weight: bold; background: dimgray'\n);\n\n// Export main classes for external use or testing\nexport { TimeFlowCardBeta, ProgressCircleBeta, ErrorDisplay };"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","SuppressedError","t","globalThis","e","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","s","Symbol","o","WeakMap","n$3","constructor","this","_$cssResult$","Error","cssText","styleSheet","get","replaceSync","set","toString","reduce","n","cssRules","is","h","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","a","trustedTypes","l","emptyScript","p","reactiveElementPolyfillSupport","u","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","b","attribute","type","String","converter","reflect","useDefault","hasChanged","metadata","litPropertyMetadata","HTMLElement","addInitializer","_$Ei","push","observedAttributes","finalize","_$Eh","keys","createProperty","state","hasOwnProperty","create","wrapped","elementProperties","noAccessor","getPropertyDescriptor","call","requestUpdate","configurable","enumerable","getPropertyOptions","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","forEach","addController","_$EO","add","renderRoot","isConnected","hostConnected","removeController","delete","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$ET","removeAttribute","_$Ej","hasAttribute","C","_$EP","has","_$Eq","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$EM","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","y","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","Math","random","toFixed","slice","createComment","v","_","m","RegExp","g","$","x","_$litType$","strings","values","T","for","E","A","createTreeWalker","P","V","lastIndex","exec","test","startsWith","N","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","index","name","ctor","H","I","L","k","tagName","append","data","indexOf","innerHTML","S","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","M","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","R","nextSibling","z","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","iterator","O","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","litHtmlPolyfillSupport","litHtmlVersions","renderOptions","_$Do","renderBefore","render","_$litPart$","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","litElementVersions","kind","init","TimerEntityService","isTimerEntity","entityId","includes","isAlexaTimer","getTimerData","hass","entity","states","getAlexaTimerData","getStandardTimerData","console","warn","attributes","remaining","duration","finishesAt","isActive","isISOTimestamp","Date","isNaN","getTime","now","max","floor","parseFloat","parseDuration","hasOriginalDuration","original_duration","progress","elapsed","min","assumedTotalTime","isPaused","alexaDevice","extractAlexaDevice","timerLabel","friendly_name","timer_label","formatAlexaTimerName","isIdle","finishes_at","str","match","replace","device_name","device","toUpperCase","seconds","formatRemainingTime","showSeconds","hours","minutes","padStart","getTimerTitle","customTitle","timerData","getTimerSubtitle","isTimerExpired","getTimerStateColor","defaultColor","discoverAlexaTimers","alexaTimers","DateParser","parseISODate","dateString","manualResult","parseISODateManual","nativeResult","isValidDateResult","parseISODateFallback","dateObj","originalString","timestamp","minTimestamp","maxTimestamp","year","getFullYear","isLeapYear","datePart","timePart","month","day","isValidDateComponents","hour","minute","second","isValidTimeComponents","parseInt","error","ConfigValidator","validateConfig","config","errors","field","message","severity","suggestion","value","isValid","hasCriticalErrors","hasWarnings","target_date","isValidDateInput","timer_entity","auto_discover_alexa","undefined","isValidEntityId","creation_date","isValidColorInput","isValidDimensionInput","aspect_ratio","isValidAspectRatioInput","stroke_width","isValidNumberInput","isValidBooleanInput","isValidTextInput","isValidStylesInput","_addHelpfulValidations","safeConfig","_generateSafeConfig","criticalErrors","filter","warnings","tomorrow","setDate","getDate","toISOString","background_color","progress_color","icon_size","validateConfigLegacy","result","join","isTemplate","date","pxMatch","px","percentMatch","percent","validUnits","unit","regex","unitValue","aspectMatch","width","height","Infinity","parsed","some","pattern","validStyleKeys","styleKeys","every","TemplateService","templateResults","templateCacheLimit","evaluateTemplate","template","cacheKey","cached","isValidTemplate","callApi","fallback","extractFallbackFromTemplate","enforceTemplateCacheLimit","innerTemplate","trim","simpleOrPattern","simpleOrMatch","chainedOrPattern","chainedMatch","conditionalPattern","conditionalMatch","reverseConditionalPattern","reverseMatch","resolveValue","_a","card","_b","clearTemplateCache","clear","cacheEntries","from","entries","sort","entriesToRemove","hasTemplatesInConfig","prop","escapeHtml","text","CountdownService","templateService","dateParser","timeRemaining","months","days","total","expired","updateCountdown","_timerDataToCountdownState","firstActiveTimer","find","targetDateValue","targetDate","difference","show_months","show_days","show_hours","show_minutes","show_seconds","totalMilliseconds","extraDays","extraHours","extraMinutes","extraSeconds","calculateProgress","creationDate","creationDateValue","totalDuration","getMainDisplay","label","getSubtitle","expired_text","part","shortUnit","charAt","getTimeRemaining","isExpired","getAvailableAlexaTimers","StyleManager","cache","dynamicIconSize","dynamicStrokeWidth","customStyles","lastConfigHash","processStyles","style","buildStylesObject","configHash","processedStyles","title","subtitle","progress_circle","_getCardDimensions","defaultWidth","defaultHeight","cardWidth","cardHeight","parseDimension","ratioW","ratioH","calculateDynamicIconSize","configKey","lastIconConfigHash","proportionalSize","baseSize","MIN_ICON_SIZE","MAX_ICON_SIZE","calculateDynamicStrokeWidth","iconSize","lastStrokeConfigHash","MIN_STROKE","MAX_STROKE","ratio","calculated","round","calculateProportionalSizes","defaultArea","scaleFactor","sqrt","titleSize","subtitleSize","dimension","dimStr","pixels","generateCardDimensionStyles","cardStyles","formattedWidth","_formatDimensionValue","formattedHeight","strValue","numValue","clearCache","getCardDimensions","ErrorDisplay","css","html","relevantErrors","property","customElements","define","TimeFlowCardBeta","getStubConfig","_resolvedConfig","_progress","_countdown","_expired","_validationResult","_initialized","_timerId","countdownService","styleManager","stubConfig","expired_animation","show_progress_text","setConfig","validationResult","_updateCountdownAndRender","then","err","_startCountdownUpdates","_stopCountdownUpdates","changedProperties","setInterval","catch","clearInterval","resolvedConfig","templateKeys","resolvedValue","_renderCard","color","cardBackground","textColor","mainProgressColor","dynamicCircleSize","dynamicStroke","proportionalSizes","dimensionStyles","subtitleText","titleText","cardClasses","log","getCardSize","heightValue","version","ProgressCircleBeta","strokeWidth","showProgressText","changed","circle","querySelector","classList","setTimeout","updateProgress","animate","bar","transition","getProgress","safeProgress","stroke","radius","circumference","PI","offset","fontSize","debug","window","customCards","description","preview","documentationURL","info"],"mappings":"AAsDO,SAASA,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,iBAAZQ,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAChJ,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,CAChE,CA6QkD,mBAApBO,iBAAiCA,gBCnU/D,MAAMC,EAAEC,WAAWC,EAAEF,EAAEG,kBAAa,IAASH,EAAEI,UAAUJ,EAAEI,SAASC,eAAe,uBAAuBC,SAASC,WAAW,YAAYC,cAAcD,UAAUE,EAAEC,SAASC,EAAE,IAAIC,QAAO,IAAAC,EAAC,MAAQ,WAAAC,CAAYd,EAAEE,EAAES,GAAG,GAAGI,KAAKC,cAAa,EAAGL,IAAIF,EAAE,MAAMQ,MAAM,qEAAqEF,KAAKG,QAAQlB,EAAEe,KAAKf,EAAEE,CAAC,CAAC,cAAIiB,GAAa,IAAInB,EAAEe,KAAKJ,EAAE,MAAMF,EAAEM,KAAKf,EAAE,GAAGE,QAAG,IAASF,EAAE,CAAC,MAAME,OAAE,IAASO,GAAG,IAAIA,EAAElB,OAAOW,IAAIF,EAAEW,EAAES,IAAIX,SAAI,IAAST,KAAKe,KAAKJ,EAAEX,EAAE,IAAIQ,eAAea,YAAYN,KAAKG,SAAShB,GAAGS,EAAEW,IAAIb,EAAET,GAAG,CAAC,OAAOA,CAAC,CAAC,QAAAuB,GAAW,OAAOR,KAAKG,OAAO,GAAE,MAAqDrB,EAAE,CAACG,KAAKE,KAAK,MAAMS,EAAE,IAAIX,EAAET,OAAOS,EAAE,GAAGE,EAAEsB,QAAStB,EAAEO,EAAEE,IAAIT,EAAE,CAACF,IAAI,IAAG,IAAKA,EAAEgB,aAAa,OAAOhB,EAAEkB,QAAQ,GAAG,iBAAiBlB,EAAE,OAAOA,EAAE,MAAMiB,MAAM,mEAAmEjB,EAAE,uFAAwF,EAArP,CAAuPS,GAAGT,EAAEW,EAAE,GAAIX,EAAE,IAAI,OAAO,IAAIyB,EAAEd,EAAEX,EAAES,IAA2PpB,EAAEa,EAAEF,GAAGA,EAAEA,GAAGA,aAAaQ,cAAc,CAACR,IAAI,IAAIE,EAAE,GAAG,IAAI,MAAMO,KAAKT,EAAE0B,SAASxB,GAAGO,EAAES,QAAQ,MAAztBlB,IAAG,IAAIyB,EAAE,iBAAiBzB,EAAEA,EAAEA,EAAE,QAAG,EAAOS,GAAsrBjB,CAAEU,EAAG,EAAjE,CAAmEF,GAAGA,GCAlzC2B,GAAG9B,EAAEC,eAAeI,EAAER,yBAAyBkC,EAAEC,oBAAoBrC,EAAEsC,sBAAsBnB,EAAEoB,eAAeN,GAAGhC,OAAOuC,EAAE/B,WAAWZ,EAAE2C,EAAEC,aAAaC,EAAE7C,EAAEA,EAAE8C,YAAY,GAAGC,EAAEJ,EAAEK,+BAA+BjD,EAAE,CAACY,EAAES,IAAIT,EAAEsC,EAAE,CAAC,WAAAC,CAAYvC,EAAES,GAAG,OAAOA,GAAG,KAAK+B,QAAQxC,EAAEA,EAAEkC,EAAE,KAAK,MAAM,KAAKzC,OAAO,KAAKgD,MAAMzC,EAAE,MAAMA,EAAEA,EAAE0C,KAAKC,UAAU3C,GAAG,OAAOA,CAAC,EAAE,aAAA4C,CAAc5C,EAAES,GAAG,IAAIZ,EAAEG,EAAE,OAAOS,GAAG,KAAK+B,QAAQ3C,EAAE,OAAOG,EAAE,MAAM,KAAK6C,OAAOhD,EAAE,OAAOG,EAAE,KAAK6C,OAAO7C,GAAG,MAAM,KAAKP,OAAO,KAAKgD,MAAM,IAAI5C,EAAE6C,KAAKI,MAAM9C,EAAE,CAAC,MAAMA,GAAGH,EAAE,IAAI,EAAE,OAAOA,CAAC,GAAGkD,EAAE,CAAC/C,EAAES,KAAKZ,EAAEG,EAAES,GAAGuC,EAAE,CAACC,WAAU,EAAGC,KAAKC,OAAOC,UAAUd,EAAEe,SAAQ,EAAGC,YAAW,EAAGC,WAAWR,GAAGrC,OAAO8C,WAAW9C,OAAO,YAAYsB,EAAEyB,sBAAsB,IAAI7C,cAAQ,cAAgB8C,YAAY,qBAAOC,CAAe3D,GAAGe,KAAK6C,QAAQ7C,KAAKmB,IAAI,IAAI2B,KAAK7D,EAAE,CAAC,6BAAW8D,GAAqB,OAAO/C,KAAKgD,WAAWhD,KAAKiD,MAAM,IAAIjD,KAAKiD,KAAKC,OAAO,CAAC,qBAAOC,CAAelE,EAAES,EAAEuC,GAAG,GAAGvC,EAAE0D,QAAQ1D,EAAEwC,WAAU,GAAIlC,KAAK6C,OAAO7C,KAAKR,UAAU6D,eAAepE,MAAMS,EAAEhB,OAAO4E,OAAO5D,IAAI6D,SAAQ,GAAIvD,KAAKwD,kBAAkBjD,IAAItB,EAAES,IAAIA,EAAE+D,WAAW,CAAC,MAAM3E,EAAEa,SAASkB,EAAEb,KAAK0D,sBAAsBzE,EAAEH,EAAEY,QAAG,IAASmB,GAAG1B,EAAEa,KAAKR,UAAUP,EAAE4B,EAAE,CAAC,CAAC,4BAAO6C,CAAsBzE,EAAES,EAAEZ,GAAG,MAAMuB,IAAIlB,EAAEoB,IAAI9B,GAAGoC,EAAEb,KAAKR,UAAUP,IAAI,CAAC,GAAAoB,GAAM,OAAOL,KAAKN,EAAE,EAAE,GAAAa,CAAItB,GAAGe,KAAKN,GAAGT,CAAC,GAAG,MAAM,CAACoB,IAAIlB,EAAE,GAAAoB,CAAIb,GAAG,MAAMmB,EAAE1B,GAAGwE,KAAK3D,MAAMvB,GAAGkF,KAAK3D,KAAKN,GAAGM,KAAK4D,cAAc3E,EAAE4B,EAAE/B,EAAE,EAAE+E,cAAa,EAAGC,YAAW,EAAG,CAAC,yBAAOC,CAAmB9E,GAAG,OAAOe,KAAKwD,kBAAkBnD,IAAIpB,IAAIgD,CAAC,CAAC,WAAOY,GAAO,GAAG7C,KAAKqD,eAAehF,EAAE,sBAAsB,OAAO,MAAMY,EAAEyB,EAAEV,MAAMf,EAAE+D,gBAAW,IAAS/D,EAAEkC,IAAInB,KAAKmB,EAAE,IAAIlC,EAAEkC,IAAInB,KAAKwD,kBAAkB,IAAIQ,IAAI/E,EAAEuE,kBAAkB,CAAC,eAAOR,GAAW,GAAGhD,KAAKqD,eAAehF,EAAE,cAAc,OAAO,GAAG2B,KAAKiE,WAAU,EAAGjE,KAAK6C,OAAO7C,KAAKqD,eAAehF,EAAE,eAAe,CAAC,MAAMY,EAAEe,KAAKkE,WAAWxE,EAAE,IAAIjB,EAAEQ,MAAMW,EAAEX,IAAI,IAAI,MAAMH,KAAKY,EAAEM,KAAKmD,eAAerE,EAAEG,EAAEH,GAAG,CAAC,MAAMG,EAAEe,KAAKL,OAAO8C,UAAU,GAAG,OAAOxD,EAAE,CAAC,MAAMS,EAAEgD,oBAAoBrC,IAAIpB,GAAG,QAAG,IAASS,EAAE,IAAI,MAAMT,EAAEH,KAAKY,EAAEM,KAAKwD,kBAAkBjD,IAAItB,EAAEH,EAAE,CAACkB,KAAKiD,KAAK,IAAIe,IAAI,IAAI,MAAM/E,EAAES,KAAKM,KAAKwD,kBAAkB,CAAC,MAAM1E,EAAEkB,KAAKmE,KAAKlF,EAAES,QAAG,IAASZ,GAAGkB,KAAKiD,KAAK1C,IAAIzB,EAAEG,EAAE,CAACe,KAAKoE,cAAcpE,KAAKqE,eAAerE,KAAKsE,OAAO,CAAC,qBAAOD,CAAe3E,GAAG,MAAMZ,EAAE,GAAG,GAAG4C,MAAM6C,QAAQ7E,GAAG,CAAC,MAAMP,EAAE,IAAIqF,IAAI9E,EAAE+E,KAAK,KAAKC,WAAW,IAAI,MAAMhF,KAAKP,EAAEL,EAAE6F,QAAQ1F,EAAES,GAAG,WAAM,IAASA,GAAGZ,EAAEgE,KAAK7D,EAAES,IAAI,OAAOZ,CAAC,CAAC,WAAOqF,CAAKlF,EAAES,GAAG,MAAMZ,EAAEY,EAAEwC,UAAU,OAAM,IAAKpD,OAAE,EAAO,iBAAiBA,EAAEA,EAAE,iBAAiBG,EAAEA,EAAE2F,mBAAc,CAAM,CAAC,WAAA7E,GAAc8E,QAAQ7E,KAAK8E,UAAK,EAAO9E,KAAK+E,iBAAgB,EAAG/E,KAAKgF,YAAW,EAAGhF,KAAKiF,KAAK,KAAKjF,KAAKkF,MAAM,CAAC,IAAAA,GAAOlF,KAAKmF,KAAK,IAAIC,QAASnG,GAAGe,KAAKqF,eAAepG,GAAIe,KAAKsF,KAAK,IAAItB,IAAIhE,KAAKuF,OAAOvF,KAAK4D,gBAAgB5D,KAAKD,YAAYoB,GAAGqE,QAASvG,GAAGA,EAAEe,MAAO,CAAC,aAAAyF,CAAcxG,IAAIe,KAAK0F,OAAO,IAAIlB,KAAKmB,IAAI1G,QAAG,IAASe,KAAK4F,YAAY5F,KAAK6F,aAAa5G,EAAE6G,iBAAiB,CAAC,gBAAAC,CAAiB9G,GAAGe,KAAK0F,MAAMM,OAAO/G,EAAE,CAAC,IAAAsG,GAAO,MAAMtG,EAAE,IAAI+E,IAAItE,EAAEM,KAAKD,YAAYyD,kBAAkB,IAAI,MAAM1E,KAAKY,EAAEwD,OAAOlD,KAAKqD,eAAevE,KAAKG,EAAEsB,IAAIzB,EAAEkB,KAAKlB,WAAWkB,KAAKlB,IAAIG,EAAEgH,KAAK,IAAIjG,KAAK8E,KAAK7F,EAAE,CAAC,gBAAAiH,GAAmB,MAAMjH,EAAEe,KAAKmG,YAAYnG,KAAKoG,aAAapG,KAAKD,YAAYsG,mBAAmB,MDA7lE,EAAC3G,EAAEE,KAAK,GAAGT,EAAEO,EAAE4G,mBAAmB1G,EAAE2G,IAAKtH,GAAGA,aAAaQ,cAAcR,EAAEA,EAAEmB,iBAAkB,IAAI,MAAMjB,KAAKS,EAAE,CAAC,MAAMA,EAAE4G,SAASC,cAAc,SAAS/F,EAAEzB,EAAEyH,cAAS,IAAShG,GAAGd,EAAE+G,aAAa,QAAQjG,GAAGd,EAAEgH,YAAYzH,EAAEgB,QAAQT,EAAEmH,YAAYjH,EAAE,GCAk3DF,CAAET,EAAEe,KAAKD,YAAYqE,eAAenF,CAAC,CAAC,iBAAA6H,GAAoB9G,KAAK4F,aAAa5F,KAAKkG,mBAAmBlG,KAAKqF,gBAAe,GAAIrF,KAAK0F,MAAMF,QAASvG,GAAGA,EAAE6G,kBAAmB,CAAC,cAAAT,CAAepG,GAAG,CAAC,oBAAA8H,GAAuB/G,KAAK0F,MAAMF,QAASvG,GAAGA,EAAE+H,qBAAsB,CAAC,wBAAAC,CAAyBhI,EAAES,EAAEZ,GAAGkB,KAAKkH,KAAKjI,EAAEH,EAAE,CAAC,IAAAqI,CAAKlI,EAAES,GAAG,MAAMZ,EAAEkB,KAAKD,YAAYyD,kBAAkBnD,IAAIpB,GAAGE,EAAEa,KAAKD,YAAYoE,KAAKlF,EAAEH,GAAG,QAAG,IAASK,IAAG,IAAKL,EAAEwD,QAAQ,CAAC,MAAMzB,QAAG,IAAS/B,EAAEuD,WAAWb,YAAY1C,EAAEuD,UAAUd,GAAGC,YAAY9B,EAAEZ,EAAEqD,MAAMnC,KAAKiF,KAAKhG,EAAE,MAAM4B,EAAEb,KAAKoH,gBAAgBjI,GAAGa,KAAK2G,aAAaxH,EAAE0B,GAAGb,KAAKiF,KAAK,IAAI,CAAC,CAAC,IAAAiC,CAAKjI,EAAES,GAAG,MAAMZ,EAAEkB,KAAKD,YAAYZ,EAAEL,EAAEmE,KAAK5C,IAAIpB,GAAG,QAAG,IAASE,GAAGa,KAAKiF,OAAO9F,EAAE,CAAC,MAAMF,EAAEH,EAAEiF,mBAAmB5E,GAAG0B,EAAE,mBAAmB5B,EAAEoD,UAAU,CAACR,cAAc5C,EAAEoD,gBAAW,IAASpD,EAAEoD,WAAWR,cAAc5C,EAAEoD,UAAUd,EAAEvB,KAAKiF,KAAK9F,EAAE,MAAMV,EAAEoC,EAAEgB,cAAcnC,EAAET,EAAEkD,MAAMnC,KAAKb,GAAGV,GAAGuB,KAAKqH,MAAMhH,IAAIlB,IAAIV,EAAEuB,KAAKiF,KAAK,IAAI,CAAC,CAAC,aAAArB,CAAc3E,EAAES,EAAEZ,GAAG,QAAG,IAASG,EAAE,CAAC,MAAME,EAAEa,KAAKD,YAAYc,EAAEb,KAAKf,GAAG,GAAGH,IAAIK,EAAE4E,mBAAmB9E,MAAMH,EAAE0D,YAAYR,GAAGnB,EAAEnB,IAAIZ,EAAEyD,YAAYzD,EAAEwD,SAASzB,IAAIb,KAAKqH,MAAMhH,IAAIpB,KAAKe,KAAKsH,aAAanI,EAAEgF,KAAKlF,EAAEH,KAAK,OAAOkB,KAAKuH,EAAEtI,EAAES,EAAEZ,EAAE,EAAC,IAAKkB,KAAK+E,kBAAkB/E,KAAKmF,KAAKnF,KAAKwH,OAAO,CAAC,CAAAD,CAAEtI,EAAES,GAAG6C,WAAWzD,EAAEwD,QAAQnD,EAAEoE,QAAQ1C,GAAGpC,GAAGK,KAAKkB,KAAKqH,OAAO,IAAIrD,KAAKyD,IAAIxI,KAAKe,KAAKqH,KAAK9G,IAAItB,EAAER,GAAGiB,GAAGM,KAAKf,KAAI,IAAK4B,QAAG,IAASpC,KAAKuB,KAAKsF,KAAKmC,IAAIxI,KAAKe,KAAKgF,YAAYlG,IAAIY,OAAE,GAAQM,KAAKsF,KAAK/E,IAAItB,EAAES,KAAI,IAAKP,GAAGa,KAAKiF,OAAOhG,IAAIe,KAAK0H,OAAO,IAAIlD,KAAKmB,IAAI1G,GAAG,CAAC,UAAMuI,GAAOxH,KAAK+E,iBAAgB,EAAG,UAAU/E,KAAKmF,IAAI,CAAC,MAAMlG,GAAGmG,QAAQuC,OAAO1I,EAAE,CAAC,MAAMA,EAAEe,KAAK4H,iBAAiB,OAAO,MAAM3I,SAASA,GAAGe,KAAK+E,eAAe,CAAC,cAAA6C,GAAiB,OAAO5H,KAAK6H,eAAe,CAAC,aAAAA,GAAgB,IAAI7H,KAAK+E,gBAAgB,OAAO,IAAI/E,KAAKgF,WAAW,CAAC,GAAGhF,KAAK4F,aAAa5F,KAAKkG,mBAAmBlG,KAAK8E,KAAK,CAAC,IAAI,MAAM7F,EAAES,KAAKM,KAAK8E,KAAK9E,KAAKf,GAAGS,EAAEM,KAAK8E,UAAK,CAAM,CAAC,MAAM7F,EAAEe,KAAKD,YAAYyD,kBAAkB,GAAGvE,EAAEgH,KAAK,EAAE,IAAI,MAAMvG,EAAEZ,KAAKG,EAAE,CAAC,MAAMsE,QAAQtE,GAAGH,EAAEK,EAAEa,KAAKN,IAAG,IAAKT,GAAGe,KAAKsF,KAAKmC,IAAI/H,SAAI,IAASP,GAAGa,KAAKuH,EAAE7H,OAAE,EAAOZ,EAAEK,EAAE,CAAC,CAAC,IAAIF,GAAE,EAAG,MAAMS,EAAEM,KAAKsF,KAAK,IAAIrG,EAAEe,KAAK8H,aAAapI,GAAGT,GAAGe,KAAK+H,WAAWrI,GAAGM,KAAK0F,MAAMF,QAASvG,GAAGA,EAAE+I,gBAAiBhI,KAAKiI,OAAOvI,IAAIM,KAAKkI,MAAM,CAAC,MAAMxI,GAAG,MAAMT,GAAE,EAAGe,KAAKkI,OAAOxI,CAAC,CAACT,GAAGe,KAAKmI,KAAKzI,EAAE,CAAC,UAAAqI,CAAW9I,GAAG,CAAC,IAAAkJ,CAAKlJ,GAAGe,KAAK0F,MAAMF,QAASvG,GAAGA,EAAEmJ,iBAAkBpI,KAAKgF,aAAahF,KAAKgF,YAAW,EAAGhF,KAAKqI,aAAapJ,IAAIe,KAAKsI,QAAQrJ,EAAE,CAAC,IAAAiJ,GAAOlI,KAAKsF,KAAK,IAAItB,IAAIhE,KAAK+E,iBAAgB,CAAE,CAAC,kBAAIwD,GAAiB,OAAOvI,KAAKwI,mBAAmB,CAAC,iBAAAA,GAAoB,OAAOxI,KAAKmF,IAAI,CAAC,YAAA2C,CAAa7I,GAAG,OAAM,CAAE,CAAC,MAAAgJ,CAAOhJ,GAAGe,KAAK0H,OAAO1H,KAAK0H,KAAKlC,QAASvG,GAAGe,KAAKmH,KAAKlI,EAAEe,KAAKf,KAAMe,KAAKkI,MAAM,CAAC,OAAAI,CAAQrJ,GAAG,CAAC,YAAAoJ,CAAapJ,GAAG,GAAEwJ,EAAErE,cAAc,GAAGqE,EAAEpC,kBAAkB,CAACqC,KAAK,QAAQD,EAAEpK,EAAE,sBAAsB,IAAI2F,IAAIyE,EAAEpK,EAAE,cAAc,IAAI2F,IAAI3C,IAAI,CAACsH,gBAAgBF,KAAKxH,EAAE2H,0BAA0B,IAAI9F,KAAK,SCAjxL,MAAC7D,EAAEC,WAAWJ,EAAEG,EAAEiC,aAAaxB,EAAEZ,EAAEA,EAAE+J,aAAa,WAAW,CAACC,WAAW7J,GAAGA,SAAI,EAAOE,EAAE,QAAQ0B,EAAE,OAAOkI,KAAKC,SAASC,QAAQ,GAAGC,MAAM,MAAMtJ,EAAE,IAAIiB,EAAEH,EAAE,IAAId,KAAKnB,EAAE+H,SAASrF,EAAE,IAAI1C,EAAE0K,cAAc,IAAI7K,EAAEW,GAAG,OAAOA,GAAG,iBAAiBA,GAAG,mBAAmBA,EAAEgC,EAAES,MAAM6C,QAA2DlG,EAAE,cAAc2D,EAAE,sDAAsDoH,EAAE,OAAOC,EAAE,KAAKC,EAAEC,OAAO,KAAKlL,sBAAsBA,MAAMA,uCAAuC,KAAKgD,EAAE,KAAKmI,EAAE,KAAKC,EAAE,qCAAwFC,EAAjDzK,IAAG,CAACH,KAAKY,KAAC,CAAKiK,WAAW1K,EAAE2K,QAAQ9K,EAAE+K,OAAOnK,IAAM+I,CAAE,GAAiBqB,EAAEnK,OAAOoK,IAAI,gBAAgBC,EAAErK,OAAOoK,IAAI,eAAeE,EAAE,IAAIpK,QAAQ0H,EAAE9I,EAAEyL,iBAAiBzL,EAAE,KAAK,SAAS0L,EAAElL,EAAEH,GAAG,IAAImC,EAAEhC,KAAKA,EAAEoE,eAAe,OAAO,MAAMnD,MAAM,kCAAkC,YAAO,IAASR,EAAEA,EAAEoJ,WAAWhK,GAAGA,CAAC,CAAC,MAAMsL,EAAE,CAACnL,EAAEH,KAAK,MAAMY,EAAET,EAAET,OAAO,EAAEoB,EAAE,GAAG,IAAInB,EAAE0C,EAAE,IAAIrC,EAAE,QAAQ,IAAIA,EAAE,SAAS,GAAGR,EAAE0D,EAAE,IAAI,IAAIlD,EAAE,EAAEA,EAAEY,EAAEZ,IAAI,CAAC,MAAMY,EAAET,EAAEH,GAAG,IAAImC,EAAEM,EAAElD,KAAKoK,EAAE,EAAE,KAAKA,EAAE/I,EAAElB,SAASF,EAAE+L,UAAU5B,EAAElH,EAAEjD,EAAEgM,KAAK5K,GAAG,OAAO6B,IAAIkH,EAAEnK,EAAE+L,UAAU/L,IAAI0D,EAAE,QAAQT,EAAE,GAAGjD,EAAE8K,OAAE,IAAS7H,EAAE,GAAGjD,EAAE+K,OAAE,IAAS9H,EAAE,IAAIkI,EAAEc,KAAKhJ,EAAE,MAAM9C,EAAE8K,OAAO,KAAKhI,EAAE,GAAG,MAAMjD,EAAEgL,QAAG,IAAS/H,EAAE,KAAKjD,EAAEgL,GAAGhL,IAAIgL,EAAE,MAAM/H,EAAE,IAAIjD,EAAEG,GAAGuD,EAAE3D,GAAE,QAAI,IAASkD,EAAE,GAAGlD,MAAMA,EAAEC,EAAE+L,UAAU9I,EAAE,GAAG/C,OAAOyC,EAAEM,EAAE,GAAGjD,OAAE,IAASiD,EAAE,GAAG+H,EAAE,MAAM/H,EAAE,GAAGiI,EAAEnI,GAAG/C,IAAIkL,GAAGlL,IAAI+C,EAAE/C,EAAEgL,EAAEhL,IAAI8K,GAAG9K,IAAI+K,EAAE/K,EAAE0D,GAAG1D,EAAEgL,EAAE7K,OAAE,GAAQ,MAAMiL,EAAEpL,IAAIgL,GAAGrK,EAAEH,EAAE,GAAG0L,WAAW,MAAM,IAAI,GAAGrJ,GAAG7C,IAAI0D,EAAEtC,EAAEgB,EAAErC,GAAG,GAAGuB,EAAEkD,KAAK7B,GAAGvB,EAAEwJ,MAAM,EAAE7K,GAAGc,EAAEO,EAAEwJ,MAAM7K,GAAGwC,EAAE6I,GAAGhK,EAAEmB,QAAQxC,EAAES,EAAE4K,EAAE,CAAC,MAAM,CAACS,EAAElL,EAAEkC,GAAGlC,EAAES,IAAI,QAAQ,IAAIZ,EAAE,SAAS,IAAIA,EAAE,UAAU,KAAKc,IAAI,MAAM6K,EAAE,WAAA1K,EAAa6J,QAAQ3K,EAAE0K,WAAWjK,GAAGgB,GAAG,IAAIjC,EAAEuB,KAAK0K,MAAM,GAAG,IAAIpM,EAAE,EAAE2C,EAAE,EAAE,MAAMM,EAAEtC,EAAET,OAAO,EAAEH,EAAE2B,KAAK0K,OAAO1I,EAAEoH,GAAGgB,EAAEnL,EAAES,GAAG,GAAGM,KAAK2K,GAAGF,EAAEhE,cAAczE,EAAEtB,GAAG6G,EAAEqD,YAAY5K,KAAK2K,GAAGE,QAAQ,IAAInL,GAAG,IAAIA,EAAE,CAAC,MAAMT,EAAEe,KAAK2K,GAAGE,QAAQC,WAAW7L,EAAE8L,eAAe9L,EAAE+L,WAAW,CAAC,KAAK,QAAQvM,EAAE8I,EAAE0D,aAAa5M,EAAEG,OAAO+C,GAAG,CAAC,GAAG,IAAI9C,EAAEyM,SAAS,CAAC,GAAGzM,EAAE0M,gBAAgB,IAAI,MAAMlM,KAAKR,EAAE2M,oBAAoB,GAAGnM,EAAEoM,SAASlM,GAAG,CAAC,MAAML,EAAEsK,EAAEnI,KAAKvB,EAAEjB,EAAE6M,aAAarM,GAAGsM,MAAM1K,GAAG1B,EAAE,eAAemL,KAAKxL,GAAGT,EAAEyE,KAAK,CAACX,KAAK,EAAEqJ,MAAMlN,EAAEmN,KAAKtM,EAAE,GAAGyK,QAAQlK,EAAEgM,KAAK,MAAMvM,EAAE,GAAGwM,GAAE,MAAMxM,EAAE,GAAGyM,GAAE,MAAMzM,EAAE,GAAG0M,GAAEC,IAAIrN,EAAE2I,gBAAgBnI,EAAE,MAAMA,EAAEuL,WAAW3J,KAAKxC,EAAEyE,KAAK,CAACX,KAAK,EAAEqJ,MAAMlN,IAAIG,EAAE2I,gBAAgBnI,IAAI,GAAGwK,EAAEc,KAAK9L,EAAEsN,SAAS,CAAC,MAAM9M,EAAER,EAAEmI,YAAY2E,MAAM1K,GAAGnB,EAAET,EAAET,OAAO,EAAE,GAAGkB,EAAE,EAAE,CAACjB,EAAEmI,YAAY9H,EAAEA,EAAEsC,YAAY,GAAG,IAAI,IAAItC,EAAE,EAAEA,EAAEY,EAAEZ,IAAIL,EAAEuN,OAAO/M,EAAEH,GAAGqC,KAAKoG,EAAE0D,WAAW5M,EAAEyE,KAAK,CAACX,KAAK,EAAEqJ,QAAQlN,IAAIG,EAAEuN,OAAO/M,EAAES,GAAGyB,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI1C,EAAEyM,SAAS,GAAGzM,EAAEwN,OAAOrM,EAAEvB,EAAEyE,KAAK,CAACX,KAAK,EAAEqJ,MAAMlN,QAAQ,CAAC,IAAIW,GAAE,EAAG,MAAK,KAAMA,EAAER,EAAEwN,KAAKC,QAAQrL,EAAE5B,EAAE,KAAKZ,EAAEyE,KAAK,CAACX,KAAK,EAAEqJ,MAAMlN,IAAIW,GAAG4B,EAAErC,OAAO,CAAC,CAACF,GAAG,CAAC,CAAC,oBAAOmI,CAAcxH,EAAEH,GAAG,MAAMY,EAAEjB,EAAEgI,cAAc,YAAY,OAAO/G,EAAEyM,UAAUlN,EAAES,CAAC,EAAE,SAAS0M,EAAEnN,EAAEH,EAAEY,EAAET,EAAEE,GAAG,GAAGL,IAAIgL,EAAE,OAAOhL,EAAE,IAAI+B,OAAE,IAAS1B,EAAEO,EAAE2M,OAAOlN,GAAGO,EAAE4M,KAAK,MAAM1M,EAAEtB,EAAEQ,QAAG,EAAOA,EAAEyN,gBAAgB,OAAO1L,GAAGd,cAAcH,IAAIiB,GAAG2L,QAAO,QAAI,IAAS5M,EAAEiB,OAAE,GAAQA,EAAE,IAAIjB,EAAEX,GAAG4B,EAAE4L,KAAKxN,EAAES,EAAEP,SAAI,IAASA,GAAGO,EAAE2M,OAAO,IAAIlN,GAAG0B,EAAEnB,EAAE4M,KAAKzL,QAAG,IAASA,IAAI/B,EAAEsN,EAAEnN,EAAE4B,EAAE6L,KAAKzN,EAAEH,EAAE+K,QAAQhJ,EAAE1B,IAAIL,CAAC,CAAC,MAAM6N,EAAE,WAAA5M,CAAYd,EAAEH,GAAGkB,KAAK4M,KAAK,GAAG5M,KAAK6M,UAAK,EAAO7M,KAAK8M,KAAK7N,EAAEe,KAAK+M,KAAKjO,CAAC,CAAC,cAAIkO,GAAa,OAAOhN,KAAK+M,KAAKC,UAAU,CAAC,QAAIC,GAAO,OAAOjN,KAAK+M,KAAKE,IAAI,CAAC,CAAA1L,CAAEtC,GAAG,MAAM0L,IAAIE,QAAQ/L,GAAG4L,MAAMhL,GAAGM,KAAK8M,KAAK3N,GAAGF,GAAGiO,eAAezO,GAAG0O,WAAWrO,GAAE,GAAIyI,EAAEqD,YAAYzL,EAAE,IAAI0B,EAAE0G,EAAE0D,WAAWrL,EAAE,EAAEc,EAAE,EAAES,EAAEzB,EAAE,GAAG,UAAK,IAASyB,GAAG,CAAC,GAAGvB,IAAIuB,EAAEqK,MAAM,CAAC,IAAI1M,EAAE,IAAIqC,EAAEgB,KAAKrD,EAAE,IAAIsO,EAAEvM,EAAEA,EAAEwM,YAAYrN,KAAKf,GAAG,IAAIkC,EAAEgB,KAAKrD,EAAE,IAAIqC,EAAEuK,KAAK7K,EAAEM,EAAEsK,KAAKtK,EAAEyI,QAAQ5J,KAAKf,GAAG,IAAIkC,EAAEgB,OAAOrD,EAAE,IAAIwO,GAAEzM,EAAEb,KAAKf,IAAIe,KAAK4M,KAAK9J,KAAKhE,GAAGqC,EAAEzB,IAAIgB,EAAE,CAACd,IAAIuB,GAAGqK,QAAQ3K,EAAE0G,EAAE0D,WAAWrL,IAAI,CAAC,OAAO2H,EAAEqD,YAAYnM,EAAEU,CAAC,CAAC,CAAAkC,CAAEpC,GAAG,IAAIH,EAAE,EAAE,IAAI,MAAMY,KAAKM,KAAK4M,UAAK,IAASlN,SAAI,IAASA,EAAEkK,SAASlK,EAAE6N,KAAKtO,EAAES,EAAEZ,GAAGA,GAAGY,EAAEkK,QAAQpL,OAAO,GAAGkB,EAAE6N,KAAKtO,EAAEH,KAAKA,GAAG,EAAE,MAAMsO,EAAE,QAAIH,GAAO,OAAOjN,KAAK+M,MAAME,MAAMjN,KAAKwN,IAAI,CAAC,WAAAzN,CAAYd,EAAEH,EAAEY,EAAEP,GAAGa,KAAKmC,KAAK,EAAEnC,KAAKyN,KAAKzD,EAAEhK,KAAK6M,UAAK,EAAO7M,KAAK0N,KAAKzO,EAAEe,KAAK2N,KAAK7O,EAAEkB,KAAK+M,KAAKrN,EAAEM,KAAK4N,QAAQzO,EAAEa,KAAKwN,KAAKrO,GAAG0G,cAAa,CAAE,CAAC,cAAImH,GAAa,IAAI/N,EAAEe,KAAK0N,KAAKV,WAAW,MAAMlO,EAAEkB,KAAK+M,KAAK,YAAO,IAASjO,GAAG,KAAKG,GAAGiM,WAAWjM,EAAEH,EAAEkO,YAAY/N,CAAC,CAAC,aAAI4O,GAAY,OAAO7N,KAAK0N,IAAI,CAAC,WAAII,GAAU,OAAO9N,KAAK2N,IAAI,CAAC,IAAAJ,CAAKtO,EAAEH,EAAEkB,MAAMf,EAAEmN,EAAEpM,KAAKf,EAAEH,GAAGR,EAAEW,GAAGA,IAAI+K,GAAG,MAAM/K,GAAG,KAAKA,GAAGe,KAAKyN,OAAOzD,GAAGhK,KAAK+N,OAAO/N,KAAKyN,KAAKzD,GAAG/K,IAAIe,KAAKyN,MAAMxO,IAAI6K,GAAG9J,KAAKqJ,EAAEpK,QAAG,IAASA,EAAE0K,WAAW3J,KAAKyJ,EAAExK,QAAG,IAASA,EAAEiM,SAASlL,KAAK8J,EAAE7K,GAA1zHA,IAAGgC,EAAEhC,IAAI,mBAAmBA,IAAIU,OAAOqO,UAAsxHzM,CAAEtC,GAAGe,KAAK8L,EAAE7M,GAAGe,KAAKqJ,EAAEpK,EAAE,CAAC,CAAAgP,CAAEhP,GAAG,OAAOe,KAAK0N,KAAKV,WAAWkB,aAAajP,EAAEe,KAAK2N,KAAK,CAAC,CAAA7D,CAAE7K,GAAGe,KAAKyN,OAAOxO,IAAIe,KAAK+N,OAAO/N,KAAKyN,KAAKzN,KAAKiO,EAAEhP,GAAG,CAAC,CAAAoK,CAAEpK,GAAGe,KAAKyN,OAAOzD,GAAG1L,EAAE0B,KAAKyN,MAAMzN,KAAK0N,KAAKL,YAAYpB,KAAKhN,EAAEe,KAAK8J,EAAErL,EAAE0P,eAAelP,IAAIe,KAAKyN,KAAKxO,CAAC,CAAC,CAAAwK,CAAExK,GAAG,MAAM4K,OAAO/K,EAAE6K,WAAWjK,GAAGT,EAAEE,EAAE,iBAAiBO,EAAEM,KAAKoO,KAAKnP,SAAI,IAASS,EAAEiL,KAAKjL,EAAEiL,GAAGF,EAAEhE,cAAc0D,EAAEzK,EAAEmB,EAAEnB,EAAEmB,EAAE,IAAIb,KAAK4N,UAAUlO,GAAG,GAAGM,KAAKyN,MAAMX,OAAO3N,EAAEa,KAAKyN,KAAKpM,EAAEvC,OAAO,CAAC,MAAMG,EAAE,IAAI0N,EAAExN,EAAEa,MAAMN,EAAET,EAAEsC,EAAEvB,KAAK4N,SAAS3O,EAAEoC,EAAEvC,GAAGkB,KAAK8J,EAAEpK,GAAGM,KAAKyN,KAAKxO,CAAC,CAAC,CAAC,IAAAmP,CAAKnP,GAAG,IAAIH,EAAEmL,EAAE5J,IAAIpB,EAAE2K,SAAS,YAAO,IAAS9K,GAAGmL,EAAE1J,IAAItB,EAAE2K,QAAQ9K,EAAE,IAAI2L,EAAExL,IAAIH,CAAC,CAAC,CAAAgN,CAAE7M,GAAGgC,EAAEjB,KAAKyN,QAAQzN,KAAKyN,KAAK,GAAGzN,KAAK+N,QAAQ,MAAMjP,EAAEkB,KAAKyN,KAAK,IAAI/N,EAAEP,EAAE,EAAE,IAAI,MAAM0B,KAAK5B,EAAEE,IAAIL,EAAEN,OAAOM,EAAEgE,KAAKpD,EAAE,IAAI0N,EAAEpN,KAAKiO,EAAE9M,KAAKnB,KAAKiO,EAAE9M,KAAKnB,KAAKA,KAAK4N,UAAUlO,EAAEZ,EAAEK,GAAGO,EAAE6N,KAAK1M,GAAG1B,IAAIA,EAAEL,EAAEN,SAASwB,KAAK+N,KAAKrO,GAAGA,EAAEiO,KAAKN,YAAYlO,GAAGL,EAAEN,OAAOW,EAAE,CAAC,IAAA4O,CAAK9O,EAAEe,KAAK0N,KAAKL,YAAYvO,GAAG,IAAIkB,KAAKqO,QAAO,GAAG,EAAGvP,GAAGG,IAAIe,KAAK2N,MAAM,CAAC,MAAM7O,EAAEG,EAAEoO,YAAYpO,EAAEqP,SAASrP,EAAEH,CAAC,CAAC,CAAC,YAAAyP,CAAatP,QAAG,IAASe,KAAK+M,OAAO/M,KAAKwN,KAAKvO,EAAEe,KAAKqO,OAAOpP,GAAG,EAAE,MAAM6M,EAAE,WAAIC,GAAU,OAAO/L,KAAKwO,QAAQzC,OAAO,CAAC,QAAIkB,GAAO,OAAOjN,KAAK+M,KAAKE,IAAI,CAAC,WAAAlN,CAAYd,EAAEH,EAAEY,EAAEP,EAAE0B,GAAGb,KAAKmC,KAAK,EAAEnC,KAAKyN,KAAKzD,EAAEhK,KAAK6M,UAAK,EAAO7M,KAAKwO,QAAQvP,EAAEe,KAAKyL,KAAK3M,EAAEkB,KAAK+M,KAAK5N,EAAEa,KAAK4N,QAAQ/M,EAAEnB,EAAElB,OAAO,GAAG,KAAKkB,EAAE,IAAI,KAAKA,EAAE,IAAIM,KAAKyN,KAAK/L,MAAMhC,EAAElB,OAAO,GAAGiQ,KAAK,IAAIrM,QAAQpC,KAAK4J,QAAQlK,GAAGM,KAAKyN,KAAKzD,CAAC,CAAC,IAAAuD,CAAKtO,EAAEH,EAAEkB,KAAKN,EAAEP,GAAG,MAAM0B,EAAEb,KAAK4J,QAAQ,IAAIhK,GAAE,EAAG,QAAG,IAASiB,EAAE5B,EAAEmN,EAAEpM,KAAKf,EAAEH,EAAE,GAAGc,GAAGtB,EAAEW,IAAIA,IAAIe,KAAKyN,MAAMxO,IAAI6K,EAAElK,IAAII,KAAKyN,KAAKxO,OAAO,CAAC,MAAME,EAAEF,EAAE,IAAIyB,EAAEjC,EAAE,IAAIQ,EAAE4B,EAAE,GAAGH,EAAE,EAAEA,EAAEG,EAAErC,OAAO,EAAEkC,IAAIjC,EAAE2N,EAAEpM,KAAKb,EAAEO,EAAEgB,GAAG5B,EAAE4B,GAAGjC,IAAIqL,IAAIrL,EAAEuB,KAAKyN,KAAK/M,IAAId,KAAKtB,EAAEG,IAAIA,IAAIuB,KAAKyN,KAAK/M,GAAGjC,IAAIuL,EAAE/K,EAAE+K,EAAE/K,IAAI+K,IAAI/K,IAAIR,GAAG,IAAIoC,EAAEH,EAAE,IAAIV,KAAKyN,KAAK/M,GAAGjC,CAAC,CAACmB,IAAIT,GAAGa,KAAK0O,EAAEzP,EAAE,CAAC,CAAAyP,CAAEzP,GAAGA,IAAI+K,EAAEhK,KAAKwO,QAAQpH,gBAAgBpH,KAAKyL,MAAMzL,KAAKwO,QAAQ7H,aAAa3G,KAAKyL,KAAKxM,GAAG,GAAG,EAAE,MAAM0M,WAAUG,EAAE,WAAA/L,GAAc8E,SAAStG,WAAWyB,KAAKmC,KAAK,CAAC,CAAC,CAAAuM,CAAEzP,GAAGe,KAAKwO,QAAQxO,KAAKyL,MAAMxM,IAAI+K,OAAE,EAAO/K,CAAC,EAAE,MAAM2M,WAAUE,EAAE,WAAA/L,GAAc8E,SAAStG,WAAWyB,KAAKmC,KAAK,CAAC,CAAC,CAAAuM,CAAEzP,GAAGe,KAAKwO,QAAQG,gBAAgB3O,KAAKyL,OAAOxM,GAAGA,IAAI+K,EAAE,EAAE,MAAM6B,WAAUC,EAAE,WAAA/L,CAAYd,EAAEH,EAAEY,EAAEP,EAAE0B,GAAGgE,MAAM5F,EAAEH,EAAEY,EAAEP,EAAE0B,GAAGb,KAAKmC,KAAK,CAAC,CAAC,IAAAoL,CAAKtO,EAAEH,EAAEkB,MAAM,IAAIf,EAAEmN,EAAEpM,KAAKf,EAAEH,EAAE,IAAIkL,KAAKF,EAAE,OAAO,MAAMpK,EAAEM,KAAKyN,KAAKtO,EAAEF,IAAI+K,GAAGtK,IAAIsK,GAAG/K,EAAE2P,UAAUlP,EAAEkP,SAAS3P,EAAE4P,OAAOnP,EAAEmP,MAAM5P,EAAE6P,UAAUpP,EAAEoP,QAAQjO,EAAE5B,IAAI+K,IAAItK,IAAIsK,GAAG7K,GAAGA,GAAGa,KAAKwO,QAAQO,oBAAoB/O,KAAKyL,KAAKzL,KAAKN,GAAGmB,GAAGb,KAAKwO,QAAQQ,iBAAiBhP,KAAKyL,KAAKzL,KAAKf,GAAGe,KAAKyN,KAAKxO,CAAC,CAAC,WAAAgQ,CAAYhQ,GAAG,mBAAmBe,KAAKyN,KAAKzN,KAAKyN,KAAK9J,KAAK3D,KAAK4N,SAASsB,MAAMlP,KAAKwO,QAAQvP,GAAGe,KAAKyN,KAAKwB,YAAYhQ,EAAE,EAAE,MAAMqO,GAAE,WAAAvN,CAAYd,EAAEH,EAAEY,GAAGM,KAAKwO,QAAQvP,EAAEe,KAAKmC,KAAK,EAAEnC,KAAK6M,UAAK,EAAO7M,KAAK+M,KAAKjO,EAAEkB,KAAK4N,QAAQlO,CAAC,CAAC,QAAIuN,GAAO,OAAOjN,KAAK+M,KAAKE,IAAI,CAAC,IAAAM,CAAKtO,GAAGmN,EAAEpM,KAAKf,EAAE,EAAO,MAA6DyP,GAAEzP,EAAEkQ,uBAAuBT,KAAIjE,EAAE2C,IAAInO,EAAEmQ,kBAAkB,IAAItM,KAAK,SAAS,MCAvuNpD,GAAER,WAAW,MAAMJ,WAAUG,EAAE,WAAAc,GAAc8E,SAAStG,WAAWyB,KAAKqP,cAAc,CAACH,KAAKlP,MAAMA,KAAKsP,UAAK,CAAM,CAAC,gBAAApJ,GAAmB,MAAMjH,EAAE4F,MAAMqB,mBAAmB,OAAOlG,KAAKqP,cAAcE,eAAetQ,EAAE6L,WAAW7L,CAAC,CAAC,MAAAgJ,CAAOhJ,GAAG,MAAMR,EAAEuB,KAAKwP,SAASxP,KAAKgF,aAAahF,KAAKqP,cAAcxJ,YAAY7F,KAAK6F,aAAahB,MAAMoD,OAAOhJ,GAAGe,KAAKsP,KDA05M,EAACrQ,EAAEH,EAAEY,KAAK,MAAMP,EAAEO,GAAG6P,cAAczQ,EAAE,IAAI+B,EAAE1B,EAAEsQ,WAAW,QAAG,IAAS5O,EAAE,CAAC,MAAM5B,EAAES,GAAG6P,cAAc,KAAKpQ,EAAEsQ,WAAW5O,EAAE,IAAIuM,EAAEtO,EAAEoP,aAAa/M,IAAIlC,GAAGA,OAAE,EAAOS,GAAG,CAAA,EAAG,CAAC,OAAOmB,EAAE0M,KAAKtO,GAAG4B,GCAtkN1B,CAAEV,EAAEuB,KAAK4F,WAAW5F,KAAKqP,cAAc,CAAC,iBAAAvI,GAAoBjC,MAAMiC,oBAAoB9G,KAAKsP,MAAMf,cAAa,EAAG,CAAC,oBAAAxH,GAAuBlC,MAAMkC,uBAAuB/G,KAAKsP,MAAMf,cAAa,EAAG,CAAC,MAAAiB,GAAS,OAAO/Q,CAAC,EAAEK,GAAE4Q,eAAc,EAAG5Q,GAAa,WAAE,EAAGY,GAAEiQ,2BAA2B,CAACC,WAAW9Q,KAAI,MAAMc,GAAEF,GAAEmQ,0BAA0BjQ,KAAI,CAACgQ,WAAW9Q,MAA0DY,GAAEoQ,qBAAqB,IAAIhN,KAAK,SCArxB,MAAMlD,GAAE,CAACsC,WAAU,EAAGC,KAAKC,OAAOC,UAAUpD,EAAEqD,SAAQ,EAAGE,WAAWrD,GAAGV,GAAE,CAACQ,EAAEW,GAAET,EAAEV,KAAK,MAAMsR,KAAKrP,EAAE+B,SAAS3D,GAAGL,EAAE,IAAIiB,EAAER,WAAWwD,oBAAoBrC,IAAIvB,GAAG,QAAG,IAASY,GAAGR,WAAWwD,oBAAoBnC,IAAIzB,EAAEY,EAAE,IAAIsE,KAAK,WAAWtD,KAAKzB,EAAEP,OAAO4E,OAAOrE,IAAIsE,SAAQ,GAAI7D,EAAEa,IAAI9B,EAAEgN,KAAKxM,GAAG,aAAayB,EAAE,CAAC,MAAM+K,KAAK7L,GAAGnB,EAAE,MAAM,CAAC,GAAA8B,CAAI9B,GAAG,MAAMiC,EAAEvB,EAAEkB,IAAIsD,KAAK3D,MAAMb,EAAEoB,IAAIoD,KAAK3D,KAAKvB,GAAGuB,KAAK4D,cAAchE,EAAEc,EAAEzB,EAAE,EAAE,IAAA+Q,CAAK7Q,GAAG,YAAO,IAASA,GAAGa,KAAKuH,EAAE3H,OAAE,EAAOX,EAAEE,GAAGA,CAAC,EAAE,CAAC,GAAG,WAAWuB,EAAE,CAAC,MAAM+K,KAAK7L,GAAGnB,EAAE,OAAO,SAASA,GAAG,MAAMiC,EAAEV,KAAKJ,GAAGT,EAAEwE,KAAK3D,KAAKvB,GAAGuB,KAAK4D,cAAchE,EAAEc,EAAEzB,EAAE,CAAC,CAAC,MAAMiB,MAAM,mCAAmCQ,IAAI,SAASA,GAAEzB,GAAG,MAAM,CAACE,EAAES,IAAI,iBAAiBA,EAAEnB,GAAEQ,EAAEE,EAAES,GAAG,EAAEX,EAAEE,EAAES,KAAK,MAAMnB,EAAEU,EAAEkE,eAAezD,GAAG,OAAOT,EAAEY,YAAYoD,eAAevD,EAAEX,GAAGR,EAAEC,OAAOC,yBAAyBQ,EAAES,QAAG,CAAO,EAA9H,CAAgIX,EAAEE,EAAES,EAAE,CCAlyB,SAASnB,GAAEA,GAAG,OAAOQ,GAAE,IAAIR,EAAE2E,OAAM,EAAGlB,WAAU,GAAI,OCc1C+N,GAOX,oBAAOC,CAAcC,GACnB,QAAKA,MAGDA,EAAS3F,WAAW,cAGpB2F,EAASC,SAAS,gBAClBD,EAASC,SAAS,gBACjBD,EAAS3F,WAAW,YAAc2F,EAASC,SAAS,UAK3D,CAOA,mBAAOC,CAAaF,GAClB,OAAOA,EAASC,SAAS,gBAClBD,EAASC,SAAS,gBACjBD,EAAS3F,WAAW,YAAc2F,EAASC,SAAS,UAAYD,EAASC,SAAS,QAC5F,CAQA,mBAAOE,CAAaH,EAAkBI,GACpC,IAAKA,IAASJ,IAAanQ,KAAKkQ,cAAcC,GAC5C,OAAO,KAGT,MAAMK,EAASD,EAAKE,OAAON,GAC3B,OAAKK,EAMDxQ,KAAKqQ,aAAaF,GACbnQ,KAAK0Q,kBAAkBP,EAAUK,EAAQD,GAI3CvQ,KAAK2Q,qBAAqBR,EAAUK,IAVzCI,QAAQC,KAAK,gBAAgBV,eACtB,KAUX,CAQM,wBAAOO,CAAkBP,EAAkBK,EAAaD,GAC9D,MAAMnN,EAAQoN,EAAOpN,MACf0N,EAAaN,EAAOM,WAG1B,IAAIC,EAAY,EACZC,EAAW,EACXC,EAA0B,KAC1BC,GAAW,EAGf,GAAI9N,GAAmB,gBAAVA,GAAqC,YAAVA,EAEtC,GAAIpD,KAAKmR,eAAe/N,IAEtB,GADA6N,EAAa,IAAIG,KAAKhO,IACjBiO,MAAMJ,EAAWK,WAAY,CAChC,MAAMC,EAAMH,KAAKG,MACjBR,EAAYhI,KAAKyI,IAAI,EAAGzI,KAAK0I,OAAOR,EAAWK,UAAYC,GAAO,MAClEL,EAAWH,EAAY,CACzB,OAGQM,MAAMK,WAAWtO,IAKD,iBAAVA,GAAsBA,EAAMgN,SAAS,OACnDW,EAAY/Q,KAAK2R,cAAcvO,GAC/B8N,EAAWH,EAAY,IANvBA,EAAYhI,KAAKyI,IAAI,EAAGE,WAAWtO,IACnC8N,EAAWH,EAAY,GAU3B,IAAIa,GAAsB,EACtBd,EAAWe,mBACbb,EAAWhR,KAAK2R,cAAcb,EAAWe,mBACzCD,GAAsB,GACbd,EAAWE,UACpBA,EAAWhR,KAAK2R,cAAcb,EAAWE,UACzCY,GAAsB,IAItBZ,EAAWD,EAAY,EAAIA,EAAY,EACvCa,GAAsB,GAIxB,IAAIE,EAAW,EACf,GAAIF,GAAuBZ,EAAW,EAEpC,GAAIE,EAAU,CACZ,MAAMa,EAAUf,EAAWD,EAC3Be,EAAW/I,KAAKiJ,IAAI,IAAKjJ,KAAKyI,IAAI,EAAIO,EAAUf,EAAY,KAC9D,MAAyB,IAAdD,IACTe,EAAW,UAIb,GAAIZ,GAAYH,EAAY,EAAG,CAI7B,MAAMkB,EAAmBlJ,KAAKyI,IAAgB,EAAZT,EAAe,KAC3CgB,EAAUE,EAAmBlB,EACnCe,EAAW/I,KAAKiJ,IAAI,IAAKjJ,KAAKyI,IAAI,EAAIO,EAAUE,EAAoB,KACtE,MAGEH,EAHUZ,GAA0B,IAAdH,EAGX,EAFA,IAUf,MAAO,CACLG,WACAgB,UAAU,EACVlB,WACAD,YACAE,aACAa,WACAzB,cAAc,EACd8B,YAXkBnS,KAAKoS,mBAAmBjC,EAAUW,GAYpDuB,WAXiBvB,EAAWwB,eAAiBxB,EAAWyB,aAAevS,KAAKwS,qBAAqBrC,GAarG,CAQU,2BAAOQ,CAAqBR,EAAkBK,GACpD,MAAMpN,EAAQoN,EAAOpN,MACf0N,EAAaN,EAAOM,WAGpBI,EAAqB,WAAV9N,EACX8O,EAAqB,WAAV9O,EACXqP,EAAmB,SAAVrP,EAGf,IAAI4N,EAAW,EACXF,EAAWE,WACbA,EAAWhR,KAAK2R,cAAcb,EAAWE,WAI3C,IAAID,EAAY,EACZE,EAA0B,MAE1BC,GAAYgB,KACVpB,EAAW4B,aAEbzB,EAAa,IAAIG,KAAKN,EAAW4B,aAC5BrB,MAAMJ,EAAWK,aACpBP,EAAYhI,KAAKyI,IAAI,EAAGzI,KAAK0I,OAAOR,EAAWK,UAAYF,KAAKG,OAAS,QAElET,EAAWC,YAEpBA,EAAY/Q,KAAK2R,cAAcb,EAAWC,aAK9C,IAAIe,EAAW,EACf,GAAId,EAAW,EACb,GAAIyB,EACFX,EAAW,MACN,CACL,MAAMC,EAAUf,EAAWD,EAC3Be,EAAW/I,KAAKiJ,IAAI,IAAKjJ,KAAKyI,IAAI,EAAIO,EAAUf,EAAY,KAC9D,CAGF,MAAO,CACLE,WACAgB,WACAlB,WACAD,YACAE,aACAa,WACAzB,cAAc,EAElB,CAOQ,qBAAOc,CAAewB,GAG5B,MADiB,sEACDpI,KAAKoI,EACvB,CAQQ,yBAAOP,CAAmBjC,EAAkBW,GAElD,GAAIX,EAASC,SAAS,QAAS,CAC7B,MAAMwC,EAAQzC,EAASyC,MAAM,sBAC7B,GAAIA,EAAO,OAAOA,EAAM,GAAGC,QAAQ,KAAM,IAC3C,CAGA,OAAI/B,EAAWgC,YAAoBhC,EAAWgC,YAC1ChC,EAAWiC,OAAejC,EAAWiC,OAGlC,cACT,CAOQ,2BAAOP,CAAqBrC,GAClC,OAAOA,EACJ0C,QAAQ,YAAa,IACrBA,QAAQ,eAAgB,IACxBA,QAAQ,UAAW,IACnBA,QAAQ,KAAM,KACdA,QAAQ,QAAS1R,GAAKA,EAAE6R,cAC7B,CAOQ,oBAAOrB,CAAcX,GAC3B,GAAwB,iBAAbA,EACT,OAAOA,EAGT,GAAwB,iBAAbA,EACT,OAAO,EAIT,GAAIA,EAASZ,SAAS,KAAM,CAC1B,MAAM1F,EAAQsG,EAASzF,MAAM,KAAKhF,IAAIzE,QACtC,GAAqB,IAAjB4I,EAAMlM,OAER,OAAkB,KAAXkM,EAAM,GAAuB,GAAXA,EAAM,GAAUA,EAAM,GAC1C,GAAqB,IAAjBA,EAAMlM,OAEf,OAAkB,GAAXkM,EAAM,GAAUA,EAAM,EAEjC,CAGA,MAAMuI,EAAUvB,WAAWV,GAC3B,OAAOK,MAAM4B,GAAW,EAAIA,CAC9B,CAQA,0BAAOC,CAAoBnC,EAAmBoC,GAAuB,GACnE,GAAIpC,GAAa,EACf,MAAO,OAGT,MAAMqC,EAAQrK,KAAK0I,MAAMV,EAAY,MAC/BsC,EAAUtK,KAAK0I,MAAOV,EAAY,KAAQ,IAC1CkC,EAAUlK,KAAK0I,MAAMV,EAAY,IAEvC,OAAIqC,EAAQ,EACND,EACK,GAAGC,KAASC,EAAQ7S,WAAW8S,SAAS,EAAG,QAAQL,EAAQzS,WAAW8S,SAAS,EAAG,OAElF,GAAGF,KAASC,EAAQ7S,WAAW8S,SAAS,EAAG,OAGhDH,EACK,GAAGE,KAAWJ,EAAQzS,WAAW8S,SAAS,EAAG,OAE7C,GAAGD,IAGhB,CASA,oBAAOE,CAAcpD,EAAkBI,EAAqBiD,GAC1D,GAAIA,EACF,OAAOA,EAGT,IAAKjD,IAASJ,EACZ,MAAO,QAGT,MAAMK,EAASD,EAAKE,OAAON,GAC3B,IAAKK,EACH,MAAO,QAIT,GAAIxQ,KAAKqQ,aAAaF,GAAW,CAC/B,MAAMsD,EAAYzT,KAAK0Q,kBAAkBP,EAAUK,EAAQD,GAC3D,OAAIkD,aAAS,EAATA,EAAWpB,YACNoB,EAAUpB,WAEZrS,KAAKwS,qBAAqBrC,EACnC,CAGA,OAAOK,EAAOM,WAAWwB,eAAiBnC,EAAS0C,QAAQ,SAAU,IAAIA,QAAQ,KAAM,IACzF,CAQA,uBAAOa,CAAiBD,EAAsBN,GAAuB,GACnE,IAAKM,EACH,MAAO,kBAIT,GAAIA,EAAUpD,aAAc,CAC1B,GAAIoD,EAAUvC,UAAYuC,EAAU1C,UAAY,EAAG,CAEjD,MAAO,GADe/Q,KAAKkT,oBAAoBO,EAAU1C,UAAWoC,eAChCM,EAAUtB,YAAc,OAAOsB,EAAUtB,cAAgB,IAC/F,CAAO,OAA4B,IAAxBsB,EAAU1C,WAAmB0C,EAAU3B,UAAY,IACrD,kBAAiB2B,EAAUtB,YAAc,OAAOsB,EAAUtB,cAAgB,IAE1E,eAAcsB,EAAUtB,YAAc,OAAOsB,EAAUtB,cAAgB,GAElF,CAGA,GAAIsB,EAAUvC,SAAU,CAEtB,MAAO,GADelR,KAAKkT,oBAAoBO,EAAU1C,UAAWoC,cAEtE,CAAO,GAAIM,EAAUvB,SAAU,CAE7B,MAAO,YADelS,KAAKkT,oBAAoBO,EAAU1C,UAAWoC,SAEtE,CAEE,GAAIM,EAAUzC,SAAW,EAAG,CAE1B,MAAO,WADchR,KAAKkT,oBAAoBO,EAAUzC,SAAUmC,IAEpE,CACE,MAAO,aAGb,CAOA,qBAAOQ,CAAeF,GACpB,QAAKA,IAGDA,EAAUpD,aACmB,IAAxBoD,EAAU1C,WAAmB0C,EAAU3B,UAAY,KAIpD2B,EAAUvC,WAAauC,EAAUvB,UAAYuB,EAAU3B,UAAY,IAC7E,CAQA,yBAAO8B,CAAmBH,EAAsBI,EAAuB,WACrE,OAAKJ,EAKDA,EAAUpD,aACRoD,EAAUvC,UAAYuC,EAAU1C,UAAY,EACvC,UACE/Q,KAAK2T,eAAeF,GACtB,UAEA,UAKPA,EAAUvC,SACL,UACEuC,EAAUvB,SACZ,UACElS,KAAK2T,eAAeF,GACtB,UAEA,UAtBAI,CAwBX,CAOA,0BAAOC,CAAoBvD,GACzB,IAAKA,IAASA,EAAKE,OAAQ,MAAO,GAElC,MAAMsD,EAAwB,GAE9B,IAAK,MAAM5D,KAAYI,EAAKE,OAC1B,GAAIzQ,KAAKqQ,aAAaF,GAAW,CAC/B,MAAMK,EAASD,EAAKE,OAAON,GAEvBK,EAAOpN,OACU,gBAAjBoN,EAAOpN,OACU,YAAjBoN,EAAOpN,OACU,SAAjBoN,EAAOpN,OACT2Q,EAAYjR,KAAKqN,EAErB,CAGF,OAAO4D,CACT,QCzeWC,GAMX,mBAAOC,CAAaC,GAGlB,IACE,MAAMC,EAAenU,KAAKoU,mBAAmBF,GAC7C,IAAK7C,MAAM8C,GACT,OAAOA,CAEX,CAAE,MAAOhV,GAET,CAGA,MAAMkV,EAAe,IAAIjD,KAAK8C,GAC9B,OAAK7C,MAAMgD,EAAa/C,YAActR,KAAKsU,kBAAkBD,EAAcH,GAClEG,EAAa/C,UAIftR,KAAKuU,qBAAqBL,EACnC,CAQA,wBAAOI,CAAkBE,EAAeC,GACtC,MAAMC,EAAYF,EAAQlD,UAGpBqD,EAAe,IAAIvD,KAAK,cAAcE,UACtCsD,EAAe,IAAIxD,KAAK,cAAcE,UAE5C,GAAIoD,EAAYC,GAAgBD,EAAYE,EAC1C,OAAO,EAIT,GAA8B,iBAAnBH,GAA+BA,EAAerE,SAAS,SAAU,CAC1E,MAAMyE,EAAOL,EAAQM,cACrB,IAAK9U,KAAK+U,WAAWF,GACnB,OAAO,CAEX,CAEA,OAAO,CACT,CAOA,iBAAOE,CAAWF,GAChB,OAAQA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAOA,EAAO,KAAQ,CACjE,CAOA,yBAAOT,CAAmBF,GACxB,GAA0B,iBAAfA,GAA2BA,EAAW9D,SAAS,KAAM,CAI9D,GAFoB,sBAAsB7F,KAAK2J,GAI7C,OAAO,IAAI9C,KAAK8C,GAAY5C,UACvB,CAEL,MAAO0D,EAAUC,GAAYf,EAAW3I,MAAM,MACvCsJ,EAAMK,EAAOC,GAAOH,EAASzJ,MAAM,KAAKhF,IAAIzE,QAGnD,IAAK9B,KAAKoV,sBAAsBP,EAAMK,EAAOC,GAC3C,MAAM,IAAIjV,MAAM,2BAGlB,GAAI+U,GAAYA,EAAS7E,SAAS,KAAM,CACtC,MAAOiF,EAAMC,EAAQC,GAAUN,EAAS1J,MAAM,KAAKhF,IAAImL,YAGvD,IAAK1R,KAAKwV,sBAAsBH,EAAMC,EAAQC,GAC5C,MAAM,IAAIrV,MAAM,2BAGlB,OAAO,IAAIkR,KAAKyD,EAAMK,EAAQ,EAAGC,EAAKE,EAAMC,EAAQC,GAAU,GAAGjE,SACnE,CACE,OAAO,IAAIF,KAAKyD,EAAMK,EAAQ,EAAGC,GAAK7D,SAE1C,CACF,CAEE,OAAO,IAAIF,KAAK8C,GAAY5C,SAEhC,CASA,4BAAO8D,CAAsBP,EAAcK,EAAeC,GACxD,GAAI9D,MAAMwD,IAASxD,MAAM6D,IAAU7D,MAAM8D,GAAM,OAAO,EACtD,GAAIN,EAAO,MAAQA,EAAO,KAAM,OAAO,EACvC,GAAIK,EAAQ,GAAKA,EAAQ,GAAI,OAAO,EACpC,GAAIC,EAAM,GAAKA,EAAM,GAAI,OAAO,EAIhC,QAAIA,EADgB,CAAC,GAAInV,KAAK+U,WAAWF,GAAQ,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxEK,EAAQ,GAGhC,CASA,4BAAOM,CAAsBH,EAAWC,EAAaC,GACnD,MAAM1U,EAAI4U,SAASJ,GACb/L,EAAImM,SAASH,GACb5V,EAAI+V,SAASF,GAEnB,QAAIlE,MAAMxQ,IAAMwQ,MAAM/H,IAAM+H,MAAM3R,QAC9BmB,EAAI,GAAKA,EAAI,QACbyI,EAAI,GAAKA,EAAI,OACb5J,EAAI,GAAKA,EAAI,KAGnB,CAOA,2BAAO6U,CAAqBL,GAC1B,IACE,MAAMQ,EAAYtD,KAAKrP,MAAMmS,GAC7B,OAAK7C,MAAMqD,IAKX9D,QAAQC,KAAK,uEAAwEqD,GAC9E9C,KAAKG,OALHmD,CAMX,CAAE,MAAOgB,GAEP,OADA9E,QAAQ8E,MAAM,kDAAmDA,GAC1DtE,KAAKG,KACd,CACF,QCrJWoE,GAMX,qBAAOC,CAAeC,GACpB,MAAMC,EAA4B,GAGlC,IAAKD,EAQH,OAPAC,EAAOhT,KAAK,CACViT,MAAO,SACPC,QAAS,2CACTC,SAAU,WACVC,WAAY,0EACZC,MAAON,IAEF,CACLO,SAAS,EACTN,SACAO,mBAAmB,EACnBC,aAAa,GAKbT,EAAOU,YACJvW,KAAKwW,iBAAiBX,EAAOU,cAChCT,EAAOhT,KAAK,CACViT,MAAO,cACPC,QAAS,6BACTC,SAAU,WACVC,WAAY,oHACZC,MAAON,EAAOU,cAGRV,EAAOY,cAAiBZ,EAAOa,qBAEzCZ,EAAOhT,KAAK,CACViT,MAAO,cACPC,QAAS,kFACTC,SAAU,WACVC,WAAY,0JACZC,WAAOQ,IAKPd,EAAOY,eAAiBzW,KAAK4W,gBAAgBf,EAAOY,eACtDX,EAAOhT,KAAK,CACViT,MAAO,eACPC,QAAS,8BACTC,SAAU,UACVC,WAAY,uEACZC,MAAON,EAAOY,eAKdZ,EAAOgB,gBAAkB7W,KAAKwW,iBAAiBX,EAAOgB,gBACxDf,EAAOhT,KAAK,CACViT,MAAO,gBACPC,QAAS,+BACTC,SAAU,UACVC,WAAY,uEACZC,MAAON,EAAOgB,gBAKE,CAAC,QAAS,mBAAoB,kBACtCrR,QAAQuQ,IACdF,EAAOE,KAAW/V,KAAK8W,kBAAkBjB,EAAOE,KAClDD,EAAOhT,KAAK,CACViT,QACAC,QAAS,WAAWD,WACpBE,SAAU,UACVC,WAAY,iFACZC,MAAON,EAAOE,OAMI,CAAC,QAAS,SAAU,aAC5BvQ,QAAQuQ,IAClBF,EAAOE,KAAW/V,KAAK+W,sBAAsBlB,EAAOE,KACtDD,EAAOhT,KAAK,CACViT,QACAC,QAAS,WAAWD,WACpBE,SAAU,UACVC,WAAY,oEACZC,MAAON,EAAOE,OAMhBF,EAAOmB,eAAiBhX,KAAKiX,wBAAwBpB,EAAOmB,eAC9DlB,EAAOhT,KAAK,CACViT,MAAO,eACPC,QAAS,8BACTC,SAAU,UACVC,WAAY,2CACZC,MAAON,EAAOmB,oBAKUL,IAAxBd,EAAOqB,cAA+BlX,KAAKmX,mBAAmBtB,EAAOqB,aAAc,EAAG,KACxFpB,EAAOhT,KAAK,CACViT,MAAO,eACPC,QAAS,6BACTC,SAAU,UACVC,WAAY,qCACZC,MAAON,EAAOqB,eAKI,CAAC,cAAe,YAAa,aAAc,eAAgB,eAAgB,oBAAqB,sBACxG1R,QAAQuQ,SACEY,IAAlBd,EAAOE,IAAyB/V,KAAKoX,oBAAoBvB,EAAOE,KAClED,EAAOhT,KAAK,CACViT,QACAC,QAAS,WAAWD,UACpBE,SAAU,UACVC,WAAY,yCACZC,MAAON,EAAOE,OAMD,CAAC,QAAS,WAAY,gBAC9BvQ,QAAQuQ,IACbF,EAAOE,KAAW/V,KAAKqX,iBAAiBxB,EAAOE,KACjDD,EAAOhT,KAAK,CACViT,QACAC,QAAS,WAAWD,0CACpBE,SAAU,WACVC,WAAY,yEACZC,MAAON,EAAOE,OAMhBF,EAAOvR,SAAWtE,KAAKsX,mBAAmBzB,EAAOvR,SACnDwR,EAAOhT,KAAK,CACViT,MAAO,SACPC,QAAS,kCACTC,SAAU,UACVC,WAAY,iFACZC,MAAON,EAAOvR,SAKlBtE,KAAKuX,uBAAuB1B,EAAQC,GAGpC,MAAM0B,EAAaxX,KAAKyX,oBAAoB5B,EAAQC,GAE9C4B,EAAiB5B,EAAO6B,OAAOxY,GAAoB,aAAfA,EAAE8W,UACtC2B,EAAW9B,EAAO6B,OAAOxY,GAAoB,YAAfA,EAAE8W,UAEtC,MAAO,CACLG,QAAmC,IAA1BsB,EAAelZ,QAAoC,IAApBoZ,EAASpZ,OACjDsX,SACAO,kBAAmBqB,EAAelZ,OAAS,EAC3C8X,YAAasB,EAASpZ,OAAS,EAC/BgZ,aAEJ,CAKQ,6BAAOD,CAAuB1B,EAAaC,GAGnD,CAKQ,0BAAO2B,CAAoB5B,EAAaC,GAC9C,MAAM0B,EAAa,IAAK3B,GAsCxB,OAnCAC,EAAOtQ,QAAQkQ,IACb,GAAuB,aAAnBA,EAAMO,UAA8C,YAAnBP,EAAMO,SACzC,OAAQP,EAAMK,OACZ,IAAK,cACH,IAAKyB,EAAWjB,cAAgBiB,EAAWf,aAAc,CAEvD,MAAMoB,EAAW,IAAIzG,KACrByG,EAASC,QAAQD,EAASE,UAAY,GACtCP,EAAWjB,YAAcsB,EAASG,aACpC,CACA,MACF,IAAK,mBACEhY,KAAK8W,kBAAkBU,EAAWS,oBACrCT,EAAWS,iBAAmB,WAEhC,MACF,IAAK,iBACEjY,KAAK8W,kBAAkBU,EAAWU,kBACrCV,EAAWU,eAAiB,WAE9B,MACF,IAAK,eACElY,KAAKmX,mBAAmBK,EAAWN,aAAc,EAAG,MACvDM,EAAWN,aAAe,IAE5B,MACF,IAAK,YACElX,KAAK+W,sBAAsBS,EAAWW,aACzCX,EAAWW,UAAY,QAO1BX,CACT,CAMA,2BAAOY,CAAqBvC,GAC1B,MAAMwC,EAASrY,KAAK4V,eAAeC,GACnC,GAAIwC,EAAOhC,kBAAmB,CAC5B,MAAMqB,EAAiBW,EAAOvC,OAAO6B,OAAOxY,GAAoB,aAAfA,EAAE8W,UACnD,MAAM,IAAI/V,MAAM,uCAAuCwX,EAAenR,IAAIpH,GAAKA,EAAE6W,SAASsC,KAAK,UACjG,CACF,CAOA,uBAAO9B,CAAiBL,GACtB,IAAKA,EAAO,OAAO,EAGnB,GAAInW,KAAKuY,WAAWpC,GAAQ,OAAO,EAGnC,GAAqB,iBAAVA,GAAsBA,EAAM/F,SAAS,KAAM,OAAO,EAG7D,GAAqB,iBAAV+F,EACT,IACE,MAAMqC,EAAO,IAAIpH,KAAK+E,GACtB,OAAQ9E,MAAMmH,EAAKlH,UACrB,CAAE,MAAOnS,GACP,OAAO,CACT,CAGF,OAAO,CACT,CAOA,wBAAO2X,CAAkBX,GACvB,IAAKA,EAAO,OAAO,EAGnB,GAAInW,KAAKuY,WAAWpC,IAA4B,iBAAVA,GAAsBA,EAAM/F,SAAS,KAAO,OAAO,EAEzF,GAAqB,iBAAV+F,EAAoB,OAAO,EAGtC,GAAI,yBAAyB5L,KAAK4L,GAAQ,OAAO,EAGjD,GAAI,4DAA4D5L,KAAK4L,GAAQ,OAAO,EAGpF,GAAI,8DAA8D5L,KAAK4L,GAAQ,OAAO,EAStF,MANkB,CAChB,MAAO,OAAQ,QAAS,SAAU,SAAU,SAAU,OAAQ,QAAS,QAAS,QAAS,OAAQ,OACjG,OAAQ,UAAW,OAAQ,SAAU,OAAQ,QAAS,OAAQ,SAAU,OAAQ,SAAU,SAC1F,cAAe,eAAgB,UAAW,UAAW,SAGtC/F,SAAS+F,EAAMvR,cAClC,CAOA,4BAAOmS,CAAsBZ,GAC3B,IAAKA,EAAO,OAAO,EAGnB,GAAInW,KAAKuY,WAAWpC,IAA4B,iBAAVA,GAAsBA,EAAM/F,SAAS,KAAO,OAAO,EAGzF,GAAqB,iBAAV+F,EAAoB,OAAO,EAEtC,GAAqB,iBAAVA,EAAoB,OAAO,EAGtC,MAAMsC,EAAUtC,EAAMvD,MAAM,wBAC5B,GAAI6F,EAAS,CACX,MAAMC,EAAKhH,WAAW+G,EAAQ,IAC9B,OAAOC,GAAM,GAAKA,GAAM,GAC1B,CAGA,MAAMC,EAAexC,EAAMvD,MAAM,uBACjC,GAAI+F,EAAc,CAChB,MAAMC,EAAUlH,WAAWiH,EAAa,IACxC,OAAOC,GAAW,GAAKA,GAAW,GACpC,CAGA,MAAMC,EAAa,CAAC,KAAM,MAAO,KAAM,KAAM,OAAQ,OAAQ,KAAM,MACnE,IAAK,MAAMC,KAAQD,EAAY,CAC7B,MAAME,EAAQ,IAAIxP,OAAO,sBAAsBuP,KAAS,KAClDlG,EAAQuD,EAAMvD,MAAMmG,GAC1B,GAAInG,EAAO,CACT,MAAMoG,EAAYtH,WAAWkB,EAAM,IACnC,OAAOoG,GAAa,GAAKA,GAAa,GACxC,CACF,CAIA,MADsB,CAAC,OAAQ,cAAe,cAAe,eACxC5I,SAAS+F,EAAMvR,cACtC,CAOA,8BAAOqS,CAAwBd,GAC7B,IAAKA,EAAO,OAAO,EAGnB,GAAInW,KAAKuY,WAAWpC,IAA4B,iBAAVA,GAAsBA,EAAM/F,SAAS,KAAO,OAAO,EAEzF,GAAqB,iBAAV+F,EAAoB,OAAO,EAGtC,MAAM8C,EAAc9C,EAAMvD,MAAM,sCAChC,GAAIqG,EAAa,CACf,MAAMC,EAAQxH,WAAWuH,EAAY,IAC/BE,EAASzH,WAAWuH,EAAY,IACtC,OAAOC,EAAQ,GAAKC,EAAS,GAAKD,GAAS,IAAMC,GAAU,EAC7D,CAEA,OAAO,CACT,CASA,yBAAOhC,CAAmBhB,EAAYnE,GAAeoH,IAAU5H,EAAc4H,KAC3E,GAAIjD,QAAuC,OAAO,EAGlD,GAAqB,iBAAVA,EAAoB,CAC7B,GAAInW,KAAKuY,WAAWpC,IAAUA,EAAM/F,SAAS,KAAM,OAAO,EAE1D,MAAMiJ,EAAS3H,WAAWyE,GAC1B,OAAQ9E,MAAMgI,IAAWA,GAAUrH,GAAOqH,GAAU7H,CACtD,CAEA,MAAwB,iBAAV2E,IAAuB9E,MAAM8E,IAAUA,GAASnE,GAAOmE,GAAS3E,CAChF,CAOA,0BAAO4F,CAAoBjB,GACzB,MAAwB,kBAAVA,CAChB,CAOA,uBAAOkB,CAAiBlB,GACtB,IAAKA,EAAO,OAAO,EAGnB,GAAInW,KAAKuY,WAAWpC,IAA4B,iBAAVA,GAAsBA,EAAM/F,SAAS,KAAO,OAAO,EAEzF,GAAqB,iBAAV+F,EAAoB,OAAO,EActC,OAX0B,CACxB,WACA,eACA,aACA,aACA,WACA,WACA,UACA,UAGwBmD,KAAKC,GAAWA,EAAQhP,KAAK4L,GACzD,CAOA,yBAAOmB,CAAmBhT,GACxB,IAAKA,GAA4B,iBAAXA,EAAqB,OAAO,EAElD,MAAMkV,EAAiB,CAAC,OAAQ,QAAS,WAAY,mBAG/CC,EAAY/a,OAAOwE,KAAKoB,GAC9B,QAAKmV,EAAUC,MAAMvb,GAAOqb,EAAepJ,SAASjS,KAG7Csb,EAAUC,MAAMvb,GAAOuD,MAAM6C,QAAQD,EAAOnG,IACrD,CAOA,iBAAOoa,CAAWpC,GAChB,MAAwB,iBAAVA,GACPA,EAAM/F,SAAS,OACf+F,EAAM/F,SAAS,KACxB,CAOA,sBAAOwG,CAAgBT,GACrB,IAAKA,GAA0B,iBAAVA,EAAoB,OAAO,EAGhD,GAAInW,KAAKuY,WAAWpC,GAAQ,OAAO,EAInC,MADsB,wBACD5L,KAAK4L,EAC5B,QCleWwD,GAKX,WAAA5Z,GACEC,KAAK4Z,gBAAkB,IAAI5V,IAC3BhE,KAAK6Z,mBAAqB,GAC5B,CAQA,sBAAMC,CAAiBC,EAAkBxJ,GACvC,IAAKA,IAASwJ,EACZ,OAAOA,EAIT,MAAMC,EAAWD,EACjB,GAAI/Z,KAAK4Z,gBAAgBnS,IAAIuS,GAAW,CACtC,MAAMC,EAASja,KAAK4Z,gBAAgBvZ,IAAI2Z,GAExC,GAAIC,GAAU7I,KAAKG,MAAQ0I,EAAOvF,UAAY,IAC5C,OAAOuF,EAAO5B,MAElB,CAEA,IAEE,IAAKrY,KAAKka,gBAAgBH,GACxB,MAAM,IAAI7Z,MAAM,2BAIlB,MAAMmY,QAAe9H,EAAK4J,QAAQ,OAAQ,WAAY,CACpDJ,SAAUA,IAIZ,GAAe,YAAX1B,GAAmC,gBAAXA,GAAuC,KAAXA,GAA4B,OAAXA,EAAiB,CAExF,MAAM+B,EAAWpa,KAAKqa,4BAA4BN,GAClD,GAAIK,GAAYA,IAAaL,EAU3B,OARA/Z,KAAK4Z,gBAAgBrZ,IAAIyZ,EAAU,CACjC3B,OAAQ+B,EACR1F,UAAWtD,KAAKG,QAIlBvR,KAAKsa,4BAEEF,CAEX,CAWA,OARApa,KAAK4Z,gBAAgBrZ,IAAIyZ,EAAU,CACjC3B,OAAQA,EACR3D,UAAWtD,KAAKG,QAIlBvR,KAAKsa,4BAEEjC,CACT,CAAE,MAAO3C,GACP9E,QAAQC,KAAK,8DAA8D6E,aAAK,EAALA,EAAOM,UAAWN,GAG7F,MAAM0E,EAAWpa,KAAKqa,4BAA4BN,GASlD,OANA/Z,KAAK4Z,gBAAgBrZ,IAAIyZ,EAAU,CACjC3B,OAAQ+B,EACR1F,UAAWtD,KAAKG,QAGlBvR,KAAKsa,4BACEF,CACT,CACF,CAOA,2BAAAC,CAA4BN,GAC1B,IAAKA,GAAgC,iBAAbA,EACtB,OAAOA,EAGT,IAEE,MAAMQ,EAAgBR,EAASlH,QAAQ,WAAY,IAAIA,QAAQ,WAAY,IAAI2H,OAGzEC,EAAkB,qCAClBC,EAAgBH,EAAc3H,MAAM6H,GAE1C,GAAIC,GAAiBA,EAAc,GACjC,OAAOA,EAAc,GAIvB,MAAMC,EAAmB,kDACnBC,EAAeL,EAAc3H,MAAM+H,GAEzC,GAAIC,GAAgBA,EAAa,GAC/B,OAAOA,EAAa,GAItB,MAAMC,EAAqB,kEACrBC,EAAmBP,EAAc3H,MAAMiI,GAE7C,GAAIC,GAAoBA,EAAiB,GACvC,OAAOA,EAAiB,GAI1B,MAAMC,EAA4B,oDAC5BC,EAAeT,EAAc3H,MAAMmI,GAEzC,OAAIC,GAAgBA,EAAa,GACxBA,EAAa,GAIf,aACT,CAAE,MAAOtF,GAEP,OADA9E,QAAQC,KAAK,0DAA2D6E,GACjE,gBACT,CACF,CAOA,UAAA6C,CAAWpC,GACT,MAAwB,iBAAVA,GACPA,EAAM/F,SAAS,OACf+F,EAAM/F,SAAS,KACxB,CAOA,eAAA8J,CAAgBH,GACd,IAAKA,GAAgC,iBAAbA,EAAuB,OAAO,EAGtD,IAAKA,EAAS3J,SAAS,QAAU2J,EAAS3J,SAAS,MAAO,OAAO,EAKjE,IAFoB2J,EAASnH,MAAM,UAAY,IAAIpU,UAC9Bub,EAASnH,MAAM,UAAY,IAAIpU,OACpB,OAAO,EAIvC,QADgBub,EAASlH,QAAQ,UAAW,IAAIA,QAAQ,UAAW,IAAI2H,MAIzE,CAOA,kBAAMS,CAAa9E,WACjB,IAAKA,EAAO,OAEZ,GAAInW,KAAKuY,WAAWpC,GAAQ,CAC1B,MAAM5F,GAAgB,QAAT2K,EAAAlb,KAAKmb,YAAI,IAAAD,OAAA,EAAAA,EAAE3K,OAAQ,KAEhC,aADqBvQ,KAAK8Z,iBAAiB3D,EAAO5F,SACjCoG,CACnB,CAGA,MAAMpG,EAAgB,QAAT6K,EAAApb,KAAKmb,YAAI,IAAAC,OAAA,EAAAA,EAAE7K,KACxB,GAAqB,iBAAV4F,GAAsBA,EAAM/F,SAAS,MAAQG,GAAQA,EAAKE,OAAO0F,GAAQ,CAClF,MAAM3F,EAASD,EAAKE,OAAO0F,GAC3B,OAAK3F,EAIEA,EAAOpN,WAHZwN,QAAQC,KAAK,UAAUsF,cAI3B,CAEA,OAAOA,CACT,CAKA,kBAAAkF,GACErb,KAAK4Z,gBAAgB0B,OACvB,CAKA,yBAAAhB,GACE,GAAIta,KAAK4Z,gBAAgB3T,MAAQjG,KAAK6Z,mBACpC,OAIF,MAAM0B,EAAe7Z,MAAM8Z,KAAKxb,KAAK4Z,gBAAgB6B,WAClDC,KAAK,CAACza,EAAGgB,IAAMhB,EAAE,GAAGyT,UAAYzS,EAAE,GAAGyS,WAGlCiH,EAAkBJ,EAAa/c,OAASwB,KAAK6Z,mBACnD,IAAK,IAAI/a,EAAI,EAAGA,EAAI6c,EAAiB7c,IACnCkB,KAAK4Z,gBAAgB5T,OAAOuV,EAAazc,GAAG,GAEhD,CAOA,oBAAA8c,CAAqB/F,GACnB,IAAKA,EAAQ,OAAO,EAQpB,MAL2B,CACzB,cAAe,gBAAiB,QAAS,WACzC,QAAS,mBAAoB,iBAAkB,gBAAiB,mBAGxCyD,KAAKuC,GAC7BhG,EAAOgG,IAAS7b,KAAKuY,WAAW1C,EAAOgG,IAE3C,CAOA,UAAAC,CAAWC,GACT,OAAY,MAARA,QAAyBpF,IAAToF,EAA2B,GACxC3Z,OAAO2Z,GACXlJ,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,QACnB,QCvQWmJ,GAMX,WAAAjc,CAAYkc,EAAsBC,GAChClc,KAAKic,gBAAkBA,EACvBjc,KAAKkc,WAAaA,EAClBlc,KAAKmc,cAAgB,CAAEC,OAAQ,EAAGC,KAAM,EAAGjJ,MAAO,EAAGC,QAAS,EAAGJ,QAAS,EAAGqJ,MAAO,GACpFtc,KAAKuc,SAAU,CACjB,CAQA,qBAAMC,CAAgB3G,EAAoBtF,GACxC,IAEE,GAAIsF,EAAOY,cAAgBlG,EAAM,CAC/B,MAAMkD,EAAYxD,GAAmBK,aAAauF,EAAOY,aAAclG,GACvE,GAAIkD,EAIF,OAFAzT,KAAKmc,cAAgBnc,KAAKyc,2BAA2BhJ,GACrDzT,KAAKuc,QAAUtM,GAAmB0D,eAAeF,GAC1CzT,KAAKmc,aAEhB,CAGA,IAAKtG,EAAOY,cAAgBZ,EAAOa,qBAAuBnG,EAAM,CAC9D,MAAMwD,EAAc9D,GAAmB6D,oBAAoBvD,GAC3D,GAAIwD,EAAYvV,OAAS,EAAG,CAE1B,MAAMke,EAAmB3I,EAAY4I,KAAKxM,IACxC,MAAMsD,EAAYxD,GAAmBK,aAAaH,EAAUI,GAC5D,OAAOkD,GAAaA,EAAUvC,WAGhC,GAAIwL,EAAkB,CACpB,MAAMjJ,EAAYxD,GAAmBK,aAAaoM,EAAkBnM,GACpE,GAAIkD,EAGF,OAFAzT,KAAKmc,cAAgBnc,KAAKyc,2BAA2BhJ,GACrDzT,KAAKuc,QAAUtM,GAAmB0D,eAAeF,GAC1CzT,KAAKmc,aAEhB,CACF,CACF,CAEA,IAAKtG,EAAOU,YAAa,OAAOvW,KAAKmc,cAErC,MAAM5K,GAAM,IAAIH,MAAOE,UACjBsL,QAAwB5c,KAAKic,gBAAgBhB,aAAapF,EAAOU,aAEvE,IAAKqG,EAEH,OADAhM,QAAQC,KAAK,uFACN7Q,KAAKmc,cAId,MAAMU,EAAa7c,KAAKkc,WAAWjI,aAAa2I,GAEhD,GAAIvL,MAAMwL,GAER,OADAjM,QAAQC,KAAK,6CAA8C+L,GACpD5c,KAAKmc,cAGd,MAAMW,EAAaD,EAAatL,EAEhC,GAAIuL,EAAa,EAAG,CAElB,MAAMC,YAAEA,EAAWC,UAAEA,EAASC,WAAEA,EAAUC,aAAEA,EAAYC,aAAEA,GAAiBtH,EAE3E,IAAIuH,EAAoBN,EACpBV,EAAS,EAAGC,EAAO,EAAGjJ,EAAQ,EAAGC,EAAU,EAAGJ,EAAU,EAQ5D,GALI8J,IACFX,EAASrT,KAAK0I,MAAM2L,EAAiB,WACrCA,GAAiB,WAGfJ,EACFX,EAAOtT,KAAK0I,MAAM2L,EAAiB,OACnCA,cACK,GAAIL,IAAgBC,EAAW,CAEpC,MAAMK,EAAYtU,KAAK0I,MAAM2L,EAAiB,OAC9ChB,GAAUrT,KAAK0I,MAAM4L,EAAY,OACjCD,QACF,CAEA,GAAIH,EACF7J,EAAQrK,KAAK0I,MAAM2L,EAAiB,MACpCA,GAAiB,UACZ,IAAKL,GAAeC,KAAeC,EAAY,CAEpD,MAAMK,EAAavU,KAAK0I,MAAM2L,EAAiB,MAC3CJ,EACFX,GAAQtT,KAAK0I,MAAM6L,EAAa,IACvBP,IACTX,GAAUrT,KAAK0I,MAAM6L,GAAc,GAAK,SAE1CF,GAAiB,IACnB,CAEA,GAAIF,EACF7J,EAAUtK,KAAK0I,MAAM2L,EAAiB,KACtCA,GAAiB,SACZ,IAAKL,GAAeC,GAAaC,KAAgBC,EAAc,CAEpE,MAAMK,EAAexU,KAAK0I,MAAM2L,EAAiB,KAC7CH,EACF7J,GAASrK,KAAK0I,MAAM8L,EAAe,IAC1BP,EACTX,GAAQtT,KAAK0I,MAAM8L,EAAY,MACtBR,IACTX,GAAUrT,KAAK0I,MAAM8L,EAAY,UAEnCH,GAAiB,GACnB,CAEA,GAAID,EACFlK,EAAUlK,KAAK0I,MAAM2L,EAAoB,UACpC,IAAKL,GAAeC,GAAaC,GAAcC,KAAkBC,EAAc,CAEpF,MAAMK,EAAezU,KAAK0I,MAAM2L,EAAoB,KAChDF,EACF7J,GAAWtK,KAAK0I,MAAM+L,EAAe,IAC5BP,EACT7J,GAASrK,KAAK0I,MAAM+L,EAAY,MACvBR,EACTX,GAAQtT,KAAK0I,MAAM+L,EAAY,OACtBT,IACTX,GAAUrT,KAAK0I,MAAM+L,EAAY,SAErC,CAEAxd,KAAKmc,cAAgB,CAAEC,SAAQC,OAAMjJ,QAAOC,UAASJ,UAASqJ,MAAOQ,GACrE9c,KAAKuc,SAAU,CACjB,MACEvc,KAAKmc,cAAgB,CAAEC,OAAQ,EAAGC,KAAM,EAAGjJ,MAAO,EAAGC,QAAS,EAAGJ,QAAS,EAAGqJ,MAAO,GACpFtc,KAAKuc,SAAU,EAGjB,OAAOvc,KAAKmc,aACd,CAAE,MAAOzG,GAEP,OADA9E,QAAQ8E,MAAM,2CAA4CA,GACnD1V,KAAKmc,aACd,CACF,CAQA,uBAAMsB,CAAkB5H,EAAoBtF,GAE1C,GAAIsF,EAAOY,cAAgBlG,EAAM,CAC/B,MAAMkD,EAAYxD,GAAmBK,aAAauF,EAAOY,aAAclG,GACvE,OAAKkD,EACEA,EAAU3B,SADM,CAEzB,CAGA,IAAK+D,EAAOY,cAAgBZ,EAAOa,qBAAuBnG,EAAM,CAC9D,MAAMwD,EAAc9D,GAAmB6D,oBAAoBvD,GAC3D,GAAIwD,EAAYvV,OAAS,EAAG,CAC1B,MAAMke,EAAmB3I,EAAY4I,KAAKxM,IACxC,MAAMsD,EAAYxD,GAAmBK,aAAaH,EAAUI,GAC5D,OAAOkD,GAAaA,EAAUvC,WAGhC,GAAIwL,EAAkB,CACpB,MAAMjJ,EAAYxD,GAAmBK,aAAaoM,EAAkBnM,GACpE,GAAIkD,EAAW,OAAOA,EAAU3B,QAClC,CACF,CACF,CAEA,MAAM8K,QAAwB5c,KAAKic,gBAAgBhB,aAAapF,EAAOU,aACvE,IAAKqG,EAAiB,OAAO,EAG7B,MAAMC,EAAa7c,KAAKkc,WAAWjI,aAAa2I,GAC1CrL,EAAMH,KAAKG,MAEjB,IAAImM,EACJ,GAAI7H,EAAOgB,cAAe,CACxB,MAAM8G,QAA0B3d,KAAKic,gBAAgBhB,aAAapF,EAAOgB,eAIvE6G,EAFEC,EAEa3d,KAAKkc,WAAWjI,aAAa0J,GAE7BpM,CAEnB,MACEmM,EAAenM,EAGjB,MAAMqM,EAAgBf,EAAaa,EACnC,GAAIE,GAAiB,EAAG,OAAO,IAE/B,MAAM7L,EAAUR,EAAMmM,EAChB5L,EAAW/I,KAAKiJ,IAAI,IAAKjJ,KAAKyI,IAAI,EAAIO,EAAU6L,EAAiB,MAEvE,OAAO5d,KAAKuc,QAAU,IAAMzK,CAC9B,CAQA,cAAA+L,CAAehI,EAAoBtF,GAEjC,GAAIsF,EAAOY,cAAgBlG,EAAM,CAC/B,MAAMkD,EAAYxD,GAAmBK,aAAauF,EAAOY,aAAclG,GACvE,GAAIkD,EAAW,CACb,MAAML,MAAEA,EAAKC,QAAEA,EAAOJ,QAAEA,GAAYjT,KAAKmc,cAGzC,OAAI1I,EAAUpD,aACRJ,GAAmB0D,eAAeF,GAC7B,CAAE0C,MAAO,KAAM2H,MAAO,mBAE3B1K,EAAQ,EAAU,CAAE+C,MAAO/C,EAAM5S,WAAYsd,MAAiB,IAAV1K,EAAc,YAAc,cAChFC,EAAU,EAAU,CAAE8C,MAAO9C,EAAQ7S,WAAYsd,MAAmB,IAAZzK,EAAgB,cAAgB,gBACrF,CAAE8C,MAAOlD,EAAQzS,WAAYsd,MAAmB,IAAZ7K,EAAgB,cAAgB,gBAIzEG,EAAQ,EAAU,CAAE+C,MAAO/C,EAAM5S,WAAYsd,MAAiB,IAAV1K,EAAc,OAAS,SAC3EC,EAAU,EAAU,CAAE8C,MAAO9C,EAAQ7S,WAAYsd,MAAmB,IAAZzK,EAAgB,SAAW,WAChF,CAAE8C,MAAOlD,EAAQzS,WAAYsd,MAAmB,IAAZ7K,EAAgB,SAAW,UACxE,CACF,CAGA,IAAK4C,EAAOY,cAAgBZ,EAAOa,qBAAuBnG,EAAM,CAC9D,MAAMwD,EAAc9D,GAAmB6D,oBAAoBvD,GAC3D,GAAIwD,EAAYvV,OAAS,EAAG,CAC1B,MAAMke,EAAmB3I,EAAY4I,KAAKxM,IACxC,MAAMsD,EAAYxD,GAAmBK,aAAaH,EAAUI,GAC5D,OAAOkD,GAAaA,EAAUvC,WAGhC,GAAIwL,EAAkB,CACpB,MAAMjJ,EAAYxD,GAAmBK,aAAaoM,EAAkBnM,GACpE,GAAIkD,EAAW,CACb,MAAML,MAAEA,EAAKC,QAAEA,EAAOJ,QAAEA,GAAYjT,KAAKmc,cACzC,OAAIlM,GAAmB0D,eAAeF,GAC7B,CAAE0C,MAAO,KAAM2H,MAAO,yBAE3B1K,EAAQ,EAAU,CAAE+C,MAAO/C,EAAM5S,WAAYsd,MAAiB,IAAV1K,EAAc,YAAc,cAChFC,EAAU,EAAU,CAAE8C,MAAO9C,EAAQ7S,WAAYsd,MAAmB,IAAZzK,EAAgB,cAAgB,gBACrF,CAAE8C,MAAOlD,EAAQzS,WAAYsd,MAAmB,IAAZ7K,EAAgB,cAAgB,eAC7E,CACF,CACF,CACF,CAEA,MAAM8J,YAAEA,EAAWC,UAAEA,EAASC,WAAEA,EAAUC,aAAEA,EAAYC,aAAEA,GAAiBtH,GACrEuG,OAAEA,EAAMC,KAAEA,EAAIjJ,MAAEA,EAAKC,QAAEA,EAAOJ,QAAEA,GAAYjT,KAAKmc,cAEvD,OAAInc,KAAKuc,QACA,CAAEpG,MAAO,KAAM2H,MAAO,cAI3Bf,GAAeX,EAAS,EACnB,CAAEjG,MAAOiG,EAAO5b,WAAYsd,MAAkB,IAAX1B,EAAe,aAAe,eAC/DY,GAAaX,EAAO,EACtB,CAAElG,MAAOkG,EAAK7b,WAAYsd,MAAgB,IAATzB,EAAa,WAAa,aACzDY,GAAc7J,EAAQ,EACxB,CAAE+C,MAAO/C,EAAM5S,WAAYsd,MAAiB,IAAV1K,EAAc,YAAc,cAC5D8J,GAAgB7J,EAAU,EAC5B,CAAE8C,MAAO9C,EAAQ7S,WAAYsd,MAAmB,IAAZzK,EAAgB,cAAgB,gBAClE8J,GAAgBlK,GAAW,EAC7B,CAAEkD,MAAOlD,EAAQzS,WAAYsd,MAAmB,IAAZ7K,EAAgB,cAAgB,gBAGtE,CAAEkD,MAAO,IAAK2H,MAAO,eAC9B,CAQA,WAAAC,CAAYlI,EAAoBtF,GAE9B,GAAIsF,EAAOY,cAAgBlG,EAAM,CAC/B,MAAMkD,EAAYxD,GAAmBK,aAAauF,EAAOY,aAAclG,GACvE,OAAIkD,EACKxD,GAAmByD,iBAAiBD,GAAmC,IAAxBoC,EAAOsH,cAExD,iBACT,CAGA,IAAKtH,EAAOY,cAAgBZ,EAAOa,qBAAuBnG,EAAM,CAC9D,MAAMwD,EAAc9D,GAAmB6D,oBAAoBvD,GAC3D,GAAIwD,EAAYvV,OAAS,EAAG,CAC1B,MAAMke,EAAmB3I,EAAY4I,KAAKxM,IACxC,MAAMsD,EAAYxD,GAAmBK,aAAaH,EAAUI,GAC5D,OAAOkD,GAAaA,EAAUvC,WAGhC,GAAIwL,EAAkB,CACpB,MAAMjJ,EAAYxD,GAAmBK,aAAaoM,EAAkBnM,GACpE,GAAIkD,EACF,OAAOxD,GAAmByD,iBAAiBD,GAAmC,IAAxBoC,EAAOsH,aAEjE,MAAO,GAAIpJ,EAAYvV,OAAS,EAE9B,MAAO,GAAGuV,EAAYvV,qBAA4C,IAAvBuV,EAAYvV,OAAe,GAAK,eAE/E,CACF,CAEA,GAAIwB,KAAKuc,QAAS,CAChB,MAAMyB,aAAEA,EAAe,iBAAoBnI,EAC3C,OAAOmI,CACT,CAEA,MAAM5B,OAAEA,EAAMC,KAAEA,EAAIjJ,MAAEA,EAAKC,QAAEA,EAAOJ,QAAEA,GAAYjT,KAAKmc,eAAiB,CAAEC,OAAQ,EAAGC,KAAM,EAAGjJ,MAAO,EAAGC,QAAS,EAAGJ,QAAS,IACvH8J,YAAEA,EAAWC,UAAEA,EAASC,WAAEA,EAAUC,aAAEA,EAAYC,aAAEA,GAAiBtH,EAErEnL,EAAQ,GAGVqS,GAAeX,EAAS,GAC1B1R,EAAM5H,KAAK,CAAEqT,MAAOiG,EAAQtD,KAAiB,IAAXsD,EAAe,QAAU,WAGzDY,GAAaX,EAAO,GACtB3R,EAAM5H,KAAK,CAAEqT,MAAOkG,EAAMvD,KAAe,IAATuD,EAAa,MAAQ,SAGnDY,GAAc7J,EAAQ,GACxB1I,EAAM5H,KAAK,CAAEqT,MAAO/C,EAAO0F,KAAgB,IAAV1F,EAAc,OAAS,UAGtD8J,GAAgB7J,EAAU,GAC5B3I,EAAM5H,KAAK,CAAEqT,MAAO9C,EAASyF,KAAkB,IAAZzF,EAAgB,SAAW,YAG5D8J,GAAgBlK,EAAU,GAC5BvI,EAAM5H,KAAK,CAAEqT,MAAOlD,EAAS6F,KAAkB,IAAZ7F,EAAgB,SAAW,YAI3C,IAAjBvI,EAAMlM,SACJue,EACFrS,EAAM5H,KAAK,CAAEqT,MAAOiG,EAAQtD,KAAiB,IAAXsD,EAAe,QAAU,WAClDY,EACTtS,EAAM5H,KAAK,CAAEqT,MAAOkG,EAAMvD,KAAe,IAATuD,EAAa,MAAQ,SAC5CY,EACTvS,EAAM5H,KAAK,CAAEqT,MAAO/C,EAAO0F,KAAgB,IAAV1F,EAAc,OAAS,UAC/C8J,EACTxS,EAAM5H,KAAK,CAAEqT,MAAO9C,EAASyF,KAAkB,IAAZzF,EAAgB,SAAW,YACrD8J,GACTzS,EAAM5H,KAAK,CAAEqT,MAAOlD,EAAS6F,KAAkB,IAAZ7F,EAAgB,SAAW,aAQlE,GAHqB,CAAC8J,EAAaC,EAAWC,EAAYC,EAAcC,GAAcxF,OAAOlW,SAASjD,QAGlF,GAAKkM,EAAMlM,OAAS,EAAG,CAEzC,GAAqB,IAAjBkM,EAAMlM,OACR,MAAO,GAAGkM,EAAM,GAAGyL,SAASzL,EAAM,GAAGoO,OAChC,GAAqB,IAAjBpO,EAAMlM,OACf,MAAO,GAAGkM,EAAM,GAAGyL,SAASzL,EAAM,GAAGoO,YAAYpO,EAAM,GAAGyL,SAASzL,EAAM,GAAGoO,MAEhF,CAGA,OAAOpO,EAAMnE,IAAI0X,IACf,MAAMC,EAAYD,EAAKnF,KAAKqF,OAAO,GACnC,MAAO,GAAGF,EAAK9H,QAAQ+H,MACtB5F,KAAK,MAAQ,IAClB,CAKQ,0BAAAmE,CAA2BhJ,GACjC,MAAO,CACL2I,OAAQ,EACRC,KAAM,EACNjJ,MAAOrK,KAAK0I,MAAMgC,EAAU1C,UAAY,MACxCsC,QAAStK,KAAK0I,MAAOgC,EAAU1C,UAAY,KAAQ,IACnDkC,QAASlK,KAAK0I,MAAMgC,EAAU1C,UAAY,IAC1CuL,MAA6B,IAAtB7I,EAAU1C,UAErB,CAMA,gBAAAqN,GACE,OAAOpe,KAAKmc,aACd,CAMA,SAAAkC,GACE,OAAOre,KAAKuc,OACd,CAOA,uBAAA+B,CAAwB/N,GACtB,OAAKA,EACEN,GAAmB6D,oBAAoBvD,GAD5B,EAEpB,QCvbWgO,GAgBX,WAAAxe,GACEC,KAAKwe,MAAQ,CACXC,gBAAiB,KACjBC,mBAAoB,KACpBC,aAAc,KACdC,eAAgB,KAEpB,CAOA,aAAAC,CAAcva,GACZ,OAAKA,GAAW5C,MAAM6C,QAAQD,GAEvBA,EAAOiC,IAAIuY,IAChB,IACE,MAAqB,iBAAVA,EACFA,EACmB,iBAAVA,GAAgC,OAAVA,EAC/BpgB,OAAO+c,QAAQqD,GACnBvY,IAAI,EAAEsV,EAAM1F,KAAW,GAAG0F,MAAS1F,KACnCmC,KAAK,MAEH,EACT,CAAE,MAAOnZ,GAEP,OADAyR,QAAQC,KAAK,yCAA0CiO,EAAO3f,GACvD,EACT,IACCmZ,KAAK,MAhBsC,EAiBhD,CAOA,iBAAAyG,CAAkBlJ,GAEhB,MAAMmJ,EAAard,KAAKC,UAAUiU,EAAOvR,QAAU,CAAA,GACnD,GAAgC,OAA5BtE,KAAKwe,MAAMG,cAAyB3e,KAAKwe,MAAMI,iBAAmBI,EACpE,OAAOhf,KAAKwe,MAAMG,aAGpB,MAAMra,OAAEA,EAAS,CAAA,GAAOuR,EAExB,IACE,MAAMoJ,EAAkB,CACtB9D,KAAMnb,KAAK6e,cAAcva,EAAO6W,MAChC+D,MAAOlf,KAAK6e,cAAcva,EAAO4a,OACjCC,SAAUnf,KAAK6e,cAAcva,EAAO6a,UACpCC,gBAAiBpf,KAAK6e,cAAcva,EAAO8a,kBAK7C,OAFApf,KAAKwe,MAAMG,aAAeM,EAC1Bjf,KAAKwe,MAAMI,eAAiBI,EACrBC,CACT,CAAE,MAAO9f,GAQP,OAPAyR,QAAQC,KAAK,+CAAgD1R,GAC7Da,KAAKwe,MAAMG,aAAe,CACxBxD,KAAM,GACN+D,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAEZpf,KAAKwe,MAAMG,YACpB,CACF,CAKA,kBAAAU,CAAmBnG,EAAYC,EAAanC,GAC1C,MAAMsI,EAAe,IACfC,EAAgB,IACtB,IAAIC,EAAYF,EACZG,EAAaF,EACjB,GAAIrG,GAASC,EAAQ,CAGnBqG,EAFgBxf,KAAK0f,eAAexG,IAEboG,EACvBG,EAFgBzf,KAAK0f,eAAevG,IAEZoG,CAC1B,MAAO,GAAIrG,GAASlC,EAAc,CAEhCwI,EADgBxf,KAAK0f,eAAexG,IACboG,EACvB,MAAOK,EAAQC,GAAU5I,EAAazL,MAAM,KAAKhF,IAAImL,aAChDL,MAAMsO,KAAYtO,MAAMuO,IAAWD,EAAS,IAC/CF,EAAaD,GAAaI,EAASD,GAEvC,MAAO,GAAIxG,GAAUnC,EAAc,CAEjCyI,EADgBzf,KAAK0f,eAAevG,IACZoG,EACxB,MAAOI,EAAQC,GAAU5I,EAAazL,MAAM,KAAKhF,IAAImL,aAChDL,MAAMsO,KAAYtO,MAAMuO,IAAWA,EAAS,IAC/CJ,EAAYC,GAAcE,EAASC,GAEvC,MAAO,GAAI5I,EAAc,CACvB,MAAO2I,EAAQC,GAAU5I,EAAazL,MAAM,KAAKhF,IAAImL,aAChDL,MAAMsO,KAAYtO,MAAMuO,IAAWD,EAAS,IAC/CF,EAAaH,GAAgBM,EAASD,IAExCH,EAAYF,CACd,CAGA,QAFKE,GAAanO,MAAMmO,IAAcA,GAAa,KAAGA,EAAYF,KAC7DG,GAAcpO,MAAMoO,IAAeA,GAAc,KAAGA,EAAaF,GAC/D,CAAEC,YAAWC,aACtB,CAUA,wBAAAI,CAAyB3G,EAAYC,EAAanC,EAAmBmB,GAEnE,MAAM2H,EAAYne,KAAKC,UAAU,CAAEsX,QAAOC,SAAQnC,eAAcmB,cAChE,GAAmC,OAA/BnY,KAAKwe,MAAMC,iBAA4Bze,KAAKwe,MAAMuB,qBAAuBD,EAC3E,OAAO9f,KAAKwe,MAAMC,gBAGpB,IACE,MAAMe,UAAEA,EAASC,WAAEA,GAAezf,KAAKqf,mBAAmBnG,EAAOC,EAAQnC,GAEnEgJ,EAAkC,GADnBjX,KAAKiJ,IAAIwN,EAAWC,GAEzC,IAAIxZ,EAAO+Z,EAGX,GAAI7H,GAA2B,UAAdA,EAAuB,CACtC,MAAM8H,EAAgC,iBAAd9H,EACtB1C,SAAS0C,EAAUtF,QAAQ,KAAM,KACX,iBAAdsF,EAAyBA,EAAY6H,EAE/C/Z,EAASoL,MAAM4O,GAAwBD,EAAXC,CAC9B,CAIA,OAFAjgB,KAAKwe,MAAMC,gBAAkB1V,KAAKyI,IAAI+M,GAAa2B,cAAenX,KAAKiJ,IAAI/L,EAAMsY,GAAa4B,gBAC9FngB,KAAKwe,MAAMuB,mBAAqBD,EACzB9f,KAAKwe,MAAMC,eACpB,CAAE,MAAO/I,GAGP,OAFA9E,QAAQC,KAAK,sDAAuD6E,GACpE1V,KAAKwe,MAAMC,gBAAkBF,GAAa2B,cACnClgB,KAAKwe,MAAMC,eACpB,CACF,CAQA,2BAAA2B,CAA4BC,EAAenJ,GAEzC,MAAM4I,EAAYne,KAAKC,UAAU,CAAEye,WAAUnJ,iBAC7C,GAAsC,OAAlClX,KAAKwe,MAAME,oBAA+B1e,KAAKwe,MAAM8B,uBAAyBR,EAChF,OAAO9f,KAAKwe,MAAME,mBAGpB,IAEE,GAAIxH,GAAwC,iBAAjBA,EACzBlX,KAAKwe,MAAME,mBAAqB3V,KAAKyI,IAAI+M,GAAagC,WAAYxX,KAAKiJ,IAAIkF,EAAcqH,GAAaiC,iBACjG,CAEL,MAAMC,EAAQ,IACRC,EAAa3X,KAAK4X,MAAMN,EAAWI,GACzCzgB,KAAKwe,MAAME,mBAAqB3V,KAAKyI,IAAI+M,GAAagC,WAAYxX,KAAKiJ,IAAI0O,EAAYnC,GAAaiC,YACtG,CAGA,OADAxgB,KAAKwe,MAAM8B,qBAAuBR,EAC3B9f,KAAKwe,MAAME,kBACpB,CAAE,MAAOhJ,GAGP,OAFA9E,QAAQC,KAAK,yDAA0D6E,GACvE1V,KAAKwe,MAAME,mBAAqBH,GAAagC,WACtCvgB,KAAKwe,MAAME,kBACpB,CACF,CASA,0BAAAkC,CAA2B1H,EAAYC,EAAanC,GAClD,IACE,MAAMwI,UAAEA,EAASC,WAAEA,GAAezf,KAAKqf,mBAAmBnG,EAAOC,EAAQnC,GACnE6J,EAAc,KACdC,EAAc/X,KAAKgY,KAAMvB,EAAYC,EAAcoB,GAEzD,MAAO,CACLG,UAAWjY,KAAKyI,IAAI,IAAKzI,KAAKiJ,IAAI,IAAK,IAAM8O,IAC7CG,aAAclY,KAAKyI,IAAI,GAAKzI,KAAKiJ,IAAI,IAAK,IAAM8O,IAChDtB,YACAC,aAEJ,CAAE,MAAO/J,GAEP,OADA9E,QAAQC,KAAK,uDAAwD6E,GAC9D,CAAEsL,UAAW,IAAKC,aAAc,IAAKzB,UAAW,IAAKC,WAAY,IAC1E,CACF,CAOA,cAAAC,CAAewB,GACb,IACE,GAAyB,iBAAdA,EAAwB,OAAOA,EAC1C,GAAyB,iBAAdA,EAAwB,OAAO,KAE1C,MAAMC,EAASD,EAAUtc,cAEzB,GAAIuc,EAAO/Q,SAAS,KAAM,CACxB,MAAMwI,EAAUlH,WAAWyP,EAAOtO,QAAQ,IAAK,KAC/C,OAAOxB,MAAMuH,GAAW,KAAQA,EAAU,IAAO,GACnD,CAEA,GAAIuI,EAAO/Q,SAAS,MAAO,CACzB,MAAMgR,EAAS1P,WAAWyP,EAAOtO,QAAQ,KAAM,KAC/C,OAAOxB,MAAM+P,GAAU,KAAOA,CAChC,CAEA,MAAM/H,EAAS3H,WAAWyP,GAC1B,OAAO9P,MAAMgI,GAAU,KAAOA,CAChC,CAAE,MAAO3D,GAEP,OADA9E,QAAQC,KAAK,0CAA2CqQ,EAAWxL,GAC5D,IACT,CACF,CASA,2BAAA2L,CAA4BnI,EAAYC,EAAanC,GACnD,MAAMsK,EAAa,GAGnB,GAAIpI,EAAO,CACT,MAAMqI,EAAiBvhB,KAAKwhB,sBAAsBtI,GAC9CqI,GACFD,EAAWxe,KAAK,UAAUye,IAE9B,CAGA,GAAIpI,EAAQ,CACV,MAAMsI,EAAkBzhB,KAAKwhB,sBAAsBrI,GAC/CsI,GACFH,EAAWxe,KAAK,WAAW2e,IAE/B,MAAWzK,IAAiBmC,GAE1BmI,EAAWxe,KAAK,iBAAiBkU,KAQnC,OAJKmC,GAAWnC,GACdsK,EAAWxe,KAAK,qBAGXwe,CACT,CAOQ,qBAAAE,CAAsBrL,GAC5B,IAAKA,EAAO,OAAO,KAEnB,MAAMuL,EAAWtf,OAAO+T,GAAOqE,OAG/B,GAAI,kDAAkDjQ,KAAKmX,GACzD,OAAOA,EAIT,MAAMC,EAAWjQ,WAAWgQ,GAC5B,OAAKrQ,MAAMsQ,GAKJ,KAJE,GAAGA,KAKd,CAKA,UAAAC,GACE5hB,KAAKwe,MAAQ,CACXC,gBAAiB,KACjBC,mBAAoB,KACpBC,aAAc,KACdC,eAAgB,KAEpB,CASA,iBAAAiD,CAAkB3I,EAAYC,EAAanC,GACzC,OAAOhX,KAAKqf,mBAAmBnG,EAAOC,EAAQnC,EAChD,EA/UOuH,GAAA2B,cAAgB,GAChB3B,GAAA4B,cAAgB,IAChB5B,GAAAgC,WAAa,EACbhC,GAAAiC,WAAa,GCEhB,MAAOsB,WAAqBlS,GAAlC,WAAA7P,uBAC6BC,KAAA8V,OAA4B,GAC3B9V,KAAAkf,MAAgB,sBA4D9C,CA1DE,iBAAW5a,GACT,OAAOyd,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA+BZ,CAEA,MAAAvS,GACE,IAAKxP,KAAK8V,QAAiC,IAAvB9V,KAAK8V,OAAOtX,OAC9B,OAAOwjB,CAAI,GAIb,MAAMC,EAAiBjiB,KAAK8V,OAAO6B,OAAOxY,GAAoB,aAAfA,EAAE8W,UAA0C,YAAf9W,EAAE8W,UAE9E,OAA8B,IAA1BgM,EAAezjB,OACVwjB,CAAI,GAGNA,CAAI;;;YAGHC,EAAe1b,IAAImP,GAASsM,CAAI;;0CAEFtM,EAAMK,iBAAiBL,EAAMM;;;;;KAMrE,EA5D2BhY,EAAA,CAA1BkkB,GAAS,CAAE/f,KAAMT,SAAwCogB,GAAAtiB,UAAA,cAAA,GAC9BxB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAMC,UAAiD0f,GAAAtiB,UAAA,aAAA,GA+DrE2iB,eAAeC,OAAO,gBAAiBN,IChEjC,MAAOO,WAAyBzS,GA4BpC,iBAAWtL,GACT,OAAOyd,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyHZ,CAEA,WAAAhiB,GACE8E,QAvJ0B7E,KAAAuQ,KAA6B,KAC7BvQ,KAAA6V,OAAqB7V,KAAKsiB,gBAGrCtiB,KAAAuiB,gBAA8BviB,KAAKsiB,gBACnCtiB,KAAAwiB,UAAoB,EACpBxiB,KAAAyiB,WAA6B,CAC5CrG,OAAQ,EACRC,KAAM,EACNjJ,MAAO,EACPC,QAAS,EACTJ,QAAS,EACTqJ,MAAO,GAEQtc,KAAA0iB,UAAoB,EACpB1iB,KAAA2iB,kBAA6C,KAC7C3iB,KAAA4iB,cAAwB,EAGjC5iB,KAAA6iB,SAAkD,KAGlD7iB,KAAAic,gBAAkB,IAAItC,GACtB3Z,KAAA8iB,iBAAmB,IAAI9G,GAAiBhc,KAAKic,gBAAiBjI,IAC9DhU,KAAA+iB,aAAe,IAAIxE,GAiIzB,MAAMyE,EAAahjB,KAAKsiB,gBACxBtiB,KAAK6V,OAASmN,EACdhjB,KAAKuiB,gBAAkBS,CACzB,CAGA,oBAAOV,GACL,MAAO,CACLngB,KAAM,4BACNoU,YAAa,sBACbM,cAAe,sBACfJ,aAAc,GACdyI,MAAO,qBACPlC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdjF,eAAgB,UAChBD,iBAAkB,UAClBf,aAAc,GACdiB,UAAW,IACX8K,mBAAmB,EACnBjF,aAAc,gBACdkF,oBAAoB,EAExB,CAGA,aAAAZ,GACE,OAAOD,GAAiBC,eAC1B,CAEA,SAAAa,CAAUtN,GACR,IAEE,MAAMuN,EAAmBzN,GAAgBC,eAAeC,GAIxD,GAHA7V,KAAK2iB,kBAAoBS,EAGrBA,EAAiB/M,kBAEnBrW,KAAK6V,OAASuN,EAAiB5L,YAAcxX,KAAKsiB,gBAClDtiB,KAAKuiB,gBAAkB,IAAKviB,KAAK6V,YAC5B,IAAIuN,EAAiB9M,YAM1B,OAJAtW,KAAK6V,OAAS,IAAKA,GACnB7V,KAAKuiB,gBAAkB,IAAK1M,GAC5B7V,KAAK4iB,cAAe,OACpB5iB,KAAK4D,gBAIL5D,KAAK6V,OAAS,IAAKA,GACnB7V,KAAKuiB,gBAAkB,IAAK1M,EAC9B,CAEA7V,KAAK4iB,cAAe,EACpB5iB,KAAKic,gBAAgBZ,qBACrBrb,KAAK+iB,aAAanB,aAGlB5hB,KAAKqjB,4BAA4BC,KAAK,KACpCtjB,KAAK4iB,cAAe,EACpB5iB,KAAK4D,iBAET,CAAE,MAAO2f,GAEP3S,QAAQ8E,MAAM,iDAAkD6N,GAGhEvjB,KAAK2iB,kBAAoB,CACvBvM,SAAS,EACTN,OAAQ,CAAC,CACPC,MAAO,SACPC,QAAUuN,EAAcvN,SAAW,iCACnCC,SAAU,WACVC,WAAY,kEACZC,MAAON,IAETQ,mBAAmB,EACnBC,aAAa,EACbkB,WAAYxX,KAAKsiB,iBAGnBtiB,KAAK6V,OAAS7V,KAAKsiB,gBACnBtiB,KAAKuiB,gBAAkB,IAAKviB,KAAK6V,QACjC7V,KAAK4iB,cAAe,EAGpB5iB,KAAK4D,eACP,CACF,CAGA,YAAAyE,GAEErI,KAAKic,gBAAgBd,KAAOnb,KAG5BA,KAAKqjB,4BAA4BC,KAAK,KACpCtjB,KAAK4iB,cAAe,EACpB5iB,KAAK4D,gBACL5D,KAAKwjB,0BAET,CAGA,oBAAAzc,GACElC,MAAMkC,uBACN/G,KAAKyjB,uBACP,CAEA,OAAAnb,CAAQob,IACFA,EAAkBjc,IAAI,SAAWic,EAAkBjc,IAAI,aAEzDzH,KAAKic,gBAAgBZ,qBACrBrb,KAAKqjB,4BAET,CAKA,sBAAAG,GACExjB,KAAKyjB,wBACLzjB,KAAK6iB,SAAWc,YAAY,KAC1B3jB,KAAKqjB,4BAA4BO,MAAMhT,QAAQ8E,QAC9C,IACL,CAKA,qBAAA+N,GACMzjB,KAAK6iB,WACPgB,cAAc7jB,KAAK6iB,UACnB7iB,KAAK6iB,SAAW,KAEpB,CAKA,+BAAMQ,SAEJ,WAAInI,EAAAlb,KAAK2iB,wCAAmBtM,kBAAmB,OAG/C,MAAMyN,EAAiB,IAAK9jB,KAAK6V,QAG3BkO,EAAe,CACnB,cACA,gBACA,eACA,QACA,WACA,QACA,mBACA,iBACA,gBACA,kBACA,gBAIF,IAAK,MAAM5lB,KAAO4lB,EAChB,GAAmC,iBAAxBD,EAAe3lB,IAAqB6B,KAAKic,gBAAgB1D,WAAWuL,EAAe3lB,IAAiB,CAC7G,MAAM6lB,QAAsBhkB,KAAKic,gBAAgBhB,aAAa6I,EAAe3lB,IAC7E2lB,EAAe3lB,GAAO6lB,QAAiBrN,CACzC,CAIF3W,KAAKuiB,gBAAkBuB,QAGjB9jB,KAAK8iB,iBAAiBtG,gBAAgBsH,EAAgB9jB,KAAKuQ,MAGjEvQ,KAAKyiB,WAAa,IAAKziB,KAAK8iB,iBAAiB1E,oBAC7Cpe,KAAK0iB,SAAW1iB,KAAK8iB,iBAAiBzE,YAGtCre,KAAKwiB,gBAAkBxiB,KAAK8iB,iBAAiBrF,kBAAkBqG,EAAgB9jB,KAAKuQ,MAEpFvQ,KAAK4D,eACP,CAEA,MAAA4L,GAEE,OAAIxP,KAAK2iB,oBAAsB3iB,KAAK2iB,kBAAkBvM,QAE7C4L,CAAI;;qBAEIhiB,KAAK2iB,kBAAkB7M;oBACxB9V,KAAK2iB,kBAAkBtM,kBAAoB,sBAAwB;;QAM5ErW,KAAKikB,aACd,CAEQ,WAAAA,GAEN,MAAM/E,MACJA,EAAKC,SACLA,EAAQ+E,MACRA,EAAKjM,iBACLA,EAAgBC,eAChBA,EAAchB,aACdA,EAAYiB,UACZA,EAAS8K,kBACTA,GAAoB,EAAIjF,aACxBA,EAAe,gBAAe9E,MAC9BA,EAAKC,OACLA,EAAMnC,aACNA,EAAYkM,mBACZA,GAAqB,GACnBljB,KAAKuiB,gBAGH4B,EAAiBlM,GAAoB,mEACrCmM,EAAYF,GAAS,kCACrBG,EAAoBnM,GAAkBgM,GAAS,iCAG/CI,EAAoBtkB,KAAK+iB,aAAalD,yBAAyB3G,EAAOC,EAAQnC,EAAcmB,GAC5FoM,EAAgBvkB,KAAK+iB,aAAa3C,4BAA4BkE,EAAmBpN,GAGjFsN,EAAoBxkB,KAAK+iB,aAAanC,2BAA2B1H,EAAOC,EAAQnC,GAGhFyN,EAAkBzkB,KAAK+iB,aAAa1B,4BAA4BnI,EAAOC,EAAQnC,GAG/EsK,EAAa,CACjB,eAAe6C,IACf,UAAUC,IACV,qCAAqCD,IACrC,+BAA+BC,IAC/B,mCAAmCC,IACnC,8BAA8BC,MAC9B,iCAAiCC,IACjC,0BAA0BC,EAAkBxD,eAC5C,6BAA6BwD,EAAkBvD,kBAC/C,0BAA0BmD,OACvBK,GACHnM,KAAK,MAGDoM,EAAe1kB,KAAK0iB,SACtB1E,EACCmB,IAAanf,KAAKuiB,gBAAgB9L,cAAgBzW,KAAKuQ,KACpDN,GAAmByD,iBACjBzD,GAAmBK,aAAatQ,KAAKuiB,gBAAgB9L,aAAczW,KAAKuQ,OAClC,IAAtCvQ,KAAKuiB,gBAAgBpF,cAEvBnd,KAAK8iB,iBAAiB/E,YAAY/d,KAAKuiB,gBAAiBviB,KAAKuQ,OAGrE,IAAIoU,EAAYzF,GACZyF,SAAuE,iBAAdA,GAA+C,KAArBA,EAAUnK,UAE7FmK,EADE3kB,KAAKuiB,gBAAgB9L,cAAgBzW,KAAKuQ,KAChCN,GAAmBsD,cAC7BvT,KAAKuiB,gBAAgB9L,aACrBzW,KAAKuQ,MAGKvQ,KAAK0iB,SAAW1E,EAAe,mBAK/C,MAAM4G,EAAc,CAClB5kB,KAAK4iB,aAAe,cAAgB,GACnC5iB,KAAK0iB,UAAYO,EAAqB,UAAY,IACnDtL,OAAOlW,SAAS6W,KAAK,KAKvB,OAFA1H,QAAQiU,IAAI,4CAA6C3B,SAA2BA,GAE7ElB,CAAI;wBACS4C,aAAuBtD;;;;qDAIMqD;uDACED;;;;;;;;6BAQ1B1kB,KAAKwiB;0BACR6B;yBACDC;gCACOC;sCAC4B,IAAvBrB;kDACana,KAAK4X,MAAM3gB,KAAKwiB;;;;;;KAOhE,CAKA,WAAAsC,GACE,MAAM9N,aAAEA,EAAe,MAAKmC,OAAEA,GAAWnZ,KAAK6V,OAC9C,GAAIsD,EAAQ,CACV,MAAM4L,EAActP,SAA2B,iBAAX0D,EAAsBA,EAASA,EAAO3Y,YAC1E,OAAIukB,GAAe,IAAY,EAC3BA,GAAe,IAAY,EAC3BA,GAAe,IAAY,EACxB,CACT,CACA,GAAI/N,EAAc,CAChB,MAAOkC,EAAOC,GAAUnC,EAAazL,MAAM,KAAKhF,IAAIzE,QACpD,IAAKoX,IAAUC,EAAQ,OAAO,EAC9B,MAAMsH,EAAQtH,EAASD,EACvB,OAAIuH,GAAS,IAAY,EACrBA,GAAS,EAAU,EACG,CAE5B,CACA,OAAO,CACT,CAGA,kBAAWuE,GACT,MAAO,WACT,EA7e4BhnB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAMzD,UAA4C2jB,GAAA7iB,UAAA,YAAA,GAClCxB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAMzD,UAAoD2jB,GAAA7iB,UAAA,cAAA,GAGrDxB,EAAA,CAAhBoF,MAAmEif,GAAA7iB,UAAA,uBAAA,GACnDxB,EAAA,CAAhBoF,MAAsCif,GAAA7iB,UAAA,iBAAA,GACtBxB,EAAA,CAAhBoF,MAOCif,GAAA7iB,UAAA,kBAAA,GACexB,EAAA,CAAhBoF,MAA0Cif,GAAA7iB,UAAA,gBAAA,GAC1BxB,EAAA,CAAhBoF,MAAkEif,GAAA7iB,UAAA,yBAAA,GAClDxB,EAAA,CAAhBoF,MAA8Cif,GAAA7iB,UAAA,oBAAA,GC1B3C,MAAOylB,WAA2BrV,GAOtC,iBAAWtL,GACT,OAAOyd,CAAG;;;;;;;;;;;;;;;;;;;;;;;;KAyBZ,CAEA,WAAAhiB,GACE8E,QAnC0B7E,KAAA8R,SAAmB,EACnB9R,KAAAkkB,MAAgB,UAChBlkB,KAAAiG,KAAe,IACfjG,KAAAklB,YAAsB,GACrBllB,KAAAmlB,kBAA4B,EAgCvDnlB,KAAK8R,SAAW,EAChB9R,KAAKkkB,MAAQ,UACblkB,KAAKiG,KAAO,IACZjG,KAAKklB,YAAc,GACnBllB,KAAKmlB,kBAAmB,CAC1B,CAGA,OAAA7c,CAAQ8c,SAON,GALIA,EAAQ3d,IAAI,qBACdmJ,QAAQiU,IAAI,gDAAiD7kB,KAAKmlB,wBAAyBnlB,KAAKmlB,kBAI9FC,EAAQ3d,IAAI,YAAa,CAC3B,MAAM4d,EAAwB,QAAfnK,EAAAlb,KAAK4F,kBAAU,IAAAsV,OAAA,EAAAA,EAAEoK,cAAc,iBAC1CD,IACFA,EAAOE,UAAU5f,IAAI,YACrB6f,WAAW,KACLH,GAAQA,EAAOE,UAAUjX,OAAO,aACnC,KAEP,CACF,CAGA,UAAAvG,CAAWqd,GACLA,EAAQ3d,IAAI,qBACdmJ,QAAQiU,IAAI,gDAAiD7kB,KAAKmlB,iBAEtE,CAGA,cAAAM,CAAe3T,EAAkB4T,GAAmB,SAClD,GAAIA,EACF1lB,KAAK8R,SAAWA,MACX,CAEL,MAAM6T,EAAqB,QAAfzK,EAAAlb,KAAK4F,kBAAU,IAAAsV,OAAA,EAAAA,EAAEoK,cAAc,iBAC3CtlB,KAAK8R,SAAWA,EACZ6T,IAAKA,EAAI7G,MAAM8G,WAAa,QAChCJ,WAAW,KAAYG,IAAKA,EAAI7G,MAAM8G,WAAa,KAAO,GAC5D,CACF,CAEA,WAAAC,GACE,OAAO7lB,KAAK8R,QACd,CAEA,MAAAtC,GACE,MAAMsW,EAAe/c,KAAKyI,IAAI,EAAGzI,KAAKiJ,IAAI,IAAKlQ,OAAO9B,KAAK8R,WAAa,IAClE7L,EAAOnE,OAAO9B,KAAKiG,OAAS,IAC5B8f,EAASjkB,OAAO9B,KAAKklB,cAAgB,GACrCc,GAAU/f,EAAO8f,GAAU,EAC3BE,EAAgB,EAAIld,KAAKmd,GAAKF,EAC9BG,EAASF,EAAiBH,EAAe,IAAOG,EAGhDG,EAAWrd,KAAKyI,IAAI,GAAIzI,KAAKiJ,IAAI,GAAW,IAAP/L,IAK3C,OAFA2K,QAAQiU,IAAI,4CAA6C7kB,KAAKmlB,iBAAkB,YAAaW,GAEtF9D,CAAI;mDACoC/b,eAAkBA;;;oBAGjDA,aAAgBA;;;;;kBAKlBA,EAAO,UAAUA,EAAO;iBACzB+f;;;4BAGWD;;;;kBAIV9f,EAAO,UAAUA,EAAO;iBACzB+f;;sBAEKhmB,KAAKkkB;4BACC6B;;;kCAGME;mCACCE;;;kCAGDlgB,EAAO,OAAOA,EAAO;;;;YAI3CjG,KAAKmlB,iBACHnD,CAAI;;;;;sCAKoBoE;;oBAElBrd,KAAK4X,MAAMmF;;gBAGjB9D,CAAI;;;KAIhB,EAnJ4BhkB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAML,UAA+BmjB,GAAAzlB,UAAA,gBAAA,GACrBxB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAMC,UAAoC6iB,GAAAzlB,UAAA,aAAA,GAC1BxB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAML,UAA6BmjB,GAAAzlB,UAAA,YAAA,GACnBxB,EAAA,CAA3BkkB,GAAS,CAAE/f,KAAML,UAAmCmjB,GAAAzlB,UAAA,mBAAA,GACxBxB,EAAA,CAA5BkkB,GAAS,CAAE/f,KAAMV,WAA6CwjB,GAAAzlB,UAAA,wBAAA,GCc5D2iB,eAAe9hB,IAAI,iBAItBuQ,QAAQyV,MAAM,8DAHdlE,eAAeC,OAAO,gBAAiBN,IACvClR,QAAQyV,MAAM,sDAKXlE,eAAe9hB,IAAI,wBAItBuQ,QAAQyV,MAAM,qEAHdlE,eAAeC,OAAO,uBAAwB6C,IAC9CrU,QAAQyV,MAAM,6DAKXlE,eAAe9hB,IAAI,sBAItBuQ,QAAQyV,MAAM,mEAHdlE,eAAeC,OAAO,qBAAsBC,IAC5CzR,QAAQyV,MAAM,2DAMhBC,OAAOC,YAAcD,OAAOC,aAAe,GAC3CD,OAAOC,YAAYzjB,KAAK,CACtBX,KAAM,qBACNsJ,KAAM,8BACN+a,YAAa,sFACbC,SAAS,EACTC,iBAAkB,+CAGpB9V,QAAQ+V,KACN,6CACA,sDACA","x_google_ignoreList":[0,1,2,3,4,5,6]}